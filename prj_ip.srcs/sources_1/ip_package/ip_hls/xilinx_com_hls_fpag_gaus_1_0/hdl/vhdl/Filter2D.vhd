-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_1_V_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_kernel_val_2_V_2_read : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_72 : STD_LOGIC_VECTOR (7 downto 0) := "01110010";
    constant ap_const_lv8_71 : STD_LOGIC_VECTOR (7 downto 0) := "01110001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_reg_1789_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1798_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1734 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_1729 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal or_cond_i_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_389_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg393_i_fu_395_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_413_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_fu_419_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_reg_1671 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_0_1_fu_423_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_0_1_reg_1676 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_0_2_fu_427_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_0_2_reg_1681 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_1_fu_431_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_1_reg_1686 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_1_1_fu_435_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_1_1_reg_1691 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_1_2_fu_439_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_1_2_reg_1696 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_2_fu_443_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_2_reg_1701 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_2_1_fu_447_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_2_1_reg_1706 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_2_2_fu_451_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP2_V_2_2_reg_1711 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_91_fu_461_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_fu_472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_92_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond389_i_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_reg_1739 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_342_1_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_342_1_reg_1743 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_reg_1747 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_1_fu_713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_reg_1754 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_1_fu_729_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_1_reg_1759 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_2_fu_745_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_2_reg_1764 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_298_0_not_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_298_0_not_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_119_fu_762_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_119_reg_1774 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_120_fu_770_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_120_reg_1779 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_121_fu_778_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_121_reg_1784 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op187_read_state6 : BOOLEAN;
    signal ap_predicate_op198_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond388_i_reg_1789_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_reg_1789_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_787_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1802 : STD_LOGIC_VECTOR (31 downto 0);
    signal brmerge_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1808 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1808_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1815_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1819 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_125_fu_926_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_125_reg_1825 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1832 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1838 : STD_LOGIC_VECTOR (9 downto 0);
    signal src_kernel_win_0_va_6_fu_1049_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1844 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1844_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1067_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1850 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1850_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1850_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1085_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1856 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_0_1_fu_1488_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_0_1_reg_1862 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_0_2_fu_1493_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_0_2_reg_1867 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_1_1_fu_1498_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_1_1_reg_1872 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_kernel_win_0_va_16_reg_1877 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_reg_1882 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_78_1_fu_1155_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_78_1_reg_1887 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1519_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp25_reg_1892 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal r_V_3_2_2_fu_1534_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_2_2_reg_1897 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_s_fu_1222_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_s_reg_1903 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_78_2_2_cast_fu_1228_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_78_2_2_cast_reg_1908 : STD_LOGIC_VECTOR (26 downto 0);
    signal is_neg_reg_1914 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1914_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1920_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_fu_1252_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_68_reg_1925 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_68_reg_1925_pp0_iter7_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_i_i_cast_fu_1258_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_i_i_cast_reg_1930 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_i_i_cast_reg_1930_pp0_iter7_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal num_zeros_fu_1280_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_reg_1936 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_fu_1288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_1941_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_1_fu_1305_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_1_reg_1946 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp2_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_1951 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_1956 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_fu_1339_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_134_reg_1962 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_136_fu_1345_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_136_reg_1967 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp32_V_3_fu_1415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_3_reg_1972 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_6_fu_1422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_6_reg_1977 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_139_i_i_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_i_i_reg_1982 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_105_fu_920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_959_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_977_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_995_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_99_fu_407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_fu_483_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_96_fu_516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_fu_561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_1_fu_579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_115_fu_585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_368_1_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_610_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_1_fu_624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_2_fu_642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_368_2_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_681_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_2_fu_687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_98_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_574_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_p_assign_8_fu_705_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_378_1_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_1_fu_637_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_1_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_p_assig_fu_721_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_378_2_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_2_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_2_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_p_assig_fu_737_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_8_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_8_1_fu_766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_8_2_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_fu_793_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_fu_840_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_848_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i_i_fu_854_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_2_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_not_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_872_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp1_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_1_fu_916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_fu_948_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_107_fu_966_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_fu_984_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_109_fu_1038_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_110_fu_1056_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_111_fu_1074_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1503_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1511_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp21_cast_fu_1152_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_78_0_1_cast_fu_1142_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1526_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp25_cast_fu_1204_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1539_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_78_2_1_fu_1207_p2 : STD_LOGIC_VECTOR (26 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_78_2_1_fu_1207_p2 : signal is "no";
    signal p_Val2_78_2_1_cast_fu_1212_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_386_2_2_fu_1216_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_112_fu_1219_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_i_i_cast_fu_1247_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Result_17_fu_1262_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Result_18_fu_1272_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_fu_1297_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_1293_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_131_fu_1313_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_132_fu_1329_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_137_i_i_fu_1354_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_fu_1351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_137_i_i_cast_fu_1359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_135_fu_1369_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_138_fu_1384_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_137_fu_1378_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_139_fu_1389_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_140_fu_1393_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_141_fu_1399_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_s_fu_1403_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp32_V_1_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_2_fu_1411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_i_i_fu_1426_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp27_cast_cast_fu_1445_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_143_fu_1442_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_10_trunc_i_fu_1452_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_i_i_fu_1458_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_19_fu_1465_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_1476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_0_1_fu_1488_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_0_1_fu_1488_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_0_2_fu_1493_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_0_2_fu_1493_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_1_1_fu_1498_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_1_1_fu_1498_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1503_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1503_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1511_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1511_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1519_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1519_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1526_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1526_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_2_2_fu_1534_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_2_2_fu_1534_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1539_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1539_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_380_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1503_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1511_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1519_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1526_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1539_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_0_1_fu_1488_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_0_2_fu_1493_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_1_1_fu_1498_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_2_2_fu_1534_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_538 : BOOLEAN;
    signal ap_condition_532 : BOOLEAN;

    component fpag_gaus_uitofp_Aem IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fpag_gaus_mux_32_Bew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fpag_gaus_mul_mulCeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component fpag_gaus_mac_mulDeQ IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component fpag_gaus_mac_mulEe0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component fpag_gaus_mac_mulFfa IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component Filter2D_k_buf_0_xdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_xdS
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1819,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_xdS
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1832,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_xdS
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1838,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    fpag_gaus_uitofp_Aem_U52 : component fpag_gaus_uitofp_Aem
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp32_V_3_reg_1972,
        ce => grp_fu_380_ce,
        dout => grp_fu_380_p1);

    fpag_gaus_mux_32_Bew_U53 : component fpag_gaus_mux_32_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_196,
        din1 => right_border_buf_0_1_fu_200,
        din2 => ap_const_lv8_0,
        din3 => tmp_125_reg_1825,
        dout => tmp_106_fu_948_p5);

    fpag_gaus_mux_32_Bew_U54 : component fpag_gaus_mux_32_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_208,
        din1 => right_border_buf_0_4_fu_212,
        din2 => ap_const_lv8_0,
        din3 => tmp_125_reg_1825,
        dout => tmp_107_fu_966_p5);

    fpag_gaus_mux_32_Bew_U55 : component fpag_gaus_mux_32_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_216,
        din1 => right_border_buf_0_2_fu_204,
        din2 => ap_const_lv8_0,
        din3 => tmp_125_reg_1825,
        dout => tmp_108_fu_984_p5);

    fpag_gaus_mux_32_Bew_U56 : component fpag_gaus_mux_32_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_959_p3,
        din1 => col_buf_0_val_1_0_fu_977_p3,
        din2 => col_buf_0_val_2_0_fu_995_p3,
        din3 => tmp_119_reg_1774,
        dout => tmp_109_fu_1038_p5);

    fpag_gaus_mux_32_Bew_U57 : component fpag_gaus_mux_32_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_959_p3,
        din1 => col_buf_0_val_1_0_fu_977_p3,
        din2 => col_buf_0_val_2_0_fu_995_p3,
        din3 => tmp_120_reg_1779,
        dout => tmp_110_fu_1056_p5);

    fpag_gaus_mux_32_Bew_U58 : component fpag_gaus_mux_32_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_959_p3,
        din1 => col_buf_0_val_1_0_fu_977_p3,
        din2 => col_buf_0_val_2_0_fu_995_p3,
        din3 => tmp_121_reg_1784,
        dout => tmp_111_fu_1074_p5);

    fpag_gaus_mul_mulCeG_U59 : component fpag_gaus_mul_mulCeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_3_0_1_fu_1488_p0,
        din1 => r_V_3_0_1_fu_1488_p1,
        dout => r_V_3_0_1_fu_1488_p2);

    fpag_gaus_mul_mulCeG_U60 : component fpag_gaus_mul_mulCeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_3_0_2_fu_1493_p0,
        din1 => r_V_3_0_2_fu_1493_p1,
        dout => r_V_3_0_2_fu_1493_p2);

    fpag_gaus_mul_mulCeG_U61 : component fpag_gaus_mul_mulCeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_3_1_1_fu_1498_p0,
        din1 => r_V_3_1_1_fu_1498_p1,
        dout => r_V_3_1_1_fu_1498_p2);

    fpag_gaus_mac_mulDeQ_U62 : component fpag_gaus_mac_mulDeQ
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1503_p0,
        din1 => grp_fu_1503_p1,
        din2 => r_V_3_0_1_reg_1862,
        dout => grp_fu_1503_p3);

    fpag_gaus_mac_mulDeQ_U63 : component fpag_gaus_mac_mulDeQ
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1511_p0,
        din1 => grp_fu_1511_p1,
        din2 => r_V_3_0_2_reg_1867,
        dout => grp_fu_1511_p3);

    fpag_gaus_mac_mulEe0_U64 : component fpag_gaus_mac_mulEe0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1519_p0,
        din1 => grp_fu_1519_p1,
        din2 => grp_fu_1526_p3,
        dout => grp_fu_1519_p3);

    fpag_gaus_mac_mulDeQ_U65 : component fpag_gaus_mac_mulDeQ
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1526_p0,
        din1 => grp_fu_1526_p1,
        din2 => r_V_3_1_1_reg_1872,
        dout => grp_fu_1526_p3);

    fpag_gaus_mul_mulCeG_U66 : component fpag_gaus_mul_mulCeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_3_2_2_fu_1534_p0,
        din1 => r_V_3_2_2_fu_1534_p1,
        dout => r_V_3_2_2_fu_1534_p2);

    fpag_gaus_mac_mulFfa_U67 : component fpag_gaus_mac_mulFfa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 27)
    port map (
        din0 => grp_fu_1539_p0,
        din1 => grp_fu_1539_p1,
        din2 => p_Val2_78_1_reg_1887,
        dout => grp_fu_1539_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_782_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state6)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_782_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_369 <= j_V_fu_787_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_2_reg_369 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                t_V_reg_358 <= i_V_reg_1724;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_358 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                OP2_V_0_1_reg_1676 <= OP2_V_0_1_fu_423_p1;
                OP2_V_0_2_reg_1681 <= OP2_V_0_2_fu_427_p1;
                OP2_V_1_1_reg_1691 <= OP2_V_1_1_fu_435_p1;
                OP2_V_1_2_reg_1696 <= OP2_V_1_2_fu_439_p1;
                OP2_V_1_reg_1686 <= OP2_V_1_fu_431_p1;
                OP2_V_2_1_reg_1706 <= OP2_V_2_1_fu_447_p1;
                OP2_V_2_2_reg_1711 <= OP2_V_2_2_fu_451_p1;
                OP2_V_2_reg_1701 <= OP2_V_2_fu_443_p1;
                OP2_V_reg_1671 <= OP2_V_fu_419_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1808 <= brmerge_fu_906_p2;
                or_cond_i_i_reg_1798 <= or_cond_i_i_fu_834_p2;
                or_cond_i_reg_1815 <= or_cond_i_fu_911_p2;
                x_reg_1802 <= x_fu_898_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1808_pp0_iter1_reg <= brmerge_reg_1808;
                exitcond388_i_reg_1789 <= exitcond388_i_fu_782_p2;
                exitcond388_i_reg_1789_pp0_iter1_reg <= exitcond388_i_reg_1789;
                or_cond_i_i_reg_1798_pp0_iter1_reg <= or_cond_i_i_reg_1798;
                or_cond_i_reg_1815_pp0_iter1_reg <= or_cond_i_reg_1815;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond388_i_reg_1789_pp0_iter2_reg <= exitcond388_i_reg_1789_pp0_iter1_reg;
                exitcond388_i_reg_1789_pp0_iter3_reg <= exitcond388_i_reg_1789_pp0_iter2_reg;
                is_neg_reg_1914_pp0_iter10_reg <= is_neg_reg_1914_pp0_iter9_reg;
                is_neg_reg_1914_pp0_iter11_reg <= is_neg_reg_1914_pp0_iter10_reg;
                is_neg_reg_1914_pp0_iter12_reg <= is_neg_reg_1914_pp0_iter11_reg;
                is_neg_reg_1914_pp0_iter13_reg <= is_neg_reg_1914_pp0_iter12_reg;
                is_neg_reg_1914_pp0_iter14_reg <= is_neg_reg_1914_pp0_iter13_reg;
                is_neg_reg_1914_pp0_iter6_reg <= is_neg_reg_1914;
                is_neg_reg_1914_pp0_iter7_reg <= is_neg_reg_1914_pp0_iter6_reg;
                is_neg_reg_1914_pp0_iter8_reg <= is_neg_reg_1914_pp0_iter7_reg;
                is_neg_reg_1914_pp0_iter9_reg <= is_neg_reg_1914_pp0_iter8_reg;
                msb_idx_reg_1941_pp0_iter10_reg <= msb_idx_reg_1941_pp0_iter9_reg;
                msb_idx_reg_1941_pp0_iter11_reg <= msb_idx_reg_1941_pp0_iter10_reg;
                msb_idx_reg_1941_pp0_iter12_reg <= msb_idx_reg_1941_pp0_iter11_reg;
                msb_idx_reg_1941_pp0_iter13_reg <= msb_idx_reg_1941_pp0_iter12_reg;
                msb_idx_reg_1941_pp0_iter14_reg <= msb_idx_reg_1941_pp0_iter13_reg;
                msb_idx_reg_1941_pp0_iter8_reg <= msb_idx_reg_1941;
                msb_idx_reg_1941_pp0_iter9_reg <= msb_idx_reg_1941_pp0_iter8_reg;
                or_cond_i_reg_1815_pp0_iter10_reg <= or_cond_i_reg_1815_pp0_iter9_reg;
                or_cond_i_reg_1815_pp0_iter11_reg <= or_cond_i_reg_1815_pp0_iter10_reg;
                or_cond_i_reg_1815_pp0_iter12_reg <= or_cond_i_reg_1815_pp0_iter11_reg;
                or_cond_i_reg_1815_pp0_iter13_reg <= or_cond_i_reg_1815_pp0_iter12_reg;
                or_cond_i_reg_1815_pp0_iter14_reg <= or_cond_i_reg_1815_pp0_iter13_reg;
                or_cond_i_reg_1815_pp0_iter2_reg <= or_cond_i_reg_1815_pp0_iter1_reg;
                or_cond_i_reg_1815_pp0_iter3_reg <= or_cond_i_reg_1815_pp0_iter2_reg;
                or_cond_i_reg_1815_pp0_iter4_reg <= or_cond_i_reg_1815_pp0_iter3_reg;
                or_cond_i_reg_1815_pp0_iter5_reg <= or_cond_i_reg_1815_pp0_iter4_reg;
                or_cond_i_reg_1815_pp0_iter6_reg <= or_cond_i_reg_1815_pp0_iter5_reg;
                or_cond_i_reg_1815_pp0_iter7_reg <= or_cond_i_reg_1815_pp0_iter6_reg;
                or_cond_i_reg_1815_pp0_iter8_reg <= or_cond_i_reg_1815_pp0_iter7_reg;
                or_cond_i_reg_1815_pp0_iter9_reg <= or_cond_i_reg_1815_pp0_iter8_reg;
                p_Val2_68_reg_1925_pp0_iter7_reg <= p_Val2_68_reg_1925;
                    p_Val2_i_i_cast_reg_1930_pp0_iter7_reg(26 downto 0) <= p_Val2_i_i_cast_reg_1930(26 downto 0);
                src_kernel_win_0_va_6_reg_1844_pp0_iter3_reg <= src_kernel_win_0_va_6_reg_1844;
                src_kernel_win_0_va_7_reg_1850_pp0_iter3_reg <= src_kernel_win_0_va_7_reg_1850;
                src_kernel_win_0_va_7_reg_1850_pp0_iter4_reg <= src_kernel_win_0_va_7_reg_1850_pp0_iter3_reg;
                tmp_i_i_reg_1920_pp0_iter10_reg <= tmp_i_i_reg_1920_pp0_iter9_reg;
                tmp_i_i_reg_1920_pp0_iter11_reg <= tmp_i_i_reg_1920_pp0_iter10_reg;
                tmp_i_i_reg_1920_pp0_iter12_reg <= tmp_i_i_reg_1920_pp0_iter11_reg;
                tmp_i_i_reg_1920_pp0_iter13_reg <= tmp_i_i_reg_1920_pp0_iter12_reg;
                tmp_i_i_reg_1920_pp0_iter14_reg <= tmp_i_i_reg_1920_pp0_iter13_reg;
                tmp_i_i_reg_1920_pp0_iter7_reg <= tmp_i_i_reg_1920;
                tmp_i_i_reg_1920_pp0_iter8_reg <= tmp_i_i_reg_1920_pp0_iter7_reg;
                tmp_i_i_reg_1920_pp0_iter9_reg <= tmp_i_i_reg_1920_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1724 <= i_V_fu_472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter6_reg = ap_const_lv1_1) and (tmp_i_i_reg_1920 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp2_reg_1951 <= icmp2_fu_1323_p2;
                msb_idx_1_reg_1946 <= msb_idx_1_fu_1305_p3;
                msb_idx_reg_1941 <= msb_idx_fu_1288_p2;
                tmp_133_reg_1956 <= tmp_133_fu_1333_p2;
                tmp_134_reg_1962 <= tmp_134_fu_1339_p2;
                tmp_136_reg_1967 <= tmp_136_fu_1345_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1734 <= icmp_fu_493_p2;
                tmp_342_1_reg_1743 <= tmp_342_1_fu_505_p2;
                tmp_92_reg_1729 <= tmp_92_fu_478_p2;
                tmp_94_reg_1739 <= tmp_94_fu_499_p2;
                tmp_95_reg_1747 <= tmp_95_fu_511_p2;
                y_1_1_reg_1759 <= y_1_1_fu_729_p3;
                y_1_2_reg_1764 <= y_1_2_fu_745_p3;
                y_1_reg_1754 <= y_1_fu_713_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                is_neg_reg_1914 <= p_Val2_s_fu_1222_p2(27 downto 27);
                p_Val2_78_2_2_cast_reg_1908 <= p_Val2_78_2_2_cast_fu_1228_p2;
                p_Val2_s_reg_1903 <= p_Val2_s_fu_1222_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1789 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1819 <= tmp_105_fu_920_p1(10 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1832 <= tmp_105_fu_920_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1838 <= tmp_105_fu_920_p1(10 - 1 downto 0);
                tmp_125_reg_1825 <= tmp_125_fu_926_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                num_zeros_reg_1936 <= num_zeros_fu_1280_p3;
                p_Val2_68_reg_1925 <= p_Val2_68_fu_1252_p3;
                    p_Val2_i_i_cast_reg_1930(26 downto 0) <= p_Val2_i_i_cast_fu_1258_p1(26 downto 0);
                tmp_i_i_reg_1920 <= tmp_i_i_fu_1242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_78_1_reg_1887 <= p_Val2_78_1_fu_1155_p2;
                r_V_3_2_2_reg_1897 <= r_V_3_2_2_fu_1534_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_3_0_1_reg_1862 <= r_V_3_0_1_fu_1488_p2;
                r_V_3_0_2_reg_1867 <= r_V_3_0_2_fu_1493_p2;
                r_V_3_1_1_reg_1872 <= r_V_3_1_1_fu_1498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1))) then
                right_border_buf_0_1_fu_200 <= right_border_buf_0_s_fu_196;
                right_border_buf_0_2_fu_204 <= right_border_buf_0_5_fu_216;
                right_border_buf_0_3_fu_208 <= col_buf_0_val_1_0_fu_977_p3;
                right_border_buf_0_4_fu_212 <= right_border_buf_0_3_fu_208;
                right_border_buf_0_5_fu_216 <= col_buf_0_val_2_0_fu_995_p3;
                right_border_buf_0_s_fu_196 <= col_buf_0_val_0_0_fu_959_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1789_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1877 <= src_kernel_win_0_va_2_fu_180;
                src_kernel_win_0_va_17_reg_1882 <= src_kernel_win_0_va_4_fu_188;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1789_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_176 <= src_kernel_win_0_va_fu_172;
                src_kernel_win_0_va_3_fu_184 <= src_kernel_win_0_va_16_reg_1877;
                src_kernel_win_0_va_5_fu_192 <= src_kernel_win_0_va_17_reg_1882;
                src_kernel_win_0_va_fu_172 <= src_kernel_win_0_va_6_reg_1844_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1789_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_180 <= src_kernel_win_0_va_7_reg_1850;
                src_kernel_win_0_va_4_fu_188 <= src_kernel_win_0_va_8_reg_1856;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_6_reg_1844 <= src_kernel_win_0_va_6_fu_1049_p3;
                src_kernel_win_0_va_7_reg_1850 <= src_kernel_win_0_va_7_fu_1067_p3;
                src_kernel_win_0_va_8_reg_1856 <= src_kernel_win_0_va_8_fu_1085_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp25_reg_1892 <= grp_fu_1519_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter7_reg = ap_const_lv1_1) and (tmp_i_i_reg_1920_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp32_V_3_reg_1972 <= tmp32_V_3_fu_1415_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1815_pp0_iter13_reg = ap_const_lv1_1) and (tmp_i_i_reg_1920_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp32_V_6_reg_1977 <= tmp32_V_6_fu_1422_p1;
                tmp_139_i_i_reg_1982 <= tmp_139_i_i_fu_1436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_95_reg_1747 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_119_reg_1774 <= tmp_119_fu_762_p1;
                tmp_120_reg_1779 <= tmp_120_fu_770_p1;
                tmp_121_reg_1784 <= tmp_121_fu_778_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_298_0_not_reg_1769 <= tmp_298_0_not_fu_753_p2;
            end if;
        end if;
    end process;
    p_Val2_i_i_cast_reg_1930(27) <= '0';
    p_Val2_i_i_cast_reg_1930_pp0_iter7_reg(27) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, ap_CS_fsm_state2, exitcond389_i_fu_467_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter14)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ImagLoc_x_fu_809_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_2_reg_369));
        OP2_V_0_1_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),24));

        OP2_V_0_2_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),24));

        OP2_V_1_1_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_1_read),24));

        OP2_V_1_2_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_2_read),24));

        OP2_V_1_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),24));

        OP2_V_2_1_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_1_read),24));

        OP2_V_2_2_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_2_read),24));

        OP2_V_2_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),24));

        OP2_V_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_0_read),24));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(4);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, or_cond_i_reg_1815_pp0_iter14_reg, ap_predicate_op187_read_state6, ap_predicate_op198_read_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1815_pp0_iter14_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op187_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, or_cond_i_reg_1815_pp0_iter14_reg, ap_predicate_op187_read_state6, ap_predicate_op198_read_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1815_pp0_iter14_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op187_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, or_cond_i_reg_1815_pp0_iter14_reg, ap_predicate_op187_read_state6, ap_predicate_op198_read_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1815_pp0_iter14_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op187_read_state6 = ap_const_boolean_1)))));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp0_stage0_iter15_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1815_pp0_iter14_reg)
    begin
                ap_block_state19_pp0_stage0_iter15 <= ((or_cond_i_reg_1815_pp0_iter14_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op187_read_state6, ap_predicate_op198_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op187_read_state6 = ap_const_boolean_1)));
    end process;

        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_532_assign_proc : process(exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_94_reg_1739)
    begin
                ap_condition_532 <= ((tmp_94_reg_1739 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_538_assign_proc : process(exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_342_1_reg_1743)
    begin
                ap_condition_538 <= ((tmp_342_1_reg_1743 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter2_state6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond389_i_fu_467_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond389_i_fu_467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op187_read_state6_assign_proc : process(exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734)
    begin
                ap_predicate_op187_read_state6 <= ((or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op198_read_state6_assign_proc : process(exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_92_reg_1729)
    begin
                ap_predicate_op198_read_state6 <= ((tmp_92_reg_1729 = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond389_i_fu_467_p2)
    begin
        if (((exitcond389_i_fu_467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_906_p2 <= (tmp_298_0_not_reg_1769 or tmp_100_fu_829_p2);
    col_assign_1_fu_916_p2 <= std_logic_vector(unsigned(tmp_87_fu_401_p2) - unsigned(x_reg_1802));
    col_buf_0_val_0_0_fu_959_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1808_pp0_iter1_reg(0) = '1') else 
        tmp_106_fu_948_p5;
    col_buf_0_val_1_0_fu_977_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1808_pp0_iter1_reg(0) = '1') else 
        tmp_107_fu_966_p5;
    col_buf_0_val_2_0_fu_995_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1808_pp0_iter1_reg(0) = '1') else 
        tmp_108_fu_984_p5;
    exitcond388_i_fu_782_p2 <= "1" when (t_V_2_reg_369 = tmp_s_fu_383_p2) else "0";
    exitcond389_i_fu_467_p2 <= "1" when (t_V_reg_358 = tmp_86_fu_389_p2) else "0";
    f_fu_1476_p1 <= p_Result_19_fu_1465_p5;
    grp_fu_1503_p0 <= OP2_V_reg_1671(16 - 1 downto 0);
    grp_fu_1503_p1 <= grp_fu_1503_p10(8 - 1 downto 0);
    grp_fu_1503_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_192),24));
    grp_fu_1511_p0 <= OP2_V_1_reg_1686(16 - 1 downto 0);
    grp_fu_1511_p1 <= grp_fu_1511_p10(8 - 1 downto 0);
    grp_fu_1511_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_184),24));
    grp_fu_1519_p0 <= OP2_V_2_reg_1701(16 - 1 downto 0);
    grp_fu_1519_p1 <= grp_fu_1519_p10(8 - 1 downto 0);
    grp_fu_1519_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_176),24));
    grp_fu_1526_p0 <= OP2_V_2_1_reg_1706(16 - 1 downto 0);
    grp_fu_1526_p1 <= grp_fu_1526_p10(8 - 1 downto 0);
    grp_fu_1526_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_172),24));
    grp_fu_1539_p0 <= OP2_V_1_2_reg_1696(16 - 1 downto 0);
    grp_fu_1539_p1 <= grp_fu_1539_p10(8 - 1 downto 0);
    grp_fu_1539_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_reg_1850_pp0_iter4_reg),24));

    grp_fu_380_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_380_ce <= ap_const_logic_1;
        else 
            grp_fu_380_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_472_p2 <= std_logic_vector(unsigned(t_V_reg_358) + unsigned(ap_const_lv32_1));
    icmp1_fu_803_p2 <= "0" when (tmp_122_fu_793_p4 = ap_const_lv31_0) else "1";
    icmp2_fu_1323_p2 <= "1" when (tmp_131_fu_1313_p4 = ap_const_lv26_0) else "0";
    icmp_fu_493_p2 <= "0" when (tmp_102_fu_483_p4 = ap_const_lv31_0) else "1";
    j_V_fu_787_p2 <= std_logic_vector(unsigned(t_V_2_reg_369) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= tmp_105_fu_920_p1(10 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_94_reg_1739, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_94_reg_1739 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_94_reg_1739, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_94_reg_1739 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_105_fu_920_p1(10 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_342_1_reg_1743, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_342_1_reg_1743 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op198_read_state6, k_buf_0_val_3_q0, ap_condition_538)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op198_read_state6 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_538)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_342_1_reg_1743, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_342_1_reg_1743 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_105_fu_920_p1(10 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_94_reg_1739, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_94_reg_1739 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op198_read_state6, k_buf_0_val_4_q0, ap_condition_532)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op198_read_state6 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_532)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_94_reg_1739, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_94_reg_1739 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    msb_idx_1_fu_1305_p3 <= 
        ap_const_lv31_0 when (tmp_130_fu_1297_p3(0) = '1') else 
        tmp_129_fu_1293_p1;
    msb_idx_fu_1288_p2 <= std_logic_vector(unsigned(ap_const_lv32_1B) - unsigned(num_zeros_reg_1936));
    
    num_zeros_fu_1280_p3_proc : process(p_Result_18_fu_1272_p3)
    begin
        num_zeros_fu_1280_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_18_fu_1272_p3(i) = '1' then
                num_zeros_fu_1280_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    or_cond_i424_i_1_fu_604_p2 <= (tmp_368_1_fu_599_p2 and rev1_fu_593_p2);
    or_cond_i424_i_2_fu_667_p2 <= (tmp_368_2_fu_662_p2 and rev2_fu_656_p2);
    or_cond_i424_i_fu_541_p2 <= (tmp_97_fu_536_p2 and rev_fu_530_p2);
    or_cond_i_fu_911_p2 <= (icmp_reg_1734 and icmp1_fu_803_p2);
    or_cond_i_i_fu_834_p2 <= (tmp_100_fu_829_p2 and rev3_fu_823_p2);
    p_Repl2_10_trunc_i_fu_1452_p2 <= std_logic_vector(unsigned(tmp27_cast_cast_fu_1445_p3) + unsigned(tmp_143_fu_1442_p1));
    
    p_Result_17_fu_1262_p4_proc : process(p_Val2_i_i_cast_fu_1258_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(28+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(28+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(28 - 1 downto 0);
    variable p_Result_17_fu_1262_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(28 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(28 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(28 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1B(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_i_i_cast_fu_1258_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(28-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(28-1-unsigned(ap_const_lv32_1B(5-1 downto 0)));
            for p_Result_17_fu_1262_p4_i in 0 to 28-1 loop
                v0_cpy(p_Result_17_fu_1262_p4_i) := p_Val2_i_i_cast_fu_1258_p1(28-1-p_Result_17_fu_1262_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(28-1 downto 0)))));
        res_mask := res_mask(28-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_17_fu_1262_p4 <= resvalue(28-1 downto 0);
    end process;

    p_Result_18_fu_1272_p3 <= (ap_const_lv4_F & p_Result_17_fu_1262_p4);
    p_Result_19_fu_1465_p5 <= (tmp_70_i_i_fu_1458_p3 & tmp32_V_6_reg_1977(22 downto 0));
    p_Result_i_i_fu_1426_p4 <= tmp32_V_6_fu_1422_p1(30 downto 23);
    p_Result_s_fu_1403_p3 <= (ap_const_lv26_0 & tmp_141_fu_1399_p1);
    p_Val2_68_fu_1252_p3 <= 
        tmp_i_i_cast_fu_1247_p2 when (is_neg_reg_1914(0) = '1') else 
        p_Val2_78_2_2_cast_reg_1908;
        p_Val2_78_0_1_cast_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1503_p3),26));

    p_Val2_78_1_fu_1155_p2 <= std_logic_vector(signed(tmp21_cast_fu_1152_p1) + signed(p_Val2_78_0_1_cast_fu_1142_p1));
        p_Val2_78_2_1_cast_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_78_2_1_fu_1207_p2),28));

    p_Val2_78_2_1_fu_1207_p2 <= std_logic_vector(signed(tmp25_cast_fu_1204_p1) + signed(grp_fu_1539_p3));
    p_Val2_78_2_2_cast_fu_1228_p2 <= std_logic_vector(signed(p_Val2_78_2_1_fu_1207_p2) + signed(tmp_112_fu_1219_p1));
    p_Val2_i_i_cast_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_68_fu_1252_p3),28));
    p_Val2_s_fu_1222_p2 <= std_logic_vector(signed(p_Val2_78_2_1_cast_fu_1212_p1) + signed(tmp_386_2_2_fu_1216_p1));
    p_assign_1_fu_848_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_2_reg_369));
    p_assign_2_fu_867_p2 <= std_logic_vector(unsigned(tmp_91_fu_461_p2) - unsigned(p_p2_i_i_fu_854_p3));
    p_assign_3_fu_872_p3 <= 
        ImagLoc_x_fu_809_p2 when (or_cond_i_i_fu_834_p2(0) = '1') else 
        p_assign_2_fu_867_p2;
    p_assign_6_1_fu_579_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_358));
    p_assign_6_2_fu_642_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_358));
    p_assign_7_1_fu_618_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_reg_358));
    p_assign_7_2_fu_681_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_358));
    p_assign_7_fu_555_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_358));
    p_assign_8_1_fu_637_p2 <= std_logic_vector(unsigned(tmp_89_fu_413_p2) - unsigned(p_p2_i425_i_1_fu_624_p3));
    p_assign_8_2_fu_700_p2 <= std_logic_vector(unsigned(tmp_89_fu_413_p2) - unsigned(p_p2_i425_i_2_fu_687_p3));
    p_assign_8_fu_574_p2 <= std_logic_vector(unsigned(tmp_89_fu_413_p2) - unsigned(p_p2_i425_i_fu_561_p3));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, or_cond_i_reg_1815_pp0_iter14_reg)
    begin
        if (((or_cond_i_reg_1815_pp0_iter14_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        ap_const_lv32_0 when (tmp_i_i_reg_1920_pp0_iter14_reg(0) = '1') else 
        f_fu_1476_p1;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, or_cond_i_reg_1815_pp0_iter14_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1815_pp0_iter14_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg393_i_fu_395_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(p_src_rows_V_read));
    p_p2_i425_i_1_fu_624_p3 <= 
        p_assign_7_1_fu_618_p2 when (tmp_116_fu_610_p3(0) = '1') else 
        p_assign_6_1_fu_579_p2;
    p_p2_i425_i_1_p_assig_fu_721_p3 <= 
        p_p2_i425_i_1_fu_624_p3 when (tmp_378_1_fu_632_p2(0) = '1') else 
        p_assign_8_1_fu_637_p2;
    p_p2_i425_i_2_fu_687_p3 <= 
        p_assign_7_2_fu_681_p2 when (tmp_118_fu_673_p3(0) = '1') else 
        p_assign_6_2_fu_642_p2;
    p_p2_i425_i_2_p_assig_fu_737_p3 <= 
        p_p2_i425_i_2_fu_687_p3 when (tmp_378_2_fu_695_p2(0) = '1') else 
        p_assign_8_2_fu_700_p2;
    p_p2_i425_i_fu_561_p3 <= 
        p_assign_7_fu_555_p2 when (tmp_114_fu_547_p3(0) = '1') else 
        tmp_96_fu_516_p2;
    p_p2_i425_i_p_assign_8_fu_705_p3 <= 
        p_p2_i425_i_fu_561_p3 when (tmp_98_fu_569_p2(0) = '1') else 
        p_assign_8_fu_574_p2;
    p_p2_i_i_fu_854_p3 <= 
        p_assign_1_fu_848_p2 when (tmp_124_fu_840_p3(0) = '1') else 
        ImagLoc_x_fu_809_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond388_i_reg_1789_pp0_iter1_reg, or_cond_i_i_reg_1798_pp0_iter1_reg, icmp_reg_1734, tmp_92_reg_1729)
    begin
        if ((((tmp_92_reg_1729 = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_1) and (or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1798_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1734 = ap_const_lv1_0) and (exitcond388_i_reg_1789_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op187_read_state6, ap_predicate_op198_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op198_read_state6 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op187_read_state6 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_3_0_1_fu_1488_p0 <= OP2_V_0_1_reg_1676(16 - 1 downto 0);
    r_V_3_0_1_fu_1488_p1 <= r_V_3_0_1_fu_1488_p10(8 - 1 downto 0);
    r_V_3_0_1_fu_1488_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_188),24));
    r_V_3_0_2_fu_1493_p0 <= OP2_V_0_2_reg_1681(16 - 1 downto 0);
    r_V_3_0_2_fu_1493_p1 <= r_V_3_0_2_fu_1493_p10(8 - 1 downto 0);
    r_V_3_0_2_fu_1493_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1856),24));
    r_V_3_1_1_fu_1498_p0 <= OP2_V_1_1_reg_1691(16 - 1 downto 0);
    r_V_3_1_1_fu_1498_p1 <= r_V_3_1_1_fu_1498_p10(8 - 1 downto 0);
    r_V_3_1_1_fu_1498_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_180),24));
    r_V_3_2_2_fu_1534_p0 <= OP2_V_2_2_reg_1711(16 - 1 downto 0);
    r_V_3_2_2_fu_1534_p1 <= r_V_3_2_2_fu_1534_p10(8 - 1 downto 0);
    r_V_3_2_2_fu_1534_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1844_pp0_iter3_reg),24));
    rev1_fu_593_p2 <= (tmp_115_fu_585_p3 xor ap_const_lv1_1);
    rev2_fu_656_p2 <= (tmp_117_fu_648_p3 xor ap_const_lv1_1);
    rev3_fu_823_p2 <= (tmp_123_fu_815_p3 xor ap_const_lv1_1);
    rev_fu_530_p2 <= (tmp_104_fu_522_p3 xor ap_const_lv1_1);
    row_assign_8_1_fu_766_p2 <= std_logic_vector(unsigned(p_neg393_i_fu_395_p2) - unsigned(y_1_1_reg_1759));
    row_assign_8_2_fu_774_p2 <= std_logic_vector(unsigned(p_neg393_i_fu_395_p2) - unsigned(y_1_2_reg_1764));
    row_assign_8_fu_758_p2 <= std_logic_vector(unsigned(p_neg393_i_fu_395_p2) - unsigned(y_1_reg_1754));
    sel_tmp7_fu_886_p2 <= (tmp_123_fu_815_p3 or tmp_103_not_fu_880_p2);
    sel_tmp8_fu_892_p2 <= (tmp_103_fu_862_p2 and sel_tmp7_fu_886_p2);
    src_kernel_win_0_va_6_fu_1049_p3 <= 
        tmp_109_fu_1038_p5 when (tmp_95_reg_1747(0) = '1') else 
        col_buf_0_val_0_0_fu_959_p3;
    src_kernel_win_0_va_7_fu_1067_p3 <= 
        tmp_110_fu_1056_p5 when (tmp_95_reg_1747(0) = '1') else 
        col_buf_0_val_1_0_fu_977_p3;
    src_kernel_win_0_va_8_fu_1085_p3 <= 
        tmp_111_fu_1074_p5 when (tmp_95_reg_1747(0) = '1') else 
        col_buf_0_val_2_0_fu_995_p3;
        tmp21_cast_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1511_p3),26));

        tmp25_cast_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp25_reg_1892),27));

    tmp27_cast_cast_fu_1445_p3 <= 
        ap_const_lv8_72 when (tmp_139_i_i_reg_1982(0) = '1') else 
        ap_const_lv8_71;
    tmp32_V_1_fu_1363_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_fu_1351_p1),to_integer(unsigned('0' & tmp_137_i_i_cast_fu_1359_p1(31-1 downto 0)))));
    tmp32_V_2_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_1403_p3),32));
    tmp32_V_3_fu_1415_p3 <= 
        tmp32_V_1_fu_1363_p2 when (icmp2_reg_1951(0) = '1') else 
        tmp32_V_2_fu_1411_p1;
    tmp32_V_6_fu_1422_p1 <= grp_fu_380_p1;
    tmp32_V_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_68_reg_1925_pp0_iter7_reg),32));
    tmp_100_fu_829_p2 <= "1" when (signed(ImagLoc_x_fu_809_p2) < signed(p_src_cols_V_read)) else "0";
    tmp_101_fu_455_p2 <= std_logic_vector(shift_left(unsigned(p_src_cols_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_102_fu_483_p4 <= t_V_reg_358(31 downto 1);
    tmp_103_fu_862_p2 <= "1" when (signed(p_p2_i_i_fu_854_p3) < signed(p_src_cols_V_read)) else "0";
    tmp_103_not_fu_880_p2 <= (tmp_100_fu_829_p2 xor ap_const_lv1_1);
    tmp_104_fu_522_p3 <= tmp_96_fu_516_p2(31 downto 31);
    tmp_105_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_1802),64));
        tmp_112_fu_1219_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_2_2_reg_1897),27));

    tmp_114_fu_547_p3 <= tmp_96_fu_516_p2(31 downto 31);
    tmp_115_fu_585_p3 <= p_assign_6_1_fu_579_p2(31 downto 31);
    tmp_116_fu_610_p3 <= p_assign_6_1_fu_579_p2(31 downto 31);
    tmp_117_fu_648_p3 <= p_assign_6_2_fu_642_p2(31 downto 31);
    tmp_118_fu_673_p3 <= p_assign_6_2_fu_642_p2(31 downto 31);
    tmp_119_fu_762_p1 <= row_assign_8_fu_758_p2(2 - 1 downto 0);
    tmp_120_fu_770_p1 <= row_assign_8_1_fu_766_p2(2 - 1 downto 0);
    tmp_121_fu_778_p1 <= row_assign_8_2_fu_774_p2(2 - 1 downto 0);
    tmp_122_fu_793_p4 <= t_V_2_reg_369(31 downto 1);
    tmp_123_fu_815_p3 <= ImagLoc_x_fu_809_p2(31 downto 31);
    tmp_124_fu_840_p3 <= ImagLoc_x_fu_809_p2(31 downto 31);
    tmp_125_fu_926_p1 <= col_assign_1_fu_916_p2(2 - 1 downto 0);
    tmp_129_fu_1293_p1 <= msb_idx_fu_1288_p2(31 - 1 downto 0);
    tmp_130_fu_1297_p3 <= msb_idx_fu_1288_p2(31 downto 31);
    tmp_131_fu_1313_p4 <= msb_idx_1_fu_1305_p3(30 downto 5);
    tmp_132_fu_1329_p1 <= msb_idx_1_fu_1305_p3(5 - 1 downto 0);
    tmp_133_fu_1333_p2 <= "1" when (unsigned(msb_idx_1_fu_1305_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_134_fu_1339_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(tmp_132_fu_1329_p1));
    
    tmp_135_fu_1369_p4_proc : process(p_Val2_i_i_cast_reg_1930_pp0_iter7_reg)
    variable vlo_cpy : STD_LOGIC_VECTOR(28+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(28+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(28 - 1 downto 0);
    variable tmp_135_fu_1369_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(28 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(28 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(28 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1B(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_i_i_cast_reg_1930_pp0_iter7_reg;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(28-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(28-1-unsigned(ap_const_lv32_1B(5-1 downto 0)));
            for tmp_135_fu_1369_p4_i in 0 to 28-1 loop
                v0_cpy(tmp_135_fu_1369_p4_i) := p_Val2_i_i_cast_reg_1930_pp0_iter7_reg(28-1-tmp_135_fu_1369_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(28-1 downto 0)))));
        res_mask := res_mask(28-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_135_fu_1369_p4 <= resvalue(28-1 downto 0);
    end process;

    tmp_136_fu_1345_p2 <= std_logic_vector(signed(ap_const_lv5_1A) - signed(tmp_132_fu_1329_p1));
    tmp_137_fu_1378_p3 <= 
        tmp_135_fu_1369_p4 when (tmp_133_reg_1956(0) = '1') else 
        p_Val2_i_i_cast_reg_1930_pp0_iter7_reg;
    tmp_137_i_i_cast_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_137_i_i_fu_1354_p2),32));
    tmp_137_i_i_fu_1354_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_1_reg_1946));
    tmp_138_fu_1384_p3 <= 
        tmp_136_reg_1967 when (tmp_133_reg_1956(0) = '1') else 
        tmp_134_reg_1962;
    tmp_139_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_138_fu_1384_p3),28));
    tmp_139_i_i_fu_1436_p2 <= "0" when (p_Result_i_i_fu_1426_p4 = ap_const_lv8_9E) else "1";
    tmp_140_fu_1393_p2 <= std_logic_vector(shift_right(unsigned(tmp_137_fu_1378_p3),to_integer(unsigned('0' & tmp_139_fu_1389_p1(28-1 downto 0)))));
    tmp_141_fu_1399_p1 <= tmp_140_fu_1393_p2(2 - 1 downto 0);
    tmp_143_fu_1442_p1 <= msb_idx_reg_1941_pp0_iter14_reg(8 - 1 downto 0);
    tmp_298_0_not_fu_753_p2 <= (tmp_92_reg_1729 xor ap_const_lv1_1);
    tmp_342_1_fu_505_p2 <= "1" when (t_V_reg_358 = ap_const_lv32_0) else "0";
    tmp_368_1_fu_599_p2 <= "1" when (signed(p_assign_6_1_fu_579_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_368_2_fu_662_p2 <= "1" when (signed(p_assign_6_2_fu_642_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_378_1_fu_632_p2 <= "1" when (signed(p_p2_i425_i_1_fu_624_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_378_2_fu_695_p2 <= "1" when (signed(p_p2_i425_i_2_fu_687_p3) < signed(p_src_rows_V_read)) else "0";
        tmp_386_2_2_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_2_2_reg_1897),28));

    tmp_70_i_i_fu_1458_p3 <= (is_neg_reg_1914_pp0_iter14_reg & p_Repl2_10_trunc_i_fu_1452_p2);
    tmp_86_fu_389_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_rows_V_read));
    tmp_87_fu_401_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(p_src_cols_V_read));
    tmp_89_fu_413_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(tmp_99_fu_407_p2));
    tmp_91_fu_461_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(tmp_101_fu_455_p2));
    tmp_92_fu_478_p2 <= "1" when (unsigned(t_V_reg_358) < unsigned(p_src_rows_V_read)) else "0";
    tmp_94_fu_499_p2 <= "1" when (t_V_reg_358 = ap_const_lv32_1) else "0";
    tmp_95_fu_511_p2 <= "1" when (unsigned(t_V_reg_358) > unsigned(p_src_rows_V_read)) else "0";
    tmp_96_fu_516_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_358));
    tmp_97_fu_536_p2 <= "1" when (signed(tmp_96_fu_516_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_98_fu_569_p2 <= "1" when (signed(p_p2_i425_i_fu_561_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_99_fu_407_p2 <= std_logic_vector(shift_left(unsigned(p_src_rows_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_i_i_cast_fu_1247_p2 <= std_logic_vector(unsigned(ap_const_lv27_0) - unsigned(p_Val2_78_2_2_cast_reg_1908));
    tmp_i_i_fu_1242_p2 <= "1" when (p_Val2_s_reg_1903 = ap_const_lv28_0) else "0";
    tmp_s_fu_383_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_cols_V_read));
    x_fu_898_p3 <= 
        p_p2_i_i_fu_854_p3 when (sel_tmp8_fu_892_p2(0) = '1') else 
        p_assign_3_fu_872_p3;
    y_1_1_fu_729_p3 <= 
        p_assign_6_1_fu_579_p2 when (or_cond_i424_i_1_fu_604_p2(0) = '1') else 
        p_p2_i425_i_1_p_assig_fu_721_p3;
    y_1_2_fu_745_p3 <= 
        p_assign_6_2_fu_642_p2 when (or_cond_i424_i_2_fu_667_p2(0) = '1') else 
        p_p2_i425_i_2_p_assig_fu_737_p3;
    y_1_fu_713_p3 <= 
        tmp_96_fu_516_p2 when (or_cond_i424_i_fu_541_p2(0) = '1') else 
        p_p2_i425_i_p_assign_8_fu_705_p3;
end behav;
