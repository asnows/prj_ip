-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pow_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of pow_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv9_182 : STD_LOGIC_VECTOR (8 downto 0) := "110000010";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv52_B17217F7D1C : STD_LOGIC_VECTOR (51 downto 0) := "0000000010110001011100100001011111110111110100011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv45_B17217F7D : STD_LOGIC_VECTOR (44 downto 0) := "000000000101100010111001000010111111101111101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_382 : STD_LOGIC_VECTOR (9 downto 0) := "1110000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymo_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_7_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_7_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_6_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_6_q0 : STD_LOGIC_VECTOR (55 downto 0);
    signal pow_reduce_anonymo_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymo_9_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_9_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal pow_reduce_anonymo_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_10_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_10_q0 : STD_LOGIC_VECTOR (48 downto 0);
    signal pow_reduce_anonymo_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_8_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_8_q0 : STD_LOGIC_VECTOR (43 downto 0);
    signal pow_reduce_anonymo_11_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pow_reduce_anonymo_11_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_11_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal pow_reduce_anonymo_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pow_reduce_anonymo_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1670 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1670_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_reg_1677 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1677_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_378_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1684 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1684_pp0_iter1_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_49_reg_1692 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1692_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_frac_tilde_inverse_reg_1708 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_sum_V_reg_1713 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter2_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter3_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter4_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter5_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter6_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter7_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1713_pp0_iter8_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_5_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1718_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1724_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_446_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_reg_1729 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_reg_1729_pp0_iter3_reg : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_s_reg_1738 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1738_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1738_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1738_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1738_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_1738_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_3_fu_476_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_3_reg_1744 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_45_reg_1749 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_61_reg_1755 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_61_reg_1755_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_61_reg_1755_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_reg_1761 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_17_fu_609_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_17_reg_1766 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_17_reg_1766_pp0_iter6_reg : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_621_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_18_reg_1781 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_48_reg_1786 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_48_reg_1786_pp0_iter8_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_48_reg_1786_pp0_iter9_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_48_reg_1786_pp0_iter10_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_62_fu_661_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_62_reg_1797 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_30_reg_1802 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_30_reg_1802_pp0_iter8_reg : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_30_reg_1802_pp0_iter9_reg : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_30_reg_1802_pp0_iter10_reg : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp13_fu_710_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp13_reg_1827 : STD_LOGIC_VECTOR (49 downto 0);
    signal log_sum_V_1_fu_728_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1832 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1832_pp0_iter10_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1832_pp0_iter11_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1832_pp0_iter12_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1832_pp0_iter13_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_fu_700_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_26_reg_1838 : STD_LOGIC_VECTOR (49 downto 0);
    signal x_is_1_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_1843_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1850_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1855_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1862_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_2_fu_808_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1868 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_reg_1873 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_34_reg_1873_pp0_iter12_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal ssdm_int_V_write_ass_3_reg_1878 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_13_reg_1888 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_883_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_50_reg_1893 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_16_reg_1898 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_28_reg_1904 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_28_reg_1904_pp0_iter15_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_28_reg_1904_pp0_iter16_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_73_cast_reg_1909 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_66_reg_1914 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1919 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1919_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1919_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1919_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1919_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1919_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1925_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1925_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1925_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1925_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1925_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_3_fu_1148_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1931 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1931_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1931_pp0_iter17_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1931_pp0_iter18_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1931_pp0_iter19_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_10_reg_1938 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_55_fu_1197_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_55_reg_1943 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_57_reg_1958 : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1P_m_1_V_reg_1963 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_37_reg_1968 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_12_fu_1257_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_12_reg_1973 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_13_fu_1664_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_13_reg_1978 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_70_fu_1269_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_70_reg_1985 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_fu_1273_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_71_reg_1990 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_11_fu_400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_118_i_i_fu_657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_134_i_i_fu_681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_126_i_i_fu_686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1201_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i2_43_fu_1216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_34_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_V_fu_390_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_425_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_fu_432_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_14_fu_416_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_10_fu_436_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_fu_446_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_fu_462_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_3_fu_476_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_3_fu_476_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sf_fu_492_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_55_fu_485_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_501_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_26_fu_510_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_53_fu_482_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_121_i_i_fu_522_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_14_fu_514_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_122_i_i_fu_534_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_121_i_i_cast_fu_530_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_2_fu_538_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_123_i_i_fu_544_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_124_i_i_fu_548_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_Val2_8_fu_551_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_112_i_i_fu_594_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_16_fu_587_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_112_i_i_cast_fu_601_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_113_i_i_fu_605_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_621_p0 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_621_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_116_i_i_fu_630_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_114_i_i_fu_627_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_116_i_i_cast_fu_637_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_19_fu_641_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal grp_fu_700_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_700_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ssdm_int_V_write_ass_1_fu_690_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ssdm_int_V_write_ass_2_fu_706_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ssdm_int_V_write_ass_fu_716_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp62_cast_fu_725_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_fu_720_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_i_cast_fu_734_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_fu_737_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_i1_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_774_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_193_i1_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_788_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_exp_1_fu_802_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_128_i_i_fu_822_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_24_fu_815_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_128_i_i_cast_fu_829_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_129_i_i_fu_833_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_132_i_i_fu_843_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_25_fu_837_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_132_i_i_cast_fu_850_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_27_fu_854_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_883_p0 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_fu_892_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal OP1_V_6_cast_fu_889_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_fu_892_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_fu_892_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_14_fu_908_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_60_cast_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_cast_fu_919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_5_fu_922_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_944_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_8_i_cast_fu_938_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_18_fu_955_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal tmp_65_cast_fu_951_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_52_fu_963_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_6_fu_941_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_19_fu_959_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_20_fu_969_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_21_fu_973_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_22_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_980_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_24_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_995_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_18_cast_fu_1001_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_38_fu_1013_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_46_fu_1031_p4 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_28_fu_1041_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_18_cast_cas_fu_1007_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fix_back_V_fu_1049_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_58_fu_1023_p3 : STD_LOGIC_VECTOR (65 downto 0);
    signal p_Val2_53_fu_986_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_29_fu_1098_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1653_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_68_fu_1125_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_31_fu_1109_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_32_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_1134_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_67_fu_1118_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_1140_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_fu_1159_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_fu_1159_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_33_fu_1175_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_35_fu_1178_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_11_fu_1181_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal m_diff_hi_V_fu_1187_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z2_ind_V_fu_1206_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i3_fu_1221_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1_i_fu_1224_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_29_fu_1228_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_39_fu_1254_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal not_Result_i_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1291_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1304_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_96_cast_fu_1311_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_43_fu_1324_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_44_fu_1331_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_41_fu_1314_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_42_fu_1321_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_15_fu_1334_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_72_fu_1352_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_1360_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_2_fu_1365_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_73_fu_1372_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_28_cast_fu_1346_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_28_cast2_fu_1340_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_48_fu_1399_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_50_fu_1409_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_75_fu_1427_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_V_fu_1431_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_fu_1419_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal x_is_1_not_fu_1447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp55_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_demorgan_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp56_fu_1557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_1437_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp14_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_1609_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1653_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_13_fu_1664_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_13_fu_1664_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to19 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_621_p00 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_621_p10 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_700_p00 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_700_p10 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_13_fu_1664_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_13_fu_1664_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_fu_446_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_3_fu_476_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_3_fu_476_p10 : STD_LOGIC_VECTOR (42 downto 0);

    component fpag_gaus_mul_41nibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (40 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component fpag_gaus_mul_44njbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (43 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component fpag_gaus_mul_45nkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (44 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component fpag_gaus_mac_mullbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component fpag_gaus_mul_mulmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component pow_generic_floatbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component pow_generic_floatcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component pow_generic_floatdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component pow_generic_floateOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component pow_generic_floatfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component pow_generic_floatg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component pow_generic_floathbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    pow_reduce_anonymo_7_U : component pow_generic_floatbkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_7_address0,
        ce0 => pow_reduce_anonymo_7_ce0,
        q0 => pow_reduce_anonymo_7_q0);

    pow_reduce_anonymo_6_U : component pow_generic_floatcud
    generic map (
        DataWidth => 56,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_6_address0,
        ce0 => pow_reduce_anonymo_6_ce0,
        q0 => pow_reduce_anonymo_6_q0);

    pow_reduce_anonymo_9_U : component pow_generic_floatdEe
    generic map (
        DataWidth => 52,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_9_address0,
        ce0 => pow_reduce_anonymo_9_ce0,
        q0 => pow_reduce_anonymo_9_q0);

    pow_reduce_anonymo_10_U : component pow_generic_floateOg
    generic map (
        DataWidth => 49,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_10_address0,
        ce0 => pow_reduce_anonymo_10_ce0,
        q0 => pow_reduce_anonymo_10_q0);

    pow_reduce_anonymo_8_U : component pow_generic_floatfYi
    generic map (
        DataWidth => 44,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_8_address0,
        ce0 => pow_reduce_anonymo_8_ce0,
        q0 => pow_reduce_anonymo_8_q0);

    pow_reduce_anonymo_11_U : component pow_generic_floatg8j
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_11_address0,
        ce0 => pow_reduce_anonymo_11_ce0,
        q0 => pow_reduce_anonymo_11_q0);

    pow_reduce_anonymo_U : component pow_generic_floathbi
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_address0,
        ce0 => pow_reduce_anonymo_ce0,
        q0 => pow_reduce_anonymo_q0);

    fpag_gaus_mul_41nibs_U11 : component fpag_gaus_mul_41nibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 41,
        din1_WIDTH => 6,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_621_p0,
        din1 => grp_fu_621_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_621_p2);

    fpag_gaus_mul_44njbC_U12 : component fpag_gaus_mul_44njbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 44,
        din1_WIDTH => 6,
        dout_WIDTH => 50)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_700_p0,
        din1 => grp_fu_700_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_700_p2);

    fpag_gaus_mul_45nkbM_U13 : component fpag_gaus_mul_45nkbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 45,
        din1_WIDTH => 9,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_883_p0,
        din1 => b_exp_2_reg_1868,
        ce => ap_const_logic_1,
        dout => grp_fu_883_p2);

    fpag_gaus_mac_mullbW_U14 : component fpag_gaus_mac_mullbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1653_p0,
        din1 => tmp_73_cast_reg_1909,
        din2 => tmp_29_fu_1098_p3,
        dout => grp_fu_1653_p3);

    fpag_gaus_mul_mulmb6_U15 : component fpag_gaus_mul_mulmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => p_Val2_13_fu_1664_p0,
        din1 => p_Val2_13_fu_1664_p1,
        dout => p_Val2_13_fu_1664_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                b_exp_2_reg_1868 <= b_exp_2_fu_808_p3;
                exp_Z1P_m_1_V_reg_1963 <= p_Val2_29_fu_1228_p2(18 downto 1);
                loc_V_reg_1677_pp0_iter10_reg <= loc_V_reg_1677_pp0_iter9_reg;
                loc_V_reg_1677_pp0_iter2_reg <= loc_V_reg_1677_pp0_iter1_reg;
                loc_V_reg_1677_pp0_iter3_reg <= loc_V_reg_1677_pp0_iter2_reg;
                loc_V_reg_1677_pp0_iter4_reg <= loc_V_reg_1677_pp0_iter3_reg;
                loc_V_reg_1677_pp0_iter5_reg <= loc_V_reg_1677_pp0_iter4_reg;
                loc_V_reg_1677_pp0_iter6_reg <= loc_V_reg_1677_pp0_iter5_reg;
                loc_V_reg_1677_pp0_iter7_reg <= loc_V_reg_1677_pp0_iter6_reg;
                loc_V_reg_1677_pp0_iter8_reg <= loc_V_reg_1677_pp0_iter7_reg;
                loc_V_reg_1677_pp0_iter9_reg <= loc_V_reg_1677_pp0_iter8_reg;
                log_sum_V_1_reg_1832 <= log_sum_V_1_fu_728_p2;
                log_sum_V_1_reg_1832_pp0_iter10_reg <= log_sum_V_1_reg_1832;
                log_sum_V_1_reg_1832_pp0_iter11_reg <= log_sum_V_1_reg_1832_pp0_iter10_reg;
                log_sum_V_1_reg_1832_pp0_iter12_reg <= log_sum_V_1_reg_1832_pp0_iter11_reg;
                log_sum_V_1_reg_1832_pp0_iter13_reg <= log_sum_V_1_reg_1832_pp0_iter12_reg;
                log_sum_V_reg_1713_pp0_iter2_reg <= log_sum_V_reg_1713;
                log_sum_V_reg_1713_pp0_iter3_reg <= log_sum_V_reg_1713_pp0_iter2_reg;
                log_sum_V_reg_1713_pp0_iter4_reg <= log_sum_V_reg_1713_pp0_iter3_reg;
                log_sum_V_reg_1713_pp0_iter5_reg <= log_sum_V_reg_1713_pp0_iter4_reg;
                log_sum_V_reg_1713_pp0_iter6_reg <= log_sum_V_reg_1713_pp0_iter5_reg;
                log_sum_V_reg_1713_pp0_iter7_reg <= log_sum_V_reg_1713_pp0_iter6_reg;
                log_sum_V_reg_1713_pp0_iter8_reg <= log_sum_V_reg_1713_pp0_iter7_reg;
                p_Result_s_reg_1670_pp0_iter10_reg <= p_Result_s_reg_1670_pp0_iter9_reg;
                p_Result_s_reg_1670_pp0_iter11_reg <= p_Result_s_reg_1670_pp0_iter10_reg;
                p_Result_s_reg_1670_pp0_iter12_reg <= p_Result_s_reg_1670_pp0_iter11_reg;
                p_Result_s_reg_1670_pp0_iter13_reg <= p_Result_s_reg_1670_pp0_iter12_reg;
                p_Result_s_reg_1670_pp0_iter14_reg <= p_Result_s_reg_1670_pp0_iter13_reg;
                p_Result_s_reg_1670_pp0_iter15_reg <= p_Result_s_reg_1670_pp0_iter14_reg;
                p_Result_s_reg_1670_pp0_iter16_reg <= p_Result_s_reg_1670_pp0_iter15_reg;
                p_Result_s_reg_1670_pp0_iter17_reg <= p_Result_s_reg_1670_pp0_iter16_reg;
                p_Result_s_reg_1670_pp0_iter18_reg <= p_Result_s_reg_1670_pp0_iter17_reg;
                p_Result_s_reg_1670_pp0_iter19_reg <= p_Result_s_reg_1670_pp0_iter18_reg;
                p_Result_s_reg_1670_pp0_iter2_reg <= p_Result_s_reg_1670_pp0_iter1_reg;
                p_Result_s_reg_1670_pp0_iter3_reg <= p_Result_s_reg_1670_pp0_iter2_reg;
                p_Result_s_reg_1670_pp0_iter4_reg <= p_Result_s_reg_1670_pp0_iter3_reg;
                p_Result_s_reg_1670_pp0_iter5_reg <= p_Result_s_reg_1670_pp0_iter4_reg;
                p_Result_s_reg_1670_pp0_iter6_reg <= p_Result_s_reg_1670_pp0_iter5_reg;
                p_Result_s_reg_1670_pp0_iter7_reg <= p_Result_s_reg_1670_pp0_iter6_reg;
                p_Result_s_reg_1670_pp0_iter8_reg <= p_Result_s_reg_1670_pp0_iter7_reg;
                p_Result_s_reg_1670_pp0_iter9_reg <= p_Result_s_reg_1670_pp0_iter8_reg;
                p_Val2_10_reg_1938 <= p_Val2_7_fu_1159_p2(44 downto 9);
                p_Val2_12_reg_1973 <= p_Val2_12_fu_1257_p2;
                p_Val2_13_reg_1978 <= p_Val2_13_fu_1664_p2;
                p_Val2_17_reg_1766 <= p_Val2_17_fu_609_p2;
                p_Val2_17_reg_1766_pp0_iter6_reg <= p_Val2_17_reg_1766;
                p_Val2_18_reg_1781 <= grp_fu_621_p2;
                p_Val2_1_reg_1729 <= p_Val2_1_fu_446_p2;
                p_Val2_1_reg_1729_pp0_iter3_reg <= p_Val2_1_reg_1729;
                p_Val2_26_reg_1838 <= grp_fu_700_p2;
                p_Val2_28_reg_1904 <= p_Val2_18_cast_fu_1001_p2(63 downto 28);
                p_Val2_28_reg_1904_pp0_iter15_reg <= p_Val2_28_reg_1904;
                p_Val2_28_reg_1904_pp0_iter16_reg <= p_Val2_28_reg_1904_pp0_iter15_reg;
                p_Val2_3_reg_1744 <= p_Val2_3_fu_476_p2;
                p_Val2_45_reg_1749 <= p_Val2_8_fu_551_p2(43 downto 3);
                p_Val2_48_reg_1786 <= p_Val2_19_fu_641_p2(49 downto 6);
                p_Val2_48_reg_1786_pp0_iter10_reg <= p_Val2_48_reg_1786_pp0_iter9_reg;
                p_Val2_48_reg_1786_pp0_iter8_reg <= p_Val2_48_reg_1786;
                p_Val2_48_reg_1786_pp0_iter9_reg <= p_Val2_48_reg_1786_pp0_iter8_reg;
                p_Val2_50_reg_1893 <= grp_fu_883_p2;
                p_Val2_55_reg_1943 <= p_Val2_55_fu_1197_p1;
                p_Val2_57_reg_1958 <= pow_reduce_anonymo_11_q0;
                p_Val2_61_reg_1755 <= p_Val2_8_fu_551_p2(43 downto 38);
                p_Val2_61_reg_1755_pp0_iter5_reg <= p_Val2_61_reg_1755;
                p_Val2_61_reg_1755_pp0_iter6_reg <= p_Val2_61_reg_1755_pp0_iter5_reg;
                p_Val2_62_reg_1797 <= p_Val2_19_fu_641_p2(49 downto 44);
                p_Val2_s_reg_1738 <= p_Val2_1_fu_446_p2(24 downto 21);
                p_Val2_s_reg_1738_pp0_iter3_reg <= p_Val2_s_reg_1738;
                p_Val2_s_reg_1738_pp0_iter4_reg <= p_Val2_s_reg_1738_pp0_iter3_reg;
                p_Val2_s_reg_1738_pp0_iter5_reg <= p_Val2_s_reg_1738_pp0_iter4_reg;
                p_Val2_s_reg_1738_pp0_iter6_reg <= p_Val2_s_reg_1738_pp0_iter5_reg;
                p_Val2_s_reg_1738_pp0_iter7_reg <= p_Val2_s_reg_1738_pp0_iter6_reg;
                r_exp_V_3_reg_1931 <= r_exp_V_3_fu_1148_p3;
                r_exp_V_3_reg_1931_pp0_iter16_reg <= r_exp_V_3_reg_1931;
                r_exp_V_3_reg_1931_pp0_iter17_reg <= r_exp_V_3_reg_1931_pp0_iter16_reg;
                r_exp_V_3_reg_1931_pp0_iter18_reg <= r_exp_V_3_reg_1931_pp0_iter17_reg;
                r_exp_V_3_reg_1931_pp0_iter19_reg <= r_exp_V_3_reg_1931_pp0_iter18_reg;
                ssdm_int_V_write_ass_3_reg_1878 <= p_Val2_27_fu_854_p2(62 downto 40);
                tmp13_reg_1827 <= tmp13_fu_710_p2;
                tmp_13_reg_1888 <= r_V_fu_892_p2(45 downto 1);
                tmp_16_reg_1898 <= p_Val2_5_fu_922_p2(63 downto 24);
                tmp_1_reg_1855 <= tmp_1_fu_782_p2;
                tmp_1_reg_1855_pp0_iter12_reg <= tmp_1_reg_1855;
                tmp_1_reg_1855_pp0_iter13_reg <= tmp_1_reg_1855_pp0_iter12_reg;
                tmp_1_reg_1855_pp0_iter14_reg <= tmp_1_reg_1855_pp0_iter13_reg;
                tmp_1_reg_1855_pp0_iter15_reg <= tmp_1_reg_1855_pp0_iter14_reg;
                tmp_1_reg_1855_pp0_iter16_reg <= tmp_1_reg_1855_pp0_iter15_reg;
                tmp_1_reg_1855_pp0_iter17_reg <= tmp_1_reg_1855_pp0_iter16_reg;
                tmp_1_reg_1855_pp0_iter18_reg <= tmp_1_reg_1855_pp0_iter17_reg;
                tmp_1_reg_1855_pp0_iter19_reg <= tmp_1_reg_1855_pp0_iter18_reg;
                tmp_27_reg_1761 <= p_Val2_8_fu_551_p2(37 downto 3);
                tmp_30_reg_1802 <= p_Val2_19_fu_641_p2(43 downto 6);
                tmp_30_reg_1802_pp0_iter10_reg <= tmp_30_reg_1802_pp0_iter9_reg;
                tmp_30_reg_1802_pp0_iter8_reg <= tmp_30_reg_1802;
                tmp_30_reg_1802_pp0_iter9_reg <= tmp_30_reg_1802_pp0_iter8_reg;
                tmp_34_reg_1873 <= p_Val2_27_fu_854_p2(62 downto 24);
                tmp_34_reg_1873_pp0_iter12_reg <= tmp_34_reg_1873;
                tmp_37_reg_1968 <= pow_reduce_anonymo_11_q0(26 downto 9);
                tmp_3_reg_1862 <= tmp_3_fu_796_p2;
                tmp_3_reg_1862_pp0_iter12_reg <= tmp_3_reg_1862;
                tmp_3_reg_1862_pp0_iter13_reg <= tmp_3_reg_1862_pp0_iter12_reg;
                tmp_3_reg_1862_pp0_iter14_reg <= tmp_3_reg_1862_pp0_iter13_reg;
                tmp_3_reg_1862_pp0_iter15_reg <= tmp_3_reg_1862_pp0_iter14_reg;
                tmp_3_reg_1862_pp0_iter16_reg <= tmp_3_reg_1862_pp0_iter15_reg;
                tmp_3_reg_1862_pp0_iter17_reg <= tmp_3_reg_1862_pp0_iter16_reg;
                tmp_3_reg_1862_pp0_iter18_reg <= tmp_3_reg_1862_pp0_iter17_reg;
                tmp_3_reg_1862_pp0_iter19_reg <= tmp_3_reg_1862_pp0_iter18_reg;
                tmp_45_reg_1919 <= tmp_45_fu_1081_p2;
                tmp_45_reg_1919_pp0_iter15_reg <= tmp_45_reg_1919;
                tmp_45_reg_1919_pp0_iter16_reg <= tmp_45_reg_1919_pp0_iter15_reg;
                tmp_45_reg_1919_pp0_iter17_reg <= tmp_45_reg_1919_pp0_iter16_reg;
                tmp_45_reg_1919_pp0_iter18_reg <= tmp_45_reg_1919_pp0_iter17_reg;
                tmp_45_reg_1919_pp0_iter19_reg <= tmp_45_reg_1919_pp0_iter18_reg;
                tmp_49_reg_1692_pp0_iter10_reg <= tmp_49_reg_1692_pp0_iter9_reg;
                tmp_49_reg_1692_pp0_iter2_reg <= tmp_49_reg_1692_pp0_iter1_reg;
                tmp_49_reg_1692_pp0_iter3_reg <= tmp_49_reg_1692_pp0_iter2_reg;
                tmp_49_reg_1692_pp0_iter4_reg <= tmp_49_reg_1692_pp0_iter3_reg;
                tmp_49_reg_1692_pp0_iter5_reg <= tmp_49_reg_1692_pp0_iter4_reg;
                tmp_49_reg_1692_pp0_iter6_reg <= tmp_49_reg_1692_pp0_iter5_reg;
                tmp_49_reg_1692_pp0_iter7_reg <= tmp_49_reg_1692_pp0_iter6_reg;
                tmp_49_reg_1692_pp0_iter8_reg <= tmp_49_reg_1692_pp0_iter7_reg;
                tmp_49_reg_1692_pp0_iter9_reg <= tmp_49_reg_1692_pp0_iter8_reg;
                tmp_5_reg_1718 <= tmp_5_fu_406_p2;
                tmp_5_reg_1718_pp0_iter10_reg <= tmp_5_reg_1718_pp0_iter9_reg;
                tmp_5_reg_1718_pp0_iter3_reg <= tmp_5_reg_1718;
                tmp_5_reg_1718_pp0_iter4_reg <= tmp_5_reg_1718_pp0_iter3_reg;
                tmp_5_reg_1718_pp0_iter5_reg <= tmp_5_reg_1718_pp0_iter4_reg;
                tmp_5_reg_1718_pp0_iter6_reg <= tmp_5_reg_1718_pp0_iter5_reg;
                tmp_5_reg_1718_pp0_iter7_reg <= tmp_5_reg_1718_pp0_iter6_reg;
                tmp_5_reg_1718_pp0_iter8_reg <= tmp_5_reg_1718_pp0_iter7_reg;
                tmp_5_reg_1718_pp0_iter9_reg <= tmp_5_reg_1718_pp0_iter8_reg;
                tmp_66_reg_1914 <= p_Val2_18_cast_fu_1001_p2(63 downto 63);
                tmp_70_reg_1985 <= tmp_70_fu_1269_p1;
                tmp_71_reg_1990 <= tmp_71_fu_1273_p1;
                tmp_73_cast_reg_1909 <= p_Val2_18_cast_cas_fu_1007_p2(63 downto 51);
                tmp_74_reg_1925 <= p_Val2_53_fu_986_p2(64 downto 64);
                tmp_74_reg_1925_pp0_iter15_reg <= tmp_74_reg_1925;
                tmp_74_reg_1925_pp0_iter16_reg <= tmp_74_reg_1925_pp0_iter15_reg;
                tmp_74_reg_1925_pp0_iter17_reg <= tmp_74_reg_1925_pp0_iter16_reg;
                tmp_74_reg_1925_pp0_iter18_reg <= tmp_74_reg_1925_pp0_iter17_reg;
                tmp_74_reg_1925_pp0_iter19_reg <= tmp_74_reg_1925_pp0_iter18_reg;
                tmp_9_reg_1850 <= tmp_9_fu_764_p2;
                tmp_9_reg_1850_pp0_iter12_reg <= tmp_9_reg_1850;
                tmp_9_reg_1850_pp0_iter13_reg <= tmp_9_reg_1850_pp0_iter12_reg;
                tmp_9_reg_1850_pp0_iter14_reg <= tmp_9_reg_1850_pp0_iter13_reg;
                tmp_9_reg_1850_pp0_iter15_reg <= tmp_9_reg_1850_pp0_iter14_reg;
                tmp_9_reg_1850_pp0_iter16_reg <= tmp_9_reg_1850_pp0_iter15_reg;
                tmp_9_reg_1850_pp0_iter17_reg <= tmp_9_reg_1850_pp0_iter16_reg;
                tmp_9_reg_1850_pp0_iter18_reg <= tmp_9_reg_1850_pp0_iter17_reg;
                tmp_9_reg_1850_pp0_iter19_reg <= tmp_9_reg_1850_pp0_iter18_reg;
                tmp_i2_reg_1724 <= tmp_i2_fu_411_p2;
                tmp_i2_reg_1724_pp0_iter10_reg <= tmp_i2_reg_1724_pp0_iter9_reg;
                tmp_i2_reg_1724_pp0_iter3_reg <= tmp_i2_reg_1724;
                tmp_i2_reg_1724_pp0_iter4_reg <= tmp_i2_reg_1724_pp0_iter3_reg;
                tmp_i2_reg_1724_pp0_iter5_reg <= tmp_i2_reg_1724_pp0_iter4_reg;
                tmp_i2_reg_1724_pp0_iter6_reg <= tmp_i2_reg_1724_pp0_iter5_reg;
                tmp_i2_reg_1724_pp0_iter7_reg <= tmp_i2_reg_1724_pp0_iter6_reg;
                tmp_i2_reg_1724_pp0_iter8_reg <= tmp_i2_reg_1724_pp0_iter7_reg;
                tmp_i2_reg_1724_pp0_iter9_reg <= tmp_i2_reg_1724_pp0_iter8_reg;
                x_is_1_reg_1843 <= x_is_1_fu_749_p2;
                x_is_1_reg_1843_pp0_iter12_reg <= x_is_1_reg_1843;
                x_is_1_reg_1843_pp0_iter13_reg <= x_is_1_reg_1843_pp0_iter12_reg;
                x_is_1_reg_1843_pp0_iter14_reg <= x_is_1_reg_1843_pp0_iter13_reg;
                x_is_1_reg_1843_pp0_iter15_reg <= x_is_1_reg_1843_pp0_iter14_reg;
                x_is_1_reg_1843_pp0_iter16_reg <= x_is_1_reg_1843_pp0_iter15_reg;
                x_is_1_reg_1843_pp0_iter17_reg <= x_is_1_reg_1843_pp0_iter16_reg;
                x_is_1_reg_1843_pp0_iter18_reg <= x_is_1_reg_1843_pp0_iter17_reg;
                x_is_1_reg_1843_pp0_iter19_reg <= x_is_1_reg_1843_pp0_iter18_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                b_frac_tilde_inverse_reg_1708 <= pow_reduce_anonymo_7_q0;
                loc_V_1_reg_1684 <= loc_V_1_fu_378_p1;
                loc_V_1_reg_1684_pp0_iter1_reg <= loc_V_1_reg_1684;
                loc_V_reg_1677 <= p_Val2_34_fu_356_p1(30 downto 23);
                loc_V_reg_1677_pp0_iter1_reg <= loc_V_reg_1677;
                log_sum_V_reg_1713 <= pow_reduce_anonymo_6_q0;
                p_Result_s_reg_1670 <= p_Val2_34_fu_356_p1(31 downto 31);
                p_Result_s_reg_1670_pp0_iter1_reg <= p_Result_s_reg_1670;
                tmp_49_reg_1692 <= p_Val2_34_fu_356_p1(22 downto 22);
                tmp_49_reg_1692_pp0_iter1_reg <= tmp_49_reg_1692;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    OP1_V_6_cast_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ssdm_int_V_write_ass_3_reg_1878),46));
    Z2_ind_V_fu_1206_p4 <= p_Val2_11_fu_1181_p2(17 downto 13);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to19_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to19 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to19)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv32_0 when (tmp_63_fu_1639_p2(0) = '1') else 
        tmp_62_fu_1631_p3;
    b_exp_1_fu_802_p2 <= std_logic_vector(signed(ap_const_lv9_182) + signed(tmp_i_cast_fu_734_p1));
    b_exp_2_fu_808_p3 <= 
        b_exp_1_fu_802_p2 when (tmp_49_reg_1692_pp0_iter10_reg(0) = '1') else 
        b_exp_fu_737_p2;
    b_exp_fu_737_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_cast_fu_734_p1));
    grp_fu_1653_p0 <= ap_const_lv25_B8A(13 - 1 downto 0);
    grp_fu_621_p0 <= grp_fu_621_p00(41 - 1 downto 0);
    grp_fu_621_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_45_reg_1749),47));
    grp_fu_621_p1 <= grp_fu_621_p10(6 - 1 downto 0);
    grp_fu_621_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_61_reg_1755),47));
    grp_fu_700_p0 <= grp_fu_700_p00(44 - 1 downto 0);
    grp_fu_700_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_48_reg_1786),50));
    grp_fu_700_p1 <= grp_fu_700_p10(6 - 1 downto 0);
    grp_fu_700_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_62_reg_1797),50));
    grp_fu_883_p0 <= ap_const_lv52_B17217F7D1C(45 - 1 downto 0);
    icmp_fu_1382_p2 <= "1" when (signed(tmp_73_fu_1372_p4) > signed(ap_const_lv3_0)) else "0";
    index0_V_fu_390_p4 <= p_Val2_34_fu_356_p1(22 downto 17);
    loc_V_1_fu_378_p1 <= p_Val2_34_fu_356_p1(23 - 1 downto 0);
    loc_V_2_fu_1419_p3 <= 
        tmp_48_fu_1399_p4 when (tmp_72_fu_1352_p3(0) = '1') else 
        tmp_50_fu_1409_p4;
    log_sum_V_1_fu_728_p2 <= std_logic_vector(unsigned(tmp62_cast_fu_725_p1) + unsigned(tmp_fu_720_p2));
    m_diff_hi_V_fu_1187_p4 <= p_Val2_11_fu_1181_p2(26 downto 18);
        m_fix_back_V_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_1041_p3),66));

    not_Result_i_fu_1277_p2 <= (p_Result_s_reg_1670_pp0_iter19_reg xor ap_const_lv1_1);
    or_cond1_fu_1388_p2 <= (tmp_45_reg_1919_pp0_iter19_reg or icmp_fu_1382_p2);
    out_exp_V_fu_1431_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) + unsigned(tmp_75_fu_1427_p1));
    p_Result_14_fu_416_p4 <= ((ap_const_lv1_1 & loc_V_1_reg_1684_pp0_iter1_reg) & ap_const_lv1_0);
    p_Result_15_fu_1437_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_1431_p2) & loc_V_2_fu_1419_p3);
    p_Val2_11_fu_1181_p2 <= std_logic_vector(signed(tmp_33_fu_1175_p1) - signed(tmp_35_fu_1178_p1));
    p_Val2_12_fu_1257_p2 <= std_logic_vector(unsigned(ap_const_lv28_4) + unsigned(tmp_39_fu_1254_p1));
    p_Val2_13_fu_1664_p0 <= p_Val2_13_fu_1664_p00(18 - 1 downto 0);
    p_Val2_13_fu_1664_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1963),36));
    p_Val2_13_fu_1664_p1 <= p_Val2_13_fu_1664_p10(18 - 1 downto 0);
    p_Val2_13_fu_1664_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_reg_1968),36));
    p_Val2_14_fu_514_p3 <= 
        tmp_15_fu_501_p4 when (tmp_55_fu_485_p3(0) = '1') else 
        tmp_26_fu_510_p1;
    p_Val2_15_fu_1334_p2 <= std_logic_vector(unsigned(tmp_40_fu_1304_p3) + unsigned(tmp_96_cast_fu_1311_p1));
    p_Val2_16_fu_587_p3 <= (ap_const_lv8_80 & p_Val2_45_reg_1749);
    p_Val2_17_fu_609_p2 <= std_logic_vector(unsigned(tmp_112_i_i_cast_fu_601_p1) + unsigned(tmp_113_i_i_fu_605_p1));
    p_Val2_18_cast_cas_fu_1007_p2 <= std_logic_vector(signed(tmp_24_fu_992_p1) + signed(tmp_25_fu_995_p2));
    p_Val2_18_cast_fu_1001_p2 <= std_logic_vector(unsigned(tmp_23_fu_980_p2) + unsigned(p_Val2_6_fu_941_p1));
    p_Val2_19_fu_641_p2 <= std_logic_vector(unsigned(tmp_114_i_i_fu_627_p1) - unsigned(tmp_116_i_i_cast_fu_637_p1));
    p_Val2_1_fu_446_p1 <= p_Val2_1_fu_446_p10(6 - 1 downto 0);
    p_Val2_1_fu_446_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_tilde_inverse_reg_1708),25));
    p_Val2_1_fu_446_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_10_fu_436_p3) * signed('0' &p_Val2_1_fu_446_p1))), 25));
    p_Val2_24_fu_815_p3 <= (ap_const_lv13_1000 & p_Val2_48_reg_1786_pp0_iter10_reg);
    p_Val2_25_fu_837_p2 <= std_logic_vector(unsigned(tmp_128_i_i_cast_fu_829_p1) + unsigned(tmp_129_i_i_fu_833_p1));
    p_Val2_27_fu_854_p2 <= std_logic_vector(unsigned(p_Val2_25_fu_837_p2) - unsigned(tmp_132_i_i_cast_fu_850_p1));
    p_Val2_28_cast2_fu_1340_p2 <= std_logic_vector(unsigned(tmp_43_fu_1324_p3) + unsigned(tmp_44_fu_1331_p1));
    p_Val2_28_cast_fu_1346_p2 <= std_logic_vector(unsigned(tmp_41_fu_1314_p3) + unsigned(tmp_42_fu_1321_p1));
    p_Val2_29_fu_1228_p2 <= std_logic_vector(unsigned(tmp_i3_fu_1221_p1) + unsigned(tmp_1_i_fu_1224_p1));
    p_Val2_2_fu_538_p2 <= std_logic_vector(unsigned(tmp_122_i_i_fu_534_p1) + unsigned(tmp_121_i_i_cast_fu_530_p1));
    p_Val2_34_fu_356_p1 <= base_r;
    p_Val2_3_fu_476_p0 <= p_Val2_3_fu_476_p00(39 - 1 downto 0);
    p_Val2_3_fu_476_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_9_fu_462_p3),43));
    p_Val2_3_fu_476_p1 <= p_Val2_3_fu_476_p10(4 - 1 downto 0);
    p_Val2_3_fu_476_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_reg_1738),43));
    p_Val2_3_fu_476_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_3_fu_476_p0) * unsigned(p_Val2_3_fu_476_p1), 43));
    p_Val2_52_fu_963_p2 <= std_logic_vector(unsigned(tmp_18_fu_955_p1) + unsigned(tmp_65_cast_fu_951_p1));
    p_Val2_53_fu_986_p2 <= std_logic_vector(unsigned(tmp_20_fu_969_p1) + unsigned(tmp_21_fu_973_p1));
    p_Val2_55_fu_1197_p1 <= p_Val2_11_fu_1181_p2(18 - 1 downto 0);
    p_Val2_58_fu_1023_p3 <= (tmp_38_fu_1013_p4 & ap_const_lv23_0);
    p_Val2_5_fu_922_p2 <= std_logic_vector(unsigned(tmp_60_cast_fu_915_p1) - unsigned(tmp_61_cast_fu_919_p1));
    p_Val2_62_fu_661_p4 <= p_Val2_19_fu_641_p2(49 downto 44);
        p_Val2_6_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1898),65));

    p_Val2_7_fu_1159_p1 <= r_exp_V_3_reg_1931;
    p_Val2_7_fu_1159_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv45_B17217F7D) * signed(p_Val2_7_fu_1159_p1))), 45));
    p_Val2_8_fu_551_p2 <= std_logic_vector(unsigned(tmp_123_i_i_fu_544_p1) - unsigned(tmp_124_i_i_fu_548_p1));
        p_Val2_8_i_cast_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_reg_1832_pp0_iter13_reg),65));

    p_Val2_9_fu_462_p3 <= (p_Val2_1_reg_1729 & ap_const_lv14_0);
    p_s_fu_1140_p3 <= 
        tmp_31_fu_1109_p4 when (tmp_32_fu_1128_p2(0) = '1') else 
        ret_V_3_fu_1134_p2;
    pow_reduce_anonymo_10_address0 <= tmp_118_i_i_fu_657_p1(6 - 1 downto 0);

    pow_reduce_anonymo_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_10_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_11_address0 <= tmp_36_fu_1201_p1(9 - 1 downto 0);

    pow_reduce_anonymo_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_11_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_6_address0 <= tmp_11_fu_400_p1(6 - 1 downto 0);

    pow_reduce_anonymo_6_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_6_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_7_address0 <= tmp_11_fu_400_p1(6 - 1 downto 0);

    pow_reduce_anonymo_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_7_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_8_address0 <= tmp_134_i_i_fu_681_p1(6 - 1 downto 0);

    pow_reduce_anonymo_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_8_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_9_address0 <= tmp_126_i_i_fu_686_p1(4 - 1 downto 0);

    pow_reduce_anonymo_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_9_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_address0 <= tmp_i2_43_fu_1216_p1(5 - 1 downto 0);

    pow_reduce_anonymo_ce0_assign_proc : process(ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_fu_892_p0 <= OP1_V_6_cast_fu_889_p1(23 - 1 downto 0);
    r_V_fu_892_p1 <= OP1_V_6_cast_fu_889_p1(23 - 1 downto 0);
    r_V_fu_892_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_892_p0) * unsigned(r_V_fu_892_p1), 46));
    r_exp_V_2_fu_1365_p3 <= 
        r_exp_V_3_reg_1931_pp0_iter19_reg when (tmp_72_fu_1352_p3(0) = '1') else 
        r_exp_V_fu_1360_p2;
    r_exp_V_3_fu_1148_p3 <= 
        p_s_fu_1140_p3 when (tmp_67_fu_1118_p3(0) = '1') else 
        tmp_31_fu_1109_p4;
    r_exp_V_fu_1360_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(r_exp_V_3_reg_1931_pp0_iter19_reg));
    ret_V_3_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_31_fu_1109_p4));
    sel_tmp10_fu_1512_p2 <= (sel_tmp9_fu_1506_p2 and sel_tmp8_fu_1501_p2);
    sel_tmp11_fu_1518_p2 <= (tmp_7_fu_1298_p2 and sel_tmp8_fu_1501_p2);
    sel_tmp12_fu_1524_p2 <= (sel_tmp11_fu_1518_p2 and or_cond1_fu_1388_p2);
    sel_tmp13_fu_1530_p2 <= (tmp_74_reg_1925_pp0_iter19_reg xor ap_const_lv1_1);
    sel_tmp14_fu_1535_p2 <= (sel_tmp13_fu_1530_p2 and sel_tmp12_fu_1524_p2);
    sel_tmp15_fu_1541_p2 <= (tmp_74_reg_1925_pp0_iter19_reg and sel_tmp12_fu_1524_p2);
    sel_tmp16_demorgan_fu_1546_p2 <= (tmp_45_reg_1919_pp0_iter19_reg or icmp_fu_1382_p2);
    sel_tmp16_fu_1551_p2 <= (sel_tmp16_demorgan_fu_1546_p2 xor ap_const_lv1_1);
    sel_tmp17_fu_1563_p2 <= (tmp56_fu_1557_p2 and sel_tmp11_fu_1518_p2);
    sel_tmp1_fu_1473_p2 <= (x_is_n1_fu_1287_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_1484_p2 <= (tmp55_fu_1479_p2 and sel_tmp4_fu_1452_p2);
    sel_tmp3_fu_1490_p2 <= (tmp_3_reg_1862_pp0_iter19_reg xor ap_const_lv1_1);
    sel_tmp4_fu_1452_p2 <= (x_is_1_not_fu_1447_p2 or p_Result_s_reg_1670_pp0_iter19_reg);
    sel_tmp5_fu_1457_p2 <= (tmp_1_reg_1855_pp0_iter19_reg xor ap_const_lv1_1);
    sel_tmp6_fu_1462_p2 <= (sel_tmp5_fu_1457_p2 and sel_tmp4_fu_1452_p2);
    sel_tmp7_fu_1495_p2 <= (sel_tmp3_fu_1490_p2 and sel_tmp2_fu_1484_p2);
    sel_tmp8_fu_1501_p2 <= (tmp_3_reg_1862_pp0_iter19_reg and sel_tmp2_fu_1484_p2);
    sel_tmp9_fu_1506_p2 <= (tmp_7_fu_1298_p2 xor ap_const_lv1_1);
    sel_tmp_fu_1468_p2 <= (x_is_n1_fu_1287_p2 and tmp_1_reg_1855_pp0_iter19_reg);
    sf_fu_492_p4 <= ((ap_const_lv5_10 & p_Val2_1_reg_1729_pp0_iter3_reg) & ap_const_lv13_0);
    ssdm_int_V_write_ass_1_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_10_q0),50));
    ssdm_int_V_write_ass_2_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_8_q0),50));
    ssdm_int_V_write_ass_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_9_q0),56));
    tmp13_fu_710_p2 <= std_logic_vector(unsigned(ssdm_int_V_write_ass_1_fu_690_p1) + unsigned(ssdm_int_V_write_ass_2_fu_706_p1));
    tmp55_fu_1479_p2 <= (tmp_1_reg_1855_pp0_iter19_reg and sel_tmp1_fu_1473_p2);
    tmp56_fu_1557_p2 <= (tmp_47_fu_1393_p2 and sel_tmp16_fu_1551_p2);
    tmp62_cast_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp13_reg_1827),56));
    tmp_10_fu_436_p3 <= 
        tmp_12_fu_432_p1 when (tmp_49_reg_1692_pp0_iter1_reg(0) = '1') else 
        p_Result_14_fu_416_p4;
    tmp_112_i_i_cast_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_i_i_fu_594_p3),50));
    tmp_112_i_i_fu_594_p3 <= (tmp_27_reg_1761 & ap_const_lv14_0);
    tmp_113_i_i_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_16_fu_587_p3),50));
    tmp_114_i_i_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_17_reg_1766_pp0_iter6_reg),51));
    tmp_116_i_i_cast_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_116_i_i_fu_630_p3),51));
    tmp_116_i_i_fu_630_p3 <= (p_Val2_18_reg_1781 & ap_const_lv1_0);
    tmp_118_i_i_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_61_reg_1755_pp0_iter6_reg),64));
    tmp_11_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_V_fu_390_p4),64));
    tmp_121_i_i_cast_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_121_i_i_fu_522_p3),45));
    tmp_121_i_i_fu_522_p3 <= (tmp_53_fu_482_p1 & ap_const_lv22_0);
    tmp_122_i_i_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_14_fu_514_p3),45));
    tmp_123_i_i_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_2_fu_538_p2),46));
    tmp_124_i_i_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_3_reg_1744),46));
    tmp_126_i_i_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_reg_1738_pp0_iter7_reg),64));
    tmp_128_i_i_cast_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_128_i_i_fu_822_p3),63));
    tmp_128_i_i_fu_822_p3 <= (tmp_30_reg_1802_pp0_iter10_reg & ap_const_lv24_0);
    tmp_129_i_i_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_24_fu_815_p3),63));
    tmp_12_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_425_p3),25));
    tmp_132_i_i_cast_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_132_i_i_fu_843_p3),63));
    tmp_132_i_i_fu_843_p3 <= (p_Val2_26_reg_1838 & ap_const_lv6_0);
    tmp_134_i_i_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_62_fu_661_p4),64));
    tmp_14_fu_908_p3 <= (tmp_34_reg_1873_pp0_iter12_reg & ap_const_lv24_0);
    tmp_15_fu_501_p4 <= ((ap_const_lv5_10 & p_Val2_1_reg_1729_pp0_iter3_reg) & ap_const_lv14_0);
    tmp_17_fu_944_p3 <= (p_Val2_50_reg_1893 & ap_const_lv12_0);
    tmp_18_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_8_i_cast_fu_938_p1),66));
    tmp_192_i1_fu_759_p2 <= (tmp_i2_reg_1724_pp0_iter10_reg and tmp_i1_fu_754_p2);
    tmp_193_i1_fu_769_p2 <= (tmp_i1_fu_754_p2 and tmp_5_reg_1718_pp0_iter10_reg);
        tmp_19_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_944_p3),65));

    tmp_1_fu_782_p2 <= "1" when (tmp_s_fu_774_p3 = ap_const_lv32_0) else "0";
    tmp_1_i_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_q0),19));
    tmp_20_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_52_fu_963_p2),67));
    tmp_21_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_fu_941_p1),67));
        tmp_22_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_reg_1832_pp0_iter13_reg),64));

    tmp_23_fu_980_p2 <= std_logic_vector(signed(tmp_19_fu_959_p1) + signed(p_Val2_8_i_cast_fu_938_p1));
        tmp_24_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1898),64));

    tmp_25_fu_995_p2 <= std_logic_vector(signed(tmp_22_fu_977_p1) + signed(tmp_17_fu_944_p3));
    tmp_26_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_492_p4),44));
    tmp_28_fu_1041_p3 <= (tmp_46_fu_1031_p4 & ap_const_lv23_0);
    tmp_29_fu_1098_p3 <= (tmp_66_reg_1914 & ap_const_lv15_4000);
    tmp_2_fu_788_p3 <= (ap_const_lv31_0 & tmp_193_i1_fu_769_p2);
    tmp_31_fu_1109_p4 <= grp_fu_1653_p3(24 downto 15);
    tmp_32_fu_1128_p2 <= "1" when (tmp_68_fu_1125_p1 = ap_const_lv15_0) else "0";
        tmp_33_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_28_reg_1904_pp0_iter16_reg),37));

        tmp_35_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_10_reg_1938),37));

    tmp_36_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_fu_1187_p4),64));
    tmp_38_fu_1013_p4 <= p_Val2_18_cast_fu_1001_p2(64 downto 22);
    tmp_39_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_57_reg_1958),28));
    tmp_3_fu_796_p2 <= "1" when (tmp_2_fu_788_p3 = ap_const_lv32_0) else "0";
    tmp_40_fu_1304_p3 <= (p_Val2_12_reg_1973 & ap_const_lv17_0);
    tmp_41_fu_1314_p3 <= (tmp_70_reg_1985 & ap_const_lv17_0);
    tmp_42_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_13_reg_1978),44));
    tmp_43_fu_1324_p3 <= (tmp_71_reg_1990 & ap_const_lv17_0);
    tmp_44_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_13_reg_1978),43));
    tmp_45_fu_1081_p2 <= "0" when (m_fix_back_V_fu_1049_p1 = p_Val2_58_fu_1023_p3) else "1";
    tmp_46_fu_1031_p4 <= p_Val2_18_cast_fu_1001_p2(63 downto 22);
    tmp_47_fu_1393_p2 <= "1" when (signed(r_exp_V_2_fu_1365_p3) < signed(ap_const_lv10_382)) else "0";
    tmp_48_fu_1399_p4 <= p_Val2_28_cast_fu_1346_p2(42 downto 20);
    tmp_4_fu_743_p2 <= "1" when (b_exp_fu_737_p2 = ap_const_lv9_0) else "0";
    tmp_50_fu_1409_p4 <= p_Val2_28_cast2_fu_1340_p2(41 downto 19);
    tmp_51_fu_1569_p1 <= p_Result_15_fu_1437_p4;
    tmp_52_fu_1573_p3 <= 
        ap_const_lv32_7FFFFFFF when (sel_tmp6_fu_1462_p2(0) = '1') else 
        ap_const_lv32_3F800000;
    tmp_53_fu_482_p1 <= p_Val2_1_reg_1729_pp0_iter3_reg(21 - 1 downto 0);
    tmp_54_fu_1581_p2 <= (x_is_p1_fu_1282_p2 or sel_tmp6_fu_1462_p2);
    tmp_55_fu_485_p3 <= p_Val2_1_reg_1729_pp0_iter3_reg(24 downto 24);
    tmp_56_fu_1587_p3 <= 
        tmp_52_fu_1573_p3 when (tmp_54_fu_1581_p2(0) = '1') else 
        tmp_51_fu_1569_p1;
    tmp_57_fu_1595_p3 <= 
        ap_const_lv32_7F800000 when (sel_tmp7_fu_1495_p2(0) = '1') else 
        ap_const_lv32_3F800000;
    tmp_58_fu_1603_p2 <= (sel_tmp_fu_1468_p2 or sel_tmp7_fu_1495_p2);
    tmp_59_fu_1609_p3 <= 
        tmp_57_fu_1595_p3 when (tmp_58_fu_1603_p2(0) = '1') else 
        tmp_56_fu_1587_p3;
    tmp_5_fu_406_p2 <= "1" when (loc_V_1_reg_1684_pp0_iter1_reg = ap_const_lv23_0) else "0";
    tmp_60_cast_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_908_p3),64));
    tmp_60_fu_1617_p3 <= 
        ap_const_lv32_7F800000 when (sel_tmp14_fu_1535_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_61_cast_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1888),64));
    tmp_61_fu_1625_p2 <= (sel_tmp14_fu_1535_p2 or sel_tmp10_fu_1512_p2);
    tmp_62_fu_1631_p3 <= 
        tmp_60_fu_1617_p3 when (tmp_61_fu_1625_p2(0) = '1') else 
        tmp_59_fu_1609_p3;
    tmp_63_fu_1639_p2 <= (sel_tmp17_fu_1563_p2 or sel_tmp15_fu_1541_p2);
        tmp_65_cast_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_944_p3),66));

    tmp_67_fu_1118_p3 <= grp_fu_1653_p3(24 downto 24);
    tmp_68_fu_1125_p1 <= grp_fu_1653_p3(15 - 1 downto 0);
    tmp_6_fu_1291_p3 <= (ap_const_lv31_0 & tmp_9_reg_1850_pp0_iter19_reg);
    tmp_70_fu_1269_p1 <= p_Val2_12_fu_1257_p2(27 - 1 downto 0);
    tmp_71_fu_1273_p1 <= p_Val2_12_fu_1257_p2(26 - 1 downto 0);
    tmp_72_fu_1352_p3 <= p_Val2_15_fu_1334_p2(43 downto 43);
    tmp_73_fu_1372_p4 <= r_exp_V_2_fu_1365_p3(9 downto 7);
    tmp_75_fu_1427_p1 <= r_exp_V_2_fu_1365_p3(8 - 1 downto 0);
    tmp_7_fu_1298_p2 <= "1" when (tmp_6_fu_1291_p3 = ap_const_lv32_0) else "0";
    tmp_8_fu_425_p3 <= (ap_const_lv1_1 & loc_V_1_reg_1684_pp0_iter1_reg);
    tmp_96_cast_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_13_reg_1978),45));
    tmp_9_fu_764_p2 <= "1" when (loc_V_reg_1677_pp0_iter10_reg = ap_const_lv8_0) else "0";
    tmp_fu_720_p2 <= std_logic_vector(unsigned(log_sum_V_reg_1713_pp0_iter8_reg) + unsigned(ssdm_int_V_write_ass_fu_716_p1));
    tmp_i1_fu_754_p2 <= "1" when (loc_V_reg_1677_pp0_iter10_reg = ap_const_lv8_FF) else "0";
    tmp_i2_43_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_V_fu_1206_p4),64));
    tmp_i2_fu_411_p2 <= "0" when (loc_V_1_reg_1684_pp0_iter1_reg = ap_const_lv23_0) else "1";
    tmp_i3_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_55_reg_1943),19));
    tmp_i_cast_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_reg_1677_pp0_iter10_reg),9));
    tmp_s_fu_774_p3 <= (ap_const_lv31_0 & tmp_192_i1_fu_759_p2);
    x_is_1_fu_749_p2 <= (tmp_5_reg_1718_pp0_iter10_reg and tmp_4_fu_743_p2);
    x_is_1_not_fu_1447_p2 <= (x_is_1_reg_1843_pp0_iter19_reg xor ap_const_lv1_1);
    x_is_n1_fu_1287_p2 <= (x_is_1_reg_1843_pp0_iter19_reg and p_Result_s_reg_1670_pp0_iter19_reg);
    x_is_p1_fu_1282_p2 <= (x_is_1_reg_1843_pp0_iter19_reg and not_Result_i_fu_1277_p2);
end behav;
