// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pow_generic_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        base_r,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] base_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] pow_reduce_anonymo_7_address0;
reg    pow_reduce_anonymo_7_ce0;
wire   [5:0] pow_reduce_anonymo_7_q0;
wire   [5:0] pow_reduce_anonymo_6_address0;
reg    pow_reduce_anonymo_6_ce0;
wire   [55:0] pow_reduce_anonymo_6_q0;
wire   [3:0] pow_reduce_anonymo_9_address0;
reg    pow_reduce_anonymo_9_ce0;
wire   [51:0] pow_reduce_anonymo_9_q0;
wire   [5:0] pow_reduce_anonymo_10_address0;
reg    pow_reduce_anonymo_10_ce0;
wire   [48:0] pow_reduce_anonymo_10_q0;
wire   [5:0] pow_reduce_anonymo_8_address0;
reg    pow_reduce_anonymo_8_ce0;
wire   [43:0] pow_reduce_anonymo_8_q0;
wire   [8:0] pow_reduce_anonymo_11_address0;
reg    pow_reduce_anonymo_11_ce0;
wire   [26:0] pow_reduce_anonymo_11_q0;
wire   [4:0] pow_reduce_anonymo_address0;
reg    pow_reduce_anonymo_ce0;
wire   [7:0] pow_reduce_anonymo_q0;
reg   [0:0] p_Result_s_reg_1670;
reg   [0:0] p_Result_s_reg_1670_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter6_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter7_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter8_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter9_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter10_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter11_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter12_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter13_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter14_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter15_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter16_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter17_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter18_reg;
reg   [0:0] p_Result_s_reg_1670_pp0_iter19_reg;
reg   [7:0] loc_V_reg_1677;
reg   [7:0] loc_V_reg_1677_pp0_iter1_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter2_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter3_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter4_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter5_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter6_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter7_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter8_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter9_reg;
reg   [7:0] loc_V_reg_1677_pp0_iter10_reg;
wire   [22:0] loc_V_1_fu_378_p1;
reg   [22:0] loc_V_1_reg_1684;
reg   [22:0] loc_V_1_reg_1684_pp0_iter1_reg;
reg   [0:0] tmp_49_reg_1692;
reg   [0:0] tmp_49_reg_1692_pp0_iter1_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter2_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter3_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter4_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter5_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter6_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter7_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter8_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter9_reg;
reg   [0:0] tmp_49_reg_1692_pp0_iter10_reg;
reg   [5:0] b_frac_tilde_inverse_reg_1708;
reg   [55:0] log_sum_V_reg_1713;
reg   [55:0] log_sum_V_reg_1713_pp0_iter2_reg;
reg   [55:0] log_sum_V_reg_1713_pp0_iter3_reg;
reg   [55:0] log_sum_V_reg_1713_pp0_iter4_reg;
reg   [55:0] log_sum_V_reg_1713_pp0_iter5_reg;
reg   [55:0] log_sum_V_reg_1713_pp0_iter6_reg;
reg   [55:0] log_sum_V_reg_1713_pp0_iter7_reg;
reg   [55:0] log_sum_V_reg_1713_pp0_iter8_reg;
wire   [0:0] tmp_5_fu_406_p2;
reg   [0:0] tmp_5_reg_1718;
reg   [0:0] tmp_5_reg_1718_pp0_iter3_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter4_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter5_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter6_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter7_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter8_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter9_reg;
reg   [0:0] tmp_5_reg_1718_pp0_iter10_reg;
wire   [0:0] tmp_i2_fu_411_p2;
reg   [0:0] tmp_i2_reg_1724;
reg   [0:0] tmp_i2_reg_1724_pp0_iter3_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter4_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter5_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter6_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter7_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter8_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter9_reg;
reg   [0:0] tmp_i2_reg_1724_pp0_iter10_reg;
wire   [24:0] p_Val2_1_fu_446_p2;
reg   [24:0] p_Val2_1_reg_1729;
reg   [24:0] p_Val2_1_reg_1729_pp0_iter3_reg;
reg   [3:0] p_Val2_s_reg_1738;
reg   [3:0] p_Val2_s_reg_1738_pp0_iter3_reg;
reg   [3:0] p_Val2_s_reg_1738_pp0_iter4_reg;
reg   [3:0] p_Val2_s_reg_1738_pp0_iter5_reg;
reg   [3:0] p_Val2_s_reg_1738_pp0_iter6_reg;
reg   [3:0] p_Val2_s_reg_1738_pp0_iter7_reg;
wire   [42:0] p_Val2_3_fu_476_p2;
reg   [42:0] p_Val2_3_reg_1744;
reg   [40:0] p_Val2_45_reg_1749;
reg   [5:0] p_Val2_61_reg_1755;
reg   [5:0] p_Val2_61_reg_1755_pp0_iter5_reg;
reg   [5:0] p_Val2_61_reg_1755_pp0_iter6_reg;
reg   [34:0] tmp_27_reg_1761;
wire   [49:0] p_Val2_17_fu_609_p2;
reg   [49:0] p_Val2_17_reg_1766;
reg   [49:0] p_Val2_17_reg_1766_pp0_iter6_reg;
wire   [46:0] grp_fu_621_p2;
reg   [46:0] p_Val2_18_reg_1781;
reg   [43:0] p_Val2_48_reg_1786;
reg   [43:0] p_Val2_48_reg_1786_pp0_iter8_reg;
reg   [43:0] p_Val2_48_reg_1786_pp0_iter9_reg;
reg   [43:0] p_Val2_48_reg_1786_pp0_iter10_reg;
wire   [5:0] p_Val2_62_fu_661_p4;
reg   [5:0] p_Val2_62_reg_1797;
reg   [37:0] tmp_30_reg_1802;
reg   [37:0] tmp_30_reg_1802_pp0_iter8_reg;
reg   [37:0] tmp_30_reg_1802_pp0_iter9_reg;
reg   [37:0] tmp_30_reg_1802_pp0_iter10_reg;
wire   [49:0] tmp13_fu_710_p2;
reg   [49:0] tmp13_reg_1827;
wire  signed [55:0] log_sum_V_1_fu_728_p2;
reg  signed [55:0] log_sum_V_1_reg_1832;
reg  signed [55:0] log_sum_V_1_reg_1832_pp0_iter10_reg;
reg  signed [55:0] log_sum_V_1_reg_1832_pp0_iter11_reg;
reg  signed [55:0] log_sum_V_1_reg_1832_pp0_iter12_reg;
reg  signed [55:0] log_sum_V_1_reg_1832_pp0_iter13_reg;
wire   [49:0] grp_fu_700_p2;
reg   [49:0] p_Val2_26_reg_1838;
wire   [0:0] x_is_1_fu_749_p2;
reg   [0:0] x_is_1_reg_1843;
reg   [0:0] x_is_1_reg_1843_pp0_iter12_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter13_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter14_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter15_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter16_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter17_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter18_reg;
reg   [0:0] x_is_1_reg_1843_pp0_iter19_reg;
wire   [0:0] tmp_9_fu_764_p2;
reg   [0:0] tmp_9_reg_1850;
reg   [0:0] tmp_9_reg_1850_pp0_iter12_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter13_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter14_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter15_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter16_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter17_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter18_reg;
reg   [0:0] tmp_9_reg_1850_pp0_iter19_reg;
wire   [0:0] tmp_1_fu_782_p2;
reg   [0:0] tmp_1_reg_1855;
reg   [0:0] tmp_1_reg_1855_pp0_iter12_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter13_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter14_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter15_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter16_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter17_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter18_reg;
reg   [0:0] tmp_1_reg_1855_pp0_iter19_reg;
wire   [0:0] tmp_3_fu_796_p2;
reg   [0:0] tmp_3_reg_1862;
reg   [0:0] tmp_3_reg_1862_pp0_iter12_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter13_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter14_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter15_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter16_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter17_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter18_reg;
reg   [0:0] tmp_3_reg_1862_pp0_iter19_reg;
wire   [8:0] b_exp_2_fu_808_p3;
reg  signed [8:0] b_exp_2_reg_1868;
reg   [38:0] tmp_34_reg_1873;
reg   [38:0] tmp_34_reg_1873_pp0_iter12_reg;
reg   [22:0] ssdm_int_V_write_ass_3_reg_1878;
reg   [44:0] tmp_13_reg_1888;
wire   [51:0] grp_fu_883_p2;
reg   [51:0] p_Val2_50_reg_1893;
reg  signed [39:0] tmp_16_reg_1898;
reg   [35:0] p_Val2_28_reg_1904;
reg   [35:0] p_Val2_28_reg_1904_pp0_iter15_reg;
reg   [35:0] p_Val2_28_reg_1904_pp0_iter16_reg;
reg  signed [12:0] tmp_73_cast_reg_1909;
reg   [0:0] tmp_66_reg_1914;
wire   [0:0] tmp_45_fu_1081_p2;
reg   [0:0] tmp_45_reg_1919;
reg   [0:0] tmp_45_reg_1919_pp0_iter15_reg;
reg   [0:0] tmp_45_reg_1919_pp0_iter16_reg;
reg   [0:0] tmp_45_reg_1919_pp0_iter17_reg;
reg   [0:0] tmp_45_reg_1919_pp0_iter18_reg;
reg   [0:0] tmp_45_reg_1919_pp0_iter19_reg;
reg   [0:0] tmp_74_reg_1925;
reg   [0:0] tmp_74_reg_1925_pp0_iter15_reg;
reg   [0:0] tmp_74_reg_1925_pp0_iter16_reg;
reg   [0:0] tmp_74_reg_1925_pp0_iter17_reg;
reg   [0:0] tmp_74_reg_1925_pp0_iter18_reg;
reg   [0:0] tmp_74_reg_1925_pp0_iter19_reg;
wire  signed [9:0] r_exp_V_3_fu_1148_p3;
reg  signed [9:0] r_exp_V_3_reg_1931;
reg  signed [9:0] r_exp_V_3_reg_1931_pp0_iter16_reg;
reg  signed [9:0] r_exp_V_3_reg_1931_pp0_iter17_reg;
reg  signed [9:0] r_exp_V_3_reg_1931_pp0_iter18_reg;
reg  signed [9:0] r_exp_V_3_reg_1931_pp0_iter19_reg;
reg   [35:0] p_Val2_10_reg_1938;
wire   [17:0] p_Val2_55_fu_1197_p1;
reg   [17:0] p_Val2_55_reg_1943;
reg   [26:0] p_Val2_57_reg_1958;
reg   [17:0] exp_Z1P_m_1_V_reg_1963;
reg   [17:0] tmp_37_reg_1968;
wire   [27:0] p_Val2_12_fu_1257_p2;
reg   [27:0] p_Val2_12_reg_1973;
wire   [35:0] p_Val2_13_fu_1664_p2;
reg   [35:0] p_Val2_13_reg_1978;
wire   [26:0] tmp_70_fu_1269_p1;
reg   [26:0] tmp_70_reg_1985;
wire   [25:0] tmp_71_fu_1273_p1;
reg   [25:0] tmp_71_reg_1990;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_11_fu_400_p1;
wire   [63:0] tmp_118_i_i_fu_657_p1;
wire   [63:0] tmp_134_i_i_fu_681_p1;
wire   [63:0] tmp_126_i_i_fu_686_p1;
wire   [63:0] tmp_36_fu_1201_p1;
wire   [63:0] tmp_i2_43_fu_1216_p1;
wire   [31:0] p_Val2_34_fu_356_p1;
wire   [5:0] index0_V_fu_390_p4;
wire   [23:0] tmp_8_fu_425_p3;
wire   [24:0] tmp_12_fu_432_p1;
wire   [24:0] p_Result_14_fu_416_p4;
wire  signed [24:0] tmp_10_fu_436_p3;
wire   [5:0] p_Val2_1_fu_446_p1;
wire   [38:0] p_Val2_9_fu_462_p3;
wire   [38:0] p_Val2_3_fu_476_p0;
wire   [3:0] p_Val2_3_fu_476_p1;
wire   [42:0] sf_fu_492_p4;
wire   [0:0] tmp_55_fu_485_p3;
wire   [43:0] tmp_15_fu_501_p4;
wire   [43:0] tmp_26_fu_510_p1;
wire   [20:0] tmp_53_fu_482_p1;
wire   [42:0] tmp_121_i_i_fu_522_p3;
wire   [43:0] p_Val2_14_fu_514_p3;
wire   [44:0] tmp_122_i_i_fu_534_p1;
wire   [44:0] tmp_121_i_i_cast_fu_530_p1;
wire   [44:0] p_Val2_2_fu_538_p2;
wire   [45:0] tmp_123_i_i_fu_544_p1;
wire   [45:0] tmp_124_i_i_fu_548_p1;
wire   [45:0] p_Val2_8_fu_551_p2;
wire   [48:0] tmp_112_i_i_fu_594_p3;
wire   [48:0] p_Val2_16_fu_587_p3;
wire   [49:0] tmp_112_i_i_cast_fu_601_p1;
wire   [49:0] tmp_113_i_i_fu_605_p1;
wire   [40:0] grp_fu_621_p0;
wire   [5:0] grp_fu_621_p1;
wire   [47:0] tmp_116_i_i_fu_630_p3;
wire   [50:0] tmp_114_i_i_fu_627_p1;
wire   [50:0] tmp_116_i_i_cast_fu_637_p1;
wire   [50:0] p_Val2_19_fu_641_p2;
wire   [43:0] grp_fu_700_p0;
wire   [5:0] grp_fu_700_p1;
wire   [49:0] ssdm_int_V_write_ass_1_fu_690_p1;
wire   [49:0] ssdm_int_V_write_ass_2_fu_706_p1;
wire   [55:0] ssdm_int_V_write_ass_fu_716_p1;
wire   [55:0] tmp62_cast_fu_725_p1;
wire   [55:0] tmp_fu_720_p2;
wire   [8:0] tmp_i_cast_fu_734_p1;
wire   [8:0] b_exp_fu_737_p2;
wire   [0:0] tmp_4_fu_743_p2;
wire   [0:0] tmp_i1_fu_754_p2;
wire   [0:0] tmp_192_i1_fu_759_p2;
wire   [31:0] tmp_s_fu_774_p3;
wire   [0:0] tmp_193_i1_fu_769_p2;
wire   [31:0] tmp_2_fu_788_p3;
wire   [8:0] b_exp_1_fu_802_p2;
wire   [61:0] tmp_128_i_i_fu_822_p3;
wire   [56:0] p_Val2_24_fu_815_p3;
wire   [62:0] tmp_128_i_i_cast_fu_829_p1;
wire   [62:0] tmp_129_i_i_fu_833_p1;
wire   [55:0] tmp_132_i_i_fu_843_p3;
wire   [62:0] p_Val2_25_fu_837_p2;
wire   [62:0] tmp_132_i_i_cast_fu_850_p1;
wire   [62:0] p_Val2_27_fu_854_p2;
wire   [44:0] grp_fu_883_p0;
wire   [22:0] r_V_fu_892_p0;
wire   [45:0] OP1_V_6_cast_fu_889_p1;
wire   [22:0] r_V_fu_892_p1;
wire   [45:0] r_V_fu_892_p2;
wire   [62:0] tmp_14_fu_908_p3;
wire   [63:0] tmp_60_cast_fu_915_p1;
wire   [63:0] tmp_61_cast_fu_919_p1;
wire   [63:0] p_Val2_5_fu_922_p2;
wire  signed [63:0] tmp_17_fu_944_p3;
wire  signed [64:0] p_Val2_8_i_cast_fu_938_p1;
wire   [65:0] tmp_18_fu_955_p1;
wire  signed [65:0] tmp_65_cast_fu_951_p1;
wire   [65:0] p_Val2_52_fu_963_p2;
wire  signed [64:0] p_Val2_6_fu_941_p1;
wire  signed [64:0] tmp_19_fu_959_p1;
wire   [66:0] tmp_20_fu_969_p1;
wire   [66:0] tmp_21_fu_973_p1;
wire  signed [63:0] tmp_22_fu_977_p1;
wire   [64:0] tmp_23_fu_980_p2;
wire  signed [63:0] tmp_24_fu_992_p1;
wire   [63:0] tmp_25_fu_995_p2;
wire   [64:0] p_Val2_18_cast_fu_1001_p2;
wire   [42:0] tmp_38_fu_1013_p4;
wire   [41:0] tmp_46_fu_1031_p4;
wire   [64:0] tmp_28_fu_1041_p3;
wire   [63:0] p_Val2_18_cast_cas_fu_1007_p2;
wire  signed [65:0] m_fix_back_V_fu_1049_p1;
wire   [65:0] p_Val2_58_fu_1023_p3;
wire   [66:0] p_Val2_53_fu_986_p2;
wire  signed [15:0] tmp_29_fu_1098_p3;
wire  signed [24:0] grp_fu_1653_p3;
wire   [14:0] tmp_68_fu_1125_p1;
wire   [9:0] tmp_31_fu_1109_p4;
wire   [0:0] tmp_32_fu_1128_p2;
wire   [9:0] ret_V_3_fu_1134_p2;
wire   [0:0] tmp_67_fu_1118_p3;
wire   [9:0] p_s_fu_1140_p3;
wire  signed [9:0] p_Val2_7_fu_1159_p1;
wire   [44:0] p_Val2_7_fu_1159_p2;
wire  signed [36:0] tmp_33_fu_1175_p1;
wire  signed [36:0] tmp_35_fu_1178_p1;
wire   [36:0] p_Val2_11_fu_1181_p2;
wire   [8:0] m_diff_hi_V_fu_1187_p4;
wire   [4:0] Z2_ind_V_fu_1206_p4;
wire   [18:0] tmp_i3_fu_1221_p1;
wire   [18:0] tmp_1_i_fu_1224_p1;
wire   [18:0] p_Val2_29_fu_1228_p2;
wire   [27:0] tmp_39_fu_1254_p1;
wire   [0:0] not_Result_i_fu_1277_p2;
wire   [31:0] tmp_6_fu_1291_p3;
wire   [44:0] tmp_40_fu_1304_p3;
wire   [44:0] tmp_96_cast_fu_1311_p1;
wire   [42:0] tmp_43_fu_1324_p3;
wire   [42:0] tmp_44_fu_1331_p1;
wire   [43:0] tmp_41_fu_1314_p3;
wire   [43:0] tmp_42_fu_1321_p1;
wire   [44:0] p_Val2_15_fu_1334_p2;
wire   [0:0] tmp_72_fu_1352_p3;
wire   [9:0] r_exp_V_fu_1360_p2;
wire   [9:0] r_exp_V_2_fu_1365_p3;
wire   [2:0] tmp_73_fu_1372_p4;
wire   [0:0] icmp_fu_1382_p2;
wire   [43:0] p_Val2_28_cast_fu_1346_p2;
wire   [42:0] p_Val2_28_cast2_fu_1340_p2;
wire   [22:0] tmp_48_fu_1399_p4;
wire   [22:0] tmp_50_fu_1409_p4;
wire   [7:0] tmp_75_fu_1427_p1;
wire   [7:0] out_exp_V_fu_1431_p2;
wire   [22:0] loc_V_2_fu_1419_p3;
wire   [0:0] x_is_1_not_fu_1447_p2;
wire   [0:0] sel_tmp4_fu_1452_p2;
wire   [0:0] sel_tmp5_fu_1457_p2;
wire   [0:0] x_is_n1_fu_1287_p2;
wire   [0:0] sel_tmp1_fu_1473_p2;
wire   [0:0] tmp55_fu_1479_p2;
wire   [0:0] sel_tmp2_fu_1484_p2;
wire   [0:0] sel_tmp3_fu_1490_p2;
wire   [0:0] tmp_7_fu_1298_p2;
wire   [0:0] sel_tmp8_fu_1501_p2;
wire   [0:0] sel_tmp9_fu_1506_p2;
wire   [0:0] sel_tmp11_fu_1518_p2;
wire   [0:0] or_cond1_fu_1388_p2;
wire   [0:0] sel_tmp12_fu_1524_p2;
wire   [0:0] sel_tmp13_fu_1530_p2;
wire   [0:0] sel_tmp16_demorgan_fu_1546_p2;
wire   [0:0] tmp_47_fu_1393_p2;
wire   [0:0] sel_tmp16_fu_1551_p2;
wire   [0:0] tmp56_fu_1557_p2;
wire   [31:0] p_Result_15_fu_1437_p4;
wire   [0:0] sel_tmp6_fu_1462_p2;
wire   [0:0] x_is_p1_fu_1282_p2;
wire   [0:0] tmp_54_fu_1581_p2;
wire   [31:0] tmp_52_fu_1573_p3;
wire   [31:0] tmp_51_fu_1569_p1;
wire   [0:0] sel_tmp7_fu_1495_p2;
wire   [0:0] sel_tmp_fu_1468_p2;
wire   [0:0] tmp_58_fu_1603_p2;
wire   [31:0] tmp_57_fu_1595_p3;
wire   [31:0] tmp_56_fu_1587_p3;
wire   [0:0] sel_tmp14_fu_1535_p2;
wire   [0:0] sel_tmp10_fu_1512_p2;
wire   [0:0] tmp_61_fu_1625_p2;
wire   [31:0] tmp_60_fu_1617_p3;
wire   [31:0] tmp_59_fu_1609_p3;
wire   [0:0] sel_tmp17_fu_1563_p2;
wire   [0:0] sel_tmp15_fu_1541_p2;
wire   [0:0] tmp_63_fu_1639_p2;
wire   [31:0] tmp_62_fu_1631_p3;
wire   [12:0] grp_fu_1653_p0;
wire   [17:0] p_Val2_13_fu_1664_p0;
wire   [17:0] p_Val2_13_fu_1664_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to19;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [46:0] grp_fu_621_p00;
wire   [46:0] grp_fu_621_p10;
wire   [49:0] grp_fu_700_p00;
wire   [49:0] grp_fu_700_p10;
wire   [35:0] p_Val2_13_fu_1664_p00;
wire   [35:0] p_Val2_13_fu_1664_p10;
wire   [24:0] p_Val2_1_fu_446_p10;
wire   [42:0] p_Val2_3_fu_476_p00;
wire   [42:0] p_Val2_3_fu_476_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
end

pow_generic_floatbkb #(
    .DataWidth( 6 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_7_address0),
    .ce0(pow_reduce_anonymo_7_ce0),
    .q0(pow_reduce_anonymo_7_q0)
);

pow_generic_floatcud #(
    .DataWidth( 56 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_6_address0),
    .ce0(pow_reduce_anonymo_6_ce0),
    .q0(pow_reduce_anonymo_6_q0)
);

pow_generic_floatdEe #(
    .DataWidth( 52 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pow_reduce_anonymo_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_9_address0),
    .ce0(pow_reduce_anonymo_9_ce0),
    .q0(pow_reduce_anonymo_9_q0)
);

pow_generic_floateOg #(
    .DataWidth( 49 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_10_address0),
    .ce0(pow_reduce_anonymo_10_ce0),
    .q0(pow_reduce_anonymo_10_q0)
);

pow_generic_floatfYi #(
    .DataWidth( 44 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_8_address0),
    .ce0(pow_reduce_anonymo_8_ce0),
    .q0(pow_reduce_anonymo_8_q0)
);

pow_generic_floatg8j #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pow_reduce_anonymo_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_11_address0),
    .ce0(pow_reduce_anonymo_11_ce0),
    .q0(pow_reduce_anonymo_11_q0)
);

pow_generic_floathbi #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
pow_reduce_anonymo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_address0),
    .ce0(pow_reduce_anonymo_ce0),
    .q0(pow_reduce_anonymo_q0)
);

fpag_gaus_mul_41nibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 47 ))
fpag_gaus_mul_41nibs_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_621_p0),
    .din1(grp_fu_621_p1),
    .ce(1'b1),
    .dout(grp_fu_621_p2)
);

fpag_gaus_mul_44njbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 50 ))
fpag_gaus_mul_44njbC_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_700_p0),
    .din1(grp_fu_700_p1),
    .ce(1'b1),
    .dout(grp_fu_700_p2)
);

fpag_gaus_mul_45nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 52 ))
fpag_gaus_mul_45nkbM_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_883_p0),
    .din1(b_exp_2_reg_1868),
    .ce(1'b1),
    .dout(grp_fu_883_p2)
);

fpag_gaus_mac_mullbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
fpag_gaus_mac_mullbW_U14(
    .din0(grp_fu_1653_p0),
    .din1(tmp_73_cast_reg_1909),
    .din2(tmp_29_fu_1098_p3),
    .dout(grp_fu_1653_p3)
);

fpag_gaus_mul_mulmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
fpag_gaus_mul_mulmb6_U15(
    .din0(p_Val2_13_fu_1664_p0),
    .din1(p_Val2_13_fu_1664_p1),
    .dout(p_Val2_13_fu_1664_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        b_exp_2_reg_1868 <= b_exp_2_fu_808_p3;
        exp_Z1P_m_1_V_reg_1963 <= {{p_Val2_29_fu_1228_p2[18:1]}};
        loc_V_reg_1677_pp0_iter10_reg <= loc_V_reg_1677_pp0_iter9_reg;
        loc_V_reg_1677_pp0_iter2_reg <= loc_V_reg_1677_pp0_iter1_reg;
        loc_V_reg_1677_pp0_iter3_reg <= loc_V_reg_1677_pp0_iter2_reg;
        loc_V_reg_1677_pp0_iter4_reg <= loc_V_reg_1677_pp0_iter3_reg;
        loc_V_reg_1677_pp0_iter5_reg <= loc_V_reg_1677_pp0_iter4_reg;
        loc_V_reg_1677_pp0_iter6_reg <= loc_V_reg_1677_pp0_iter5_reg;
        loc_V_reg_1677_pp0_iter7_reg <= loc_V_reg_1677_pp0_iter6_reg;
        loc_V_reg_1677_pp0_iter8_reg <= loc_V_reg_1677_pp0_iter7_reg;
        loc_V_reg_1677_pp0_iter9_reg <= loc_V_reg_1677_pp0_iter8_reg;
        log_sum_V_1_reg_1832 <= log_sum_V_1_fu_728_p2;
        log_sum_V_1_reg_1832_pp0_iter10_reg <= log_sum_V_1_reg_1832;
        log_sum_V_1_reg_1832_pp0_iter11_reg <= log_sum_V_1_reg_1832_pp0_iter10_reg;
        log_sum_V_1_reg_1832_pp0_iter12_reg <= log_sum_V_1_reg_1832_pp0_iter11_reg;
        log_sum_V_1_reg_1832_pp0_iter13_reg <= log_sum_V_1_reg_1832_pp0_iter12_reg;
        log_sum_V_reg_1713_pp0_iter2_reg <= log_sum_V_reg_1713;
        log_sum_V_reg_1713_pp0_iter3_reg <= log_sum_V_reg_1713_pp0_iter2_reg;
        log_sum_V_reg_1713_pp0_iter4_reg <= log_sum_V_reg_1713_pp0_iter3_reg;
        log_sum_V_reg_1713_pp0_iter5_reg <= log_sum_V_reg_1713_pp0_iter4_reg;
        log_sum_V_reg_1713_pp0_iter6_reg <= log_sum_V_reg_1713_pp0_iter5_reg;
        log_sum_V_reg_1713_pp0_iter7_reg <= log_sum_V_reg_1713_pp0_iter6_reg;
        log_sum_V_reg_1713_pp0_iter8_reg <= log_sum_V_reg_1713_pp0_iter7_reg;
        p_Result_s_reg_1670_pp0_iter10_reg <= p_Result_s_reg_1670_pp0_iter9_reg;
        p_Result_s_reg_1670_pp0_iter11_reg <= p_Result_s_reg_1670_pp0_iter10_reg;
        p_Result_s_reg_1670_pp0_iter12_reg <= p_Result_s_reg_1670_pp0_iter11_reg;
        p_Result_s_reg_1670_pp0_iter13_reg <= p_Result_s_reg_1670_pp0_iter12_reg;
        p_Result_s_reg_1670_pp0_iter14_reg <= p_Result_s_reg_1670_pp0_iter13_reg;
        p_Result_s_reg_1670_pp0_iter15_reg <= p_Result_s_reg_1670_pp0_iter14_reg;
        p_Result_s_reg_1670_pp0_iter16_reg <= p_Result_s_reg_1670_pp0_iter15_reg;
        p_Result_s_reg_1670_pp0_iter17_reg <= p_Result_s_reg_1670_pp0_iter16_reg;
        p_Result_s_reg_1670_pp0_iter18_reg <= p_Result_s_reg_1670_pp0_iter17_reg;
        p_Result_s_reg_1670_pp0_iter19_reg <= p_Result_s_reg_1670_pp0_iter18_reg;
        p_Result_s_reg_1670_pp0_iter2_reg <= p_Result_s_reg_1670_pp0_iter1_reg;
        p_Result_s_reg_1670_pp0_iter3_reg <= p_Result_s_reg_1670_pp0_iter2_reg;
        p_Result_s_reg_1670_pp0_iter4_reg <= p_Result_s_reg_1670_pp0_iter3_reg;
        p_Result_s_reg_1670_pp0_iter5_reg <= p_Result_s_reg_1670_pp0_iter4_reg;
        p_Result_s_reg_1670_pp0_iter6_reg <= p_Result_s_reg_1670_pp0_iter5_reg;
        p_Result_s_reg_1670_pp0_iter7_reg <= p_Result_s_reg_1670_pp0_iter6_reg;
        p_Result_s_reg_1670_pp0_iter8_reg <= p_Result_s_reg_1670_pp0_iter7_reg;
        p_Result_s_reg_1670_pp0_iter9_reg <= p_Result_s_reg_1670_pp0_iter8_reg;
        p_Val2_10_reg_1938 <= {{p_Val2_7_fu_1159_p2[44:9]}};
        p_Val2_12_reg_1973 <= p_Val2_12_fu_1257_p2;
        p_Val2_13_reg_1978 <= p_Val2_13_fu_1664_p2;
        p_Val2_17_reg_1766 <= p_Val2_17_fu_609_p2;
        p_Val2_17_reg_1766_pp0_iter6_reg <= p_Val2_17_reg_1766;
        p_Val2_18_reg_1781 <= grp_fu_621_p2;
        p_Val2_1_reg_1729 <= p_Val2_1_fu_446_p2;
        p_Val2_1_reg_1729_pp0_iter3_reg <= p_Val2_1_reg_1729;
        p_Val2_26_reg_1838 <= grp_fu_700_p2;
        p_Val2_28_reg_1904 <= {{p_Val2_18_cast_fu_1001_p2[63:28]}};
        p_Val2_28_reg_1904_pp0_iter15_reg <= p_Val2_28_reg_1904;
        p_Val2_28_reg_1904_pp0_iter16_reg <= p_Val2_28_reg_1904_pp0_iter15_reg;
        p_Val2_3_reg_1744 <= p_Val2_3_fu_476_p2;
        p_Val2_45_reg_1749 <= {{p_Val2_8_fu_551_p2[43:3]}};
        p_Val2_48_reg_1786 <= {{p_Val2_19_fu_641_p2[49:6]}};
        p_Val2_48_reg_1786_pp0_iter10_reg <= p_Val2_48_reg_1786_pp0_iter9_reg;
        p_Val2_48_reg_1786_pp0_iter8_reg <= p_Val2_48_reg_1786;
        p_Val2_48_reg_1786_pp0_iter9_reg <= p_Val2_48_reg_1786_pp0_iter8_reg;
        p_Val2_50_reg_1893 <= grp_fu_883_p2;
        p_Val2_55_reg_1943 <= p_Val2_55_fu_1197_p1;
        p_Val2_57_reg_1958 <= pow_reduce_anonymo_11_q0;
        p_Val2_61_reg_1755 <= {{p_Val2_8_fu_551_p2[43:38]}};
        p_Val2_61_reg_1755_pp0_iter5_reg <= p_Val2_61_reg_1755;
        p_Val2_61_reg_1755_pp0_iter6_reg <= p_Val2_61_reg_1755_pp0_iter5_reg;
        p_Val2_62_reg_1797 <= {{p_Val2_19_fu_641_p2[49:44]}};
        p_Val2_s_reg_1738 <= {{p_Val2_1_fu_446_p2[24:21]}};
        p_Val2_s_reg_1738_pp0_iter3_reg <= p_Val2_s_reg_1738;
        p_Val2_s_reg_1738_pp0_iter4_reg <= p_Val2_s_reg_1738_pp0_iter3_reg;
        p_Val2_s_reg_1738_pp0_iter5_reg <= p_Val2_s_reg_1738_pp0_iter4_reg;
        p_Val2_s_reg_1738_pp0_iter6_reg <= p_Val2_s_reg_1738_pp0_iter5_reg;
        p_Val2_s_reg_1738_pp0_iter7_reg <= p_Val2_s_reg_1738_pp0_iter6_reg;
        r_exp_V_3_reg_1931 <= r_exp_V_3_fu_1148_p3;
        r_exp_V_3_reg_1931_pp0_iter16_reg <= r_exp_V_3_reg_1931;
        r_exp_V_3_reg_1931_pp0_iter17_reg <= r_exp_V_3_reg_1931_pp0_iter16_reg;
        r_exp_V_3_reg_1931_pp0_iter18_reg <= r_exp_V_3_reg_1931_pp0_iter17_reg;
        r_exp_V_3_reg_1931_pp0_iter19_reg <= r_exp_V_3_reg_1931_pp0_iter18_reg;
        ssdm_int_V_write_ass_3_reg_1878 <= {{p_Val2_27_fu_854_p2[62:40]}};
        tmp13_reg_1827 <= tmp13_fu_710_p2;
        tmp_13_reg_1888 <= {{r_V_fu_892_p2[45:1]}};
        tmp_16_reg_1898 <= {{p_Val2_5_fu_922_p2[63:24]}};
        tmp_1_reg_1855 <= tmp_1_fu_782_p2;
        tmp_1_reg_1855_pp0_iter12_reg <= tmp_1_reg_1855;
        tmp_1_reg_1855_pp0_iter13_reg <= tmp_1_reg_1855_pp0_iter12_reg;
        tmp_1_reg_1855_pp0_iter14_reg <= tmp_1_reg_1855_pp0_iter13_reg;
        tmp_1_reg_1855_pp0_iter15_reg <= tmp_1_reg_1855_pp0_iter14_reg;
        tmp_1_reg_1855_pp0_iter16_reg <= tmp_1_reg_1855_pp0_iter15_reg;
        tmp_1_reg_1855_pp0_iter17_reg <= tmp_1_reg_1855_pp0_iter16_reg;
        tmp_1_reg_1855_pp0_iter18_reg <= tmp_1_reg_1855_pp0_iter17_reg;
        tmp_1_reg_1855_pp0_iter19_reg <= tmp_1_reg_1855_pp0_iter18_reg;
        tmp_27_reg_1761 <= {{p_Val2_8_fu_551_p2[37:3]}};
        tmp_30_reg_1802 <= {{p_Val2_19_fu_641_p2[43:6]}};
        tmp_30_reg_1802_pp0_iter10_reg <= tmp_30_reg_1802_pp0_iter9_reg;
        tmp_30_reg_1802_pp0_iter8_reg <= tmp_30_reg_1802;
        tmp_30_reg_1802_pp0_iter9_reg <= tmp_30_reg_1802_pp0_iter8_reg;
        tmp_34_reg_1873 <= {{p_Val2_27_fu_854_p2[62:24]}};
        tmp_34_reg_1873_pp0_iter12_reg <= tmp_34_reg_1873;
        tmp_37_reg_1968 <= {{pow_reduce_anonymo_11_q0[26:9]}};
        tmp_3_reg_1862 <= tmp_3_fu_796_p2;
        tmp_3_reg_1862_pp0_iter12_reg <= tmp_3_reg_1862;
        tmp_3_reg_1862_pp0_iter13_reg <= tmp_3_reg_1862_pp0_iter12_reg;
        tmp_3_reg_1862_pp0_iter14_reg <= tmp_3_reg_1862_pp0_iter13_reg;
        tmp_3_reg_1862_pp0_iter15_reg <= tmp_3_reg_1862_pp0_iter14_reg;
        tmp_3_reg_1862_pp0_iter16_reg <= tmp_3_reg_1862_pp0_iter15_reg;
        tmp_3_reg_1862_pp0_iter17_reg <= tmp_3_reg_1862_pp0_iter16_reg;
        tmp_3_reg_1862_pp0_iter18_reg <= tmp_3_reg_1862_pp0_iter17_reg;
        tmp_3_reg_1862_pp0_iter19_reg <= tmp_3_reg_1862_pp0_iter18_reg;
        tmp_45_reg_1919 <= tmp_45_fu_1081_p2;
        tmp_45_reg_1919_pp0_iter15_reg <= tmp_45_reg_1919;
        tmp_45_reg_1919_pp0_iter16_reg <= tmp_45_reg_1919_pp0_iter15_reg;
        tmp_45_reg_1919_pp0_iter17_reg <= tmp_45_reg_1919_pp0_iter16_reg;
        tmp_45_reg_1919_pp0_iter18_reg <= tmp_45_reg_1919_pp0_iter17_reg;
        tmp_45_reg_1919_pp0_iter19_reg <= tmp_45_reg_1919_pp0_iter18_reg;
        tmp_49_reg_1692_pp0_iter10_reg <= tmp_49_reg_1692_pp0_iter9_reg;
        tmp_49_reg_1692_pp0_iter2_reg <= tmp_49_reg_1692_pp0_iter1_reg;
        tmp_49_reg_1692_pp0_iter3_reg <= tmp_49_reg_1692_pp0_iter2_reg;
        tmp_49_reg_1692_pp0_iter4_reg <= tmp_49_reg_1692_pp0_iter3_reg;
        tmp_49_reg_1692_pp0_iter5_reg <= tmp_49_reg_1692_pp0_iter4_reg;
        tmp_49_reg_1692_pp0_iter6_reg <= tmp_49_reg_1692_pp0_iter5_reg;
        tmp_49_reg_1692_pp0_iter7_reg <= tmp_49_reg_1692_pp0_iter6_reg;
        tmp_49_reg_1692_pp0_iter8_reg <= tmp_49_reg_1692_pp0_iter7_reg;
        tmp_49_reg_1692_pp0_iter9_reg <= tmp_49_reg_1692_pp0_iter8_reg;
        tmp_5_reg_1718 <= tmp_5_fu_406_p2;
        tmp_5_reg_1718_pp0_iter10_reg <= tmp_5_reg_1718_pp0_iter9_reg;
        tmp_5_reg_1718_pp0_iter3_reg <= tmp_5_reg_1718;
        tmp_5_reg_1718_pp0_iter4_reg <= tmp_5_reg_1718_pp0_iter3_reg;
        tmp_5_reg_1718_pp0_iter5_reg <= tmp_5_reg_1718_pp0_iter4_reg;
        tmp_5_reg_1718_pp0_iter6_reg <= tmp_5_reg_1718_pp0_iter5_reg;
        tmp_5_reg_1718_pp0_iter7_reg <= tmp_5_reg_1718_pp0_iter6_reg;
        tmp_5_reg_1718_pp0_iter8_reg <= tmp_5_reg_1718_pp0_iter7_reg;
        tmp_5_reg_1718_pp0_iter9_reg <= tmp_5_reg_1718_pp0_iter8_reg;
        tmp_66_reg_1914 <= p_Val2_18_cast_fu_1001_p2[32'd63];
        tmp_70_reg_1985 <= tmp_70_fu_1269_p1;
        tmp_71_reg_1990 <= tmp_71_fu_1273_p1;
        tmp_73_cast_reg_1909 <= {{p_Val2_18_cast_cas_fu_1007_p2[63:51]}};
        tmp_74_reg_1925 <= p_Val2_53_fu_986_p2[32'd64];
        tmp_74_reg_1925_pp0_iter15_reg <= tmp_74_reg_1925;
        tmp_74_reg_1925_pp0_iter16_reg <= tmp_74_reg_1925_pp0_iter15_reg;
        tmp_74_reg_1925_pp0_iter17_reg <= tmp_74_reg_1925_pp0_iter16_reg;
        tmp_74_reg_1925_pp0_iter18_reg <= tmp_74_reg_1925_pp0_iter17_reg;
        tmp_74_reg_1925_pp0_iter19_reg <= tmp_74_reg_1925_pp0_iter18_reg;
        tmp_9_reg_1850 <= tmp_9_fu_764_p2;
        tmp_9_reg_1850_pp0_iter12_reg <= tmp_9_reg_1850;
        tmp_9_reg_1850_pp0_iter13_reg <= tmp_9_reg_1850_pp0_iter12_reg;
        tmp_9_reg_1850_pp0_iter14_reg <= tmp_9_reg_1850_pp0_iter13_reg;
        tmp_9_reg_1850_pp0_iter15_reg <= tmp_9_reg_1850_pp0_iter14_reg;
        tmp_9_reg_1850_pp0_iter16_reg <= tmp_9_reg_1850_pp0_iter15_reg;
        tmp_9_reg_1850_pp0_iter17_reg <= tmp_9_reg_1850_pp0_iter16_reg;
        tmp_9_reg_1850_pp0_iter18_reg <= tmp_9_reg_1850_pp0_iter17_reg;
        tmp_9_reg_1850_pp0_iter19_reg <= tmp_9_reg_1850_pp0_iter18_reg;
        tmp_i2_reg_1724 <= tmp_i2_fu_411_p2;
        tmp_i2_reg_1724_pp0_iter10_reg <= tmp_i2_reg_1724_pp0_iter9_reg;
        tmp_i2_reg_1724_pp0_iter3_reg <= tmp_i2_reg_1724;
        tmp_i2_reg_1724_pp0_iter4_reg <= tmp_i2_reg_1724_pp0_iter3_reg;
        tmp_i2_reg_1724_pp0_iter5_reg <= tmp_i2_reg_1724_pp0_iter4_reg;
        tmp_i2_reg_1724_pp0_iter6_reg <= tmp_i2_reg_1724_pp0_iter5_reg;
        tmp_i2_reg_1724_pp0_iter7_reg <= tmp_i2_reg_1724_pp0_iter6_reg;
        tmp_i2_reg_1724_pp0_iter8_reg <= tmp_i2_reg_1724_pp0_iter7_reg;
        tmp_i2_reg_1724_pp0_iter9_reg <= tmp_i2_reg_1724_pp0_iter8_reg;
        x_is_1_reg_1843 <= x_is_1_fu_749_p2;
        x_is_1_reg_1843_pp0_iter12_reg <= x_is_1_reg_1843;
        x_is_1_reg_1843_pp0_iter13_reg <= x_is_1_reg_1843_pp0_iter12_reg;
        x_is_1_reg_1843_pp0_iter14_reg <= x_is_1_reg_1843_pp0_iter13_reg;
        x_is_1_reg_1843_pp0_iter15_reg <= x_is_1_reg_1843_pp0_iter14_reg;
        x_is_1_reg_1843_pp0_iter16_reg <= x_is_1_reg_1843_pp0_iter15_reg;
        x_is_1_reg_1843_pp0_iter17_reg <= x_is_1_reg_1843_pp0_iter16_reg;
        x_is_1_reg_1843_pp0_iter18_reg <= x_is_1_reg_1843_pp0_iter17_reg;
        x_is_1_reg_1843_pp0_iter19_reg <= x_is_1_reg_1843_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_frac_tilde_inverse_reg_1708 <= pow_reduce_anonymo_7_q0;
        loc_V_1_reg_1684 <= loc_V_1_fu_378_p1;
        loc_V_1_reg_1684_pp0_iter1_reg <= loc_V_1_reg_1684;
        loc_V_reg_1677 <= {{p_Val2_34_fu_356_p1[30:23]}};
        loc_V_reg_1677_pp0_iter1_reg <= loc_V_reg_1677;
        log_sum_V_reg_1713 <= pow_reduce_anonymo_6_q0;
        p_Result_s_reg_1670 <= p_Val2_34_fu_356_p1[32'd31];
        p_Result_s_reg_1670_pp0_iter1_reg <= p_Result_s_reg_1670;
        tmp_49_reg_1692 <= p_Val2_34_fu_356_p1[32'd22];
        tmp_49_reg_1692_pp0_iter1_reg <= tmp_49_reg_1692;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to19 = 1'b1;
    end else begin
        ap_idle_pp0_0to19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_10_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_11_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_6_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_7_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_8_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_9_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_6_cast_fu_889_p1 = ssdm_int_V_write_ass_3_reg_1878;

assign Z2_ind_V_fu_1206_p4 = {{p_Val2_11_fu_1181_p2[17:13]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_63_fu_1639_p2[0:0] === 1'b1) ? 32'd0 : tmp_62_fu_1631_p3);

assign b_exp_1_fu_802_p2 = ($signed(9'd386) + $signed(tmp_i_cast_fu_734_p1));

assign b_exp_2_fu_808_p3 = ((tmp_49_reg_1692_pp0_iter10_reg[0:0] === 1'b1) ? b_exp_1_fu_802_p2 : b_exp_fu_737_p2);

assign b_exp_fu_737_p2 = ($signed(9'd385) + $signed(tmp_i_cast_fu_734_p1));

assign grp_fu_1653_p0 = 25'd2954;

assign grp_fu_621_p0 = grp_fu_621_p00;

assign grp_fu_621_p00 = p_Val2_45_reg_1749;

assign grp_fu_621_p1 = grp_fu_621_p10;

assign grp_fu_621_p10 = p_Val2_61_reg_1755;

assign grp_fu_700_p0 = grp_fu_700_p00;

assign grp_fu_700_p00 = p_Val2_48_reg_1786;

assign grp_fu_700_p1 = grp_fu_700_p10;

assign grp_fu_700_p10 = p_Val2_62_reg_1797;

assign grp_fu_883_p0 = 52'd12193974156572;

assign icmp_fu_1382_p2 = (($signed(tmp_73_fu_1372_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign index0_V_fu_390_p4 = {{p_Val2_34_fu_356_p1[22:17]}};

assign loc_V_1_fu_378_p1 = p_Val2_34_fu_356_p1[22:0];

assign loc_V_2_fu_1419_p3 = ((tmp_72_fu_1352_p3[0:0] === 1'b1) ? tmp_48_fu_1399_p4 : tmp_50_fu_1409_p4);

assign log_sum_V_1_fu_728_p2 = (tmp62_cast_fu_725_p1 + tmp_fu_720_p2);

assign m_diff_hi_V_fu_1187_p4 = {{p_Val2_11_fu_1181_p2[26:18]}};

assign m_fix_back_V_fu_1049_p1 = $signed(tmp_28_fu_1041_p3);

assign not_Result_i_fu_1277_p2 = (p_Result_s_reg_1670_pp0_iter19_reg ^ 1'd1);

assign or_cond1_fu_1388_p2 = (tmp_45_reg_1919_pp0_iter19_reg | icmp_fu_1382_p2);

assign out_exp_V_fu_1431_p2 = (8'd127 + tmp_75_fu_1427_p1);

assign p_Result_14_fu_416_p4 = {{{{1'd1}, {loc_V_1_reg_1684_pp0_iter1_reg}}}, {1'd0}};

assign p_Result_15_fu_1437_p4 = {{{{1'd0}, {out_exp_V_fu_1431_p2}}}, {loc_V_2_fu_1419_p3}};

assign p_Val2_11_fu_1181_p2 = ($signed(tmp_33_fu_1175_p1) - $signed(tmp_35_fu_1178_p1));

assign p_Val2_12_fu_1257_p2 = (28'd4 + tmp_39_fu_1254_p1);

assign p_Val2_13_fu_1664_p0 = p_Val2_13_fu_1664_p00;

assign p_Val2_13_fu_1664_p00 = exp_Z1P_m_1_V_reg_1963;

assign p_Val2_13_fu_1664_p1 = p_Val2_13_fu_1664_p10;

assign p_Val2_13_fu_1664_p10 = tmp_37_reg_1968;

assign p_Val2_14_fu_514_p3 = ((tmp_55_fu_485_p3[0:0] === 1'b1) ? tmp_15_fu_501_p4 : tmp_26_fu_510_p1);

assign p_Val2_15_fu_1334_p2 = (tmp_40_fu_1304_p3 + tmp_96_cast_fu_1311_p1);

assign p_Val2_16_fu_587_p3 = {{8'd128}, {p_Val2_45_reg_1749}};

assign p_Val2_17_fu_609_p2 = (tmp_112_i_i_cast_fu_601_p1 + tmp_113_i_i_fu_605_p1);

assign p_Val2_18_cast_cas_fu_1007_p2 = ($signed(tmp_24_fu_992_p1) + $signed(tmp_25_fu_995_p2));

assign p_Val2_18_cast_fu_1001_p2 = ($signed(tmp_23_fu_980_p2) + $signed(p_Val2_6_fu_941_p1));

assign p_Val2_19_fu_641_p2 = (tmp_114_i_i_fu_627_p1 - tmp_116_i_i_cast_fu_637_p1);

assign p_Val2_1_fu_446_p1 = p_Val2_1_fu_446_p10;

assign p_Val2_1_fu_446_p10 = b_frac_tilde_inverse_reg_1708;

assign p_Val2_1_fu_446_p2 = ($signed(tmp_10_fu_436_p3) * $signed({{1'b0}, {p_Val2_1_fu_446_p1}}));

assign p_Val2_24_fu_815_p3 = {{13'd4096}, {p_Val2_48_reg_1786_pp0_iter10_reg}};

assign p_Val2_25_fu_837_p2 = (tmp_128_i_i_cast_fu_829_p1 + tmp_129_i_i_fu_833_p1);

assign p_Val2_27_fu_854_p2 = (p_Val2_25_fu_837_p2 - tmp_132_i_i_cast_fu_850_p1);

assign p_Val2_28_cast2_fu_1340_p2 = (tmp_43_fu_1324_p3 + tmp_44_fu_1331_p1);

assign p_Val2_28_cast_fu_1346_p2 = (tmp_41_fu_1314_p3 + tmp_42_fu_1321_p1);

assign p_Val2_29_fu_1228_p2 = (tmp_i3_fu_1221_p1 + tmp_1_i_fu_1224_p1);

assign p_Val2_2_fu_538_p2 = (tmp_122_i_i_fu_534_p1 + tmp_121_i_i_cast_fu_530_p1);

assign p_Val2_34_fu_356_p1 = base_r;

assign p_Val2_3_fu_476_p0 = p_Val2_3_fu_476_p00;

assign p_Val2_3_fu_476_p00 = p_Val2_9_fu_462_p3;

assign p_Val2_3_fu_476_p1 = p_Val2_3_fu_476_p10;

assign p_Val2_3_fu_476_p10 = p_Val2_s_reg_1738;

assign p_Val2_3_fu_476_p2 = (p_Val2_3_fu_476_p0 * p_Val2_3_fu_476_p1);

assign p_Val2_52_fu_963_p2 = ($signed(tmp_18_fu_955_p1) + $signed(tmp_65_cast_fu_951_p1));

assign p_Val2_53_fu_986_p2 = (tmp_20_fu_969_p1 + tmp_21_fu_973_p1);

assign p_Val2_55_fu_1197_p1 = p_Val2_11_fu_1181_p2[17:0];

assign p_Val2_58_fu_1023_p3 = {{tmp_38_fu_1013_p4}, {23'd0}};

assign p_Val2_5_fu_922_p2 = (tmp_60_cast_fu_915_p1 - tmp_61_cast_fu_919_p1);

assign p_Val2_62_fu_661_p4 = {{p_Val2_19_fu_641_p2[49:44]}};

assign p_Val2_6_fu_941_p1 = tmp_16_reg_1898;

assign p_Val2_7_fu_1159_p1 = r_exp_V_3_reg_1931;

assign p_Val2_7_fu_1159_p2 = ($signed({{1'b0}, {45'd47632711549}}) * $signed(p_Val2_7_fu_1159_p1));

assign p_Val2_8_fu_551_p2 = (tmp_123_i_i_fu_544_p1 - tmp_124_i_i_fu_548_p1);

assign p_Val2_8_i_cast_fu_938_p1 = log_sum_V_1_reg_1832_pp0_iter13_reg;

assign p_Val2_9_fu_462_p3 = {{p_Val2_1_reg_1729}, {14'd0}};

assign p_s_fu_1140_p3 = ((tmp_32_fu_1128_p2[0:0] === 1'b1) ? tmp_31_fu_1109_p4 : ret_V_3_fu_1134_p2);

assign pow_reduce_anonymo_10_address0 = tmp_118_i_i_fu_657_p1;

assign pow_reduce_anonymo_11_address0 = tmp_36_fu_1201_p1;

assign pow_reduce_anonymo_6_address0 = tmp_11_fu_400_p1;

assign pow_reduce_anonymo_7_address0 = tmp_11_fu_400_p1;

assign pow_reduce_anonymo_8_address0 = tmp_134_i_i_fu_681_p1;

assign pow_reduce_anonymo_9_address0 = tmp_126_i_i_fu_686_p1;

assign pow_reduce_anonymo_address0 = tmp_i2_43_fu_1216_p1;

assign r_V_fu_892_p0 = OP1_V_6_cast_fu_889_p1;

assign r_V_fu_892_p1 = OP1_V_6_cast_fu_889_p1;

assign r_V_fu_892_p2 = (r_V_fu_892_p0 * r_V_fu_892_p1);

assign r_exp_V_2_fu_1365_p3 = ((tmp_72_fu_1352_p3[0:0] === 1'b1) ? r_exp_V_3_reg_1931_pp0_iter19_reg : r_exp_V_fu_1360_p2);

assign r_exp_V_3_fu_1148_p3 = ((tmp_67_fu_1118_p3[0:0] === 1'b1) ? p_s_fu_1140_p3 : tmp_31_fu_1109_p4);

assign r_exp_V_fu_1360_p2 = ($signed(10'd1023) + $signed(r_exp_V_3_reg_1931_pp0_iter19_reg));

assign ret_V_3_fu_1134_p2 = (10'd1 + tmp_31_fu_1109_p4);

assign sel_tmp10_fu_1512_p2 = (sel_tmp9_fu_1506_p2 & sel_tmp8_fu_1501_p2);

assign sel_tmp11_fu_1518_p2 = (tmp_7_fu_1298_p2 & sel_tmp8_fu_1501_p2);

assign sel_tmp12_fu_1524_p2 = (sel_tmp11_fu_1518_p2 & or_cond1_fu_1388_p2);

assign sel_tmp13_fu_1530_p2 = (tmp_74_reg_1925_pp0_iter19_reg ^ 1'd1);

assign sel_tmp14_fu_1535_p2 = (sel_tmp13_fu_1530_p2 & sel_tmp12_fu_1524_p2);

assign sel_tmp15_fu_1541_p2 = (tmp_74_reg_1925_pp0_iter19_reg & sel_tmp12_fu_1524_p2);

assign sel_tmp16_demorgan_fu_1546_p2 = (tmp_45_reg_1919_pp0_iter19_reg | icmp_fu_1382_p2);

assign sel_tmp16_fu_1551_p2 = (sel_tmp16_demorgan_fu_1546_p2 ^ 1'd1);

assign sel_tmp17_fu_1563_p2 = (tmp56_fu_1557_p2 & sel_tmp11_fu_1518_p2);

assign sel_tmp1_fu_1473_p2 = (x_is_n1_fu_1287_p2 ^ 1'd1);

assign sel_tmp2_fu_1484_p2 = (tmp55_fu_1479_p2 & sel_tmp4_fu_1452_p2);

assign sel_tmp3_fu_1490_p2 = (tmp_3_reg_1862_pp0_iter19_reg ^ 1'd1);

assign sel_tmp4_fu_1452_p2 = (x_is_1_not_fu_1447_p2 | p_Result_s_reg_1670_pp0_iter19_reg);

assign sel_tmp5_fu_1457_p2 = (tmp_1_reg_1855_pp0_iter19_reg ^ 1'd1);

assign sel_tmp6_fu_1462_p2 = (sel_tmp5_fu_1457_p2 & sel_tmp4_fu_1452_p2);

assign sel_tmp7_fu_1495_p2 = (sel_tmp3_fu_1490_p2 & sel_tmp2_fu_1484_p2);

assign sel_tmp8_fu_1501_p2 = (tmp_3_reg_1862_pp0_iter19_reg & sel_tmp2_fu_1484_p2);

assign sel_tmp9_fu_1506_p2 = (tmp_7_fu_1298_p2 ^ 1'd1);

assign sel_tmp_fu_1468_p2 = (x_is_n1_fu_1287_p2 & tmp_1_reg_1855_pp0_iter19_reg);

assign sf_fu_492_p4 = {{{{5'd16}, {p_Val2_1_reg_1729_pp0_iter3_reg}}}, {13'd0}};

assign ssdm_int_V_write_ass_1_fu_690_p1 = pow_reduce_anonymo_10_q0;

assign ssdm_int_V_write_ass_2_fu_706_p1 = pow_reduce_anonymo_8_q0;

assign ssdm_int_V_write_ass_fu_716_p1 = pow_reduce_anonymo_9_q0;

assign tmp13_fu_710_p2 = (ssdm_int_V_write_ass_1_fu_690_p1 + ssdm_int_V_write_ass_2_fu_706_p1);

assign tmp55_fu_1479_p2 = (tmp_1_reg_1855_pp0_iter19_reg & sel_tmp1_fu_1473_p2);

assign tmp56_fu_1557_p2 = (tmp_47_fu_1393_p2 & sel_tmp16_fu_1551_p2);

assign tmp62_cast_fu_725_p1 = tmp13_reg_1827;

assign tmp_10_fu_436_p3 = ((tmp_49_reg_1692_pp0_iter1_reg[0:0] === 1'b1) ? tmp_12_fu_432_p1 : p_Result_14_fu_416_p4);

assign tmp_112_i_i_cast_fu_601_p1 = tmp_112_i_i_fu_594_p3;

assign tmp_112_i_i_fu_594_p3 = {{tmp_27_reg_1761}, {14'd0}};

assign tmp_113_i_i_fu_605_p1 = p_Val2_16_fu_587_p3;

assign tmp_114_i_i_fu_627_p1 = p_Val2_17_reg_1766_pp0_iter6_reg;

assign tmp_116_i_i_cast_fu_637_p1 = tmp_116_i_i_fu_630_p3;

assign tmp_116_i_i_fu_630_p3 = {{p_Val2_18_reg_1781}, {1'd0}};

assign tmp_118_i_i_fu_657_p1 = p_Val2_61_reg_1755_pp0_iter6_reg;

assign tmp_11_fu_400_p1 = index0_V_fu_390_p4;

assign tmp_121_i_i_cast_fu_530_p1 = tmp_121_i_i_fu_522_p3;

assign tmp_121_i_i_fu_522_p3 = {{tmp_53_fu_482_p1}, {22'd0}};

assign tmp_122_i_i_fu_534_p1 = p_Val2_14_fu_514_p3;

assign tmp_123_i_i_fu_544_p1 = p_Val2_2_fu_538_p2;

assign tmp_124_i_i_fu_548_p1 = p_Val2_3_reg_1744;

assign tmp_126_i_i_fu_686_p1 = p_Val2_s_reg_1738_pp0_iter7_reg;

assign tmp_128_i_i_cast_fu_829_p1 = tmp_128_i_i_fu_822_p3;

assign tmp_128_i_i_fu_822_p3 = {{tmp_30_reg_1802_pp0_iter10_reg}, {24'd0}};

assign tmp_129_i_i_fu_833_p1 = p_Val2_24_fu_815_p3;

assign tmp_12_fu_432_p1 = tmp_8_fu_425_p3;

assign tmp_132_i_i_cast_fu_850_p1 = tmp_132_i_i_fu_843_p3;

assign tmp_132_i_i_fu_843_p3 = {{p_Val2_26_reg_1838}, {6'd0}};

assign tmp_134_i_i_fu_681_p1 = p_Val2_62_fu_661_p4;

assign tmp_14_fu_908_p3 = {{tmp_34_reg_1873_pp0_iter12_reg}, {24'd0}};

assign tmp_15_fu_501_p4 = {{{{5'd16}, {p_Val2_1_reg_1729_pp0_iter3_reg}}}, {14'd0}};

assign tmp_17_fu_944_p3 = {{p_Val2_50_reg_1893}, {12'd0}};

assign tmp_18_fu_955_p1 = $unsigned(p_Val2_8_i_cast_fu_938_p1);

assign tmp_192_i1_fu_759_p2 = (tmp_i2_reg_1724_pp0_iter10_reg & tmp_i1_fu_754_p2);

assign tmp_193_i1_fu_769_p2 = (tmp_i1_fu_754_p2 & tmp_5_reg_1718_pp0_iter10_reg);

assign tmp_19_fu_959_p1 = tmp_17_fu_944_p3;

assign tmp_1_fu_782_p2 = ((tmp_s_fu_774_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_1224_p1 = pow_reduce_anonymo_q0;

assign tmp_20_fu_969_p1 = p_Val2_52_fu_963_p2;

assign tmp_21_fu_973_p1 = $unsigned(p_Val2_6_fu_941_p1);

assign tmp_22_fu_977_p1 = log_sum_V_1_reg_1832_pp0_iter13_reg;

assign tmp_23_fu_980_p2 = ($signed(tmp_19_fu_959_p1) + $signed(p_Val2_8_i_cast_fu_938_p1));

assign tmp_24_fu_992_p1 = tmp_16_reg_1898;

assign tmp_25_fu_995_p2 = ($signed(tmp_22_fu_977_p1) + $signed(tmp_17_fu_944_p3));

assign tmp_26_fu_510_p1 = sf_fu_492_p4;

assign tmp_28_fu_1041_p3 = {{tmp_46_fu_1031_p4}, {23'd0}};

assign tmp_29_fu_1098_p3 = {{tmp_66_reg_1914}, {15'd16384}};

assign tmp_2_fu_788_p3 = {{31'd0}, {tmp_193_i1_fu_769_p2}};

assign tmp_31_fu_1109_p4 = {{grp_fu_1653_p3[24:15]}};

assign tmp_32_fu_1128_p2 = ((tmp_68_fu_1125_p1 == 15'd0) ? 1'b1 : 1'b0);

assign tmp_33_fu_1175_p1 = $signed(p_Val2_28_reg_1904_pp0_iter16_reg);

assign tmp_35_fu_1178_p1 = $signed(p_Val2_10_reg_1938);

assign tmp_36_fu_1201_p1 = m_diff_hi_V_fu_1187_p4;

assign tmp_38_fu_1013_p4 = {{p_Val2_18_cast_fu_1001_p2[64:22]}};

assign tmp_39_fu_1254_p1 = p_Val2_57_reg_1958;

assign tmp_3_fu_796_p2 = ((tmp_2_fu_788_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_1304_p3 = {{p_Val2_12_reg_1973}, {17'd0}};

assign tmp_41_fu_1314_p3 = {{tmp_70_reg_1985}, {17'd0}};

assign tmp_42_fu_1321_p1 = p_Val2_13_reg_1978;

assign tmp_43_fu_1324_p3 = {{tmp_71_reg_1990}, {17'd0}};

assign tmp_44_fu_1331_p1 = p_Val2_13_reg_1978;

assign tmp_45_fu_1081_p2 = ((m_fix_back_V_fu_1049_p1 != p_Val2_58_fu_1023_p3) ? 1'b1 : 1'b0);

assign tmp_46_fu_1031_p4 = {{p_Val2_18_cast_fu_1001_p2[63:22]}};

assign tmp_47_fu_1393_p2 = (($signed(r_exp_V_2_fu_1365_p3) < $signed(10'd898)) ? 1'b1 : 1'b0);

assign tmp_48_fu_1399_p4 = {{p_Val2_28_cast_fu_1346_p2[42:20]}};

assign tmp_4_fu_743_p2 = ((b_exp_fu_737_p2 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_50_fu_1409_p4 = {{p_Val2_28_cast2_fu_1340_p2[41:19]}};

assign tmp_51_fu_1569_p1 = p_Result_15_fu_1437_p4;

assign tmp_52_fu_1573_p3 = ((sel_tmp6_fu_1462_p2[0:0] === 1'b1) ? 32'd2147483647 : 32'd1065353216);

assign tmp_53_fu_482_p1 = p_Val2_1_reg_1729_pp0_iter3_reg[20:0];

assign tmp_54_fu_1581_p2 = (x_is_p1_fu_1282_p2 | sel_tmp6_fu_1462_p2);

assign tmp_55_fu_485_p3 = p_Val2_1_reg_1729_pp0_iter3_reg[32'd24];

assign tmp_56_fu_1587_p3 = ((tmp_54_fu_1581_p2[0:0] === 1'b1) ? tmp_52_fu_1573_p3 : tmp_51_fu_1569_p1);

assign tmp_57_fu_1595_p3 = ((sel_tmp7_fu_1495_p2[0:0] === 1'b1) ? 32'd2139095040 : 32'd1065353216);

assign tmp_58_fu_1603_p2 = (sel_tmp_fu_1468_p2 | sel_tmp7_fu_1495_p2);

assign tmp_59_fu_1609_p3 = ((tmp_58_fu_1603_p2[0:0] === 1'b1) ? tmp_57_fu_1595_p3 : tmp_56_fu_1587_p3);

assign tmp_5_fu_406_p2 = ((loc_V_1_reg_1684_pp0_iter1_reg == 23'd0) ? 1'b1 : 1'b0);

assign tmp_60_cast_fu_915_p1 = tmp_14_fu_908_p3;

assign tmp_60_fu_1617_p3 = ((sel_tmp14_fu_1535_p2[0:0] === 1'b1) ? 32'd2139095040 : 32'd0);

assign tmp_61_cast_fu_919_p1 = tmp_13_reg_1888;

assign tmp_61_fu_1625_p2 = (sel_tmp14_fu_1535_p2 | sel_tmp10_fu_1512_p2);

assign tmp_62_fu_1631_p3 = ((tmp_61_fu_1625_p2[0:0] === 1'b1) ? tmp_60_fu_1617_p3 : tmp_59_fu_1609_p3);

assign tmp_63_fu_1639_p2 = (sel_tmp17_fu_1563_p2 | sel_tmp15_fu_1541_p2);

assign tmp_65_cast_fu_951_p1 = tmp_17_fu_944_p3;

assign tmp_67_fu_1118_p3 = grp_fu_1653_p3[32'd24];

assign tmp_68_fu_1125_p1 = grp_fu_1653_p3[14:0];

assign tmp_6_fu_1291_p3 = {{31'd0}, {tmp_9_reg_1850_pp0_iter19_reg}};

assign tmp_70_fu_1269_p1 = p_Val2_12_fu_1257_p2[26:0];

assign tmp_71_fu_1273_p1 = p_Val2_12_fu_1257_p2[25:0];

assign tmp_72_fu_1352_p3 = p_Val2_15_fu_1334_p2[32'd43];

assign tmp_73_fu_1372_p4 = {{r_exp_V_2_fu_1365_p3[9:7]}};

assign tmp_75_fu_1427_p1 = r_exp_V_2_fu_1365_p3[7:0];

assign tmp_7_fu_1298_p2 = ((tmp_6_fu_1291_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_8_fu_425_p3 = {{1'd1}, {loc_V_1_reg_1684_pp0_iter1_reg}};

assign tmp_96_cast_fu_1311_p1 = p_Val2_13_reg_1978;

assign tmp_9_fu_764_p2 = ((loc_V_reg_1677_pp0_iter10_reg == 8'd0) ? 1'b1 : 1'b0);

assign tmp_fu_720_p2 = (log_sum_V_reg_1713_pp0_iter8_reg + ssdm_int_V_write_ass_fu_716_p1);

assign tmp_i1_fu_754_p2 = ((loc_V_reg_1677_pp0_iter10_reg == 8'd255) ? 1'b1 : 1'b0);

assign tmp_i2_43_fu_1216_p1 = Z2_ind_V_fu_1206_p4;

assign tmp_i2_fu_411_p2 = ((loc_V_1_reg_1684_pp0_iter1_reg != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i3_fu_1221_p1 = p_Val2_55_reg_1943;

assign tmp_i_cast_fu_734_p1 = loc_V_reg_1677_pp0_iter10_reg;

assign tmp_s_fu_774_p3 = {{31'd0}, {tmp_192_i1_fu_759_p2}};

assign x_is_1_fu_749_p2 = (tmp_5_reg_1718_pp0_iter10_reg & tmp_4_fu_743_p2);

assign x_is_1_not_fu_1447_p2 = (x_is_1_reg_1843_pp0_iter19_reg ^ 1'd1);

assign x_is_n1_fu_1287_p2 = (x_is_1_reg_1843_pp0_iter19_reg & p_Result_s_reg_1670_pp0_iter19_reg);

assign x_is_p1_fu_1282_p2 = (x_is_1_reg_1843_pp0_iter19_reg & not_Result_i_fu_1277_p2);

endmodule //pow_generic_float_s
