// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getGaussianKernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sigmaX,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8
);

parameter    ap_ST_fsm_state1 = 120'd1;
parameter    ap_ST_fsm_state2 = 120'd2;
parameter    ap_ST_fsm_state3 = 120'd4;
parameter    ap_ST_fsm_state4 = 120'd8;
parameter    ap_ST_fsm_state5 = 120'd16;
parameter    ap_ST_fsm_state6 = 120'd32;
parameter    ap_ST_fsm_state7 = 120'd64;
parameter    ap_ST_fsm_state8 = 120'd128;
parameter    ap_ST_fsm_state9 = 120'd256;
parameter    ap_ST_fsm_state10 = 120'd512;
parameter    ap_ST_fsm_state11 = 120'd1024;
parameter    ap_ST_fsm_state12 = 120'd2048;
parameter    ap_ST_fsm_state13 = 120'd4096;
parameter    ap_ST_fsm_state14 = 120'd8192;
parameter    ap_ST_fsm_state15 = 120'd16384;
parameter    ap_ST_fsm_state16 = 120'd32768;
parameter    ap_ST_fsm_state17 = 120'd65536;
parameter    ap_ST_fsm_state18 = 120'd131072;
parameter    ap_ST_fsm_state19 = 120'd262144;
parameter    ap_ST_fsm_state20 = 120'd524288;
parameter    ap_ST_fsm_state21 = 120'd1048576;
parameter    ap_ST_fsm_state22 = 120'd2097152;
parameter    ap_ST_fsm_state23 = 120'd4194304;
parameter    ap_ST_fsm_state24 = 120'd8388608;
parameter    ap_ST_fsm_state25 = 120'd16777216;
parameter    ap_ST_fsm_state26 = 120'd33554432;
parameter    ap_ST_fsm_state27 = 120'd67108864;
parameter    ap_ST_fsm_state28 = 120'd134217728;
parameter    ap_ST_fsm_state29 = 120'd268435456;
parameter    ap_ST_fsm_state30 = 120'd536870912;
parameter    ap_ST_fsm_state31 = 120'd1073741824;
parameter    ap_ST_fsm_state32 = 120'd2147483648;
parameter    ap_ST_fsm_state33 = 120'd4294967296;
parameter    ap_ST_fsm_state34 = 120'd8589934592;
parameter    ap_ST_fsm_state35 = 120'd17179869184;
parameter    ap_ST_fsm_state36 = 120'd34359738368;
parameter    ap_ST_fsm_state37 = 120'd68719476736;
parameter    ap_ST_fsm_state38 = 120'd137438953472;
parameter    ap_ST_fsm_state39 = 120'd274877906944;
parameter    ap_ST_fsm_state40 = 120'd549755813888;
parameter    ap_ST_fsm_state41 = 120'd1099511627776;
parameter    ap_ST_fsm_state42 = 120'd2199023255552;
parameter    ap_ST_fsm_state43 = 120'd4398046511104;
parameter    ap_ST_fsm_state44 = 120'd8796093022208;
parameter    ap_ST_fsm_state45 = 120'd17592186044416;
parameter    ap_ST_fsm_state46 = 120'd35184372088832;
parameter    ap_ST_fsm_state47 = 120'd70368744177664;
parameter    ap_ST_fsm_state48 = 120'd140737488355328;
parameter    ap_ST_fsm_state49 = 120'd281474976710656;
parameter    ap_ST_fsm_state50 = 120'd562949953421312;
parameter    ap_ST_fsm_state51 = 120'd1125899906842624;
parameter    ap_ST_fsm_state52 = 120'd2251799813685248;
parameter    ap_ST_fsm_state53 = 120'd4503599627370496;
parameter    ap_ST_fsm_state54 = 120'd9007199254740992;
parameter    ap_ST_fsm_state55 = 120'd18014398509481984;
parameter    ap_ST_fsm_state56 = 120'd36028797018963968;
parameter    ap_ST_fsm_state57 = 120'd72057594037927936;
parameter    ap_ST_fsm_state58 = 120'd144115188075855872;
parameter    ap_ST_fsm_state59 = 120'd288230376151711744;
parameter    ap_ST_fsm_state60 = 120'd576460752303423488;
parameter    ap_ST_fsm_state61 = 120'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 120'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 120'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 120'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 120'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 120'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 120'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 120'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 120'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 120'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 120'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 120'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 120'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 120'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 120'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 120'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 120'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 120'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 120'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 120'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 120'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 120'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 120'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 120'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 120'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 120'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 120'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 120'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 120'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 120'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 120'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 120'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 120'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 120'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 120'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 120'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 120'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 120'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 120'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 120'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 120'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 120'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 120'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 120'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 120'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 120'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 120'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 120'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 120'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 120'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 120'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 120'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 120'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 120'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 120'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 120'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 120'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 120'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 120'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 120'd664613997892457936451903530140172288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] sigmaX;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [119:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_282_p2;
reg   [63:0] reg_333;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_251_p2;
reg   [31:0] reg_340;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state101;
wire   [63:0] sigmaX_assign_fu_393_p3;
wire   [1:0] i_1_fu_412_p2;
reg   [1:0] i_1_reg_1397;
wire    ap_CS_fsm_state14;
wire  signed [31:0] x_assign1_fu_424_p1;
wire   [0:0] exitcond1_fu_406_p2;
wire   [31:0] grp_fu_261_p1;
reg   [31:0] x_assign_reg_1461;
wire    ap_CS_fsm_state19;
wire   [4:0] tmp_80_fu_445_p2;
reg   [4:0] tmp_80_reg_1466;
wire   [1:0] j_1_fu_457_p2;
reg   [1:0] j_1_reg_1474;
wire    ap_CS_fsm_state20;
wire  signed [31:0] x_assign_s_fu_469_p1;
wire   [0:0] exitcond3_fu_451_p2;
wire   [4:0] tmp_87_fu_478_p2;
reg   [4:0] tmp_87_reg_1484;
wire   [31:0] grp_pow_generic_float_s_fu_213_ap_return;
reg   [31:0] tmp_i_i_reg_1489;
wire    ap_CS_fsm_state45;
wire   [31:0] grp_pow_generic_float_s_fu_232_ap_return;
reg   [31:0] tmp_i_i1_reg_1494;
wire   [63:0] grp_fu_271_p1;
reg   [63:0] tmp_59_reg_1499;
wire    ap_CS_fsm_state46;
wire   [63:0] tmp_62_fu_274_p1;
reg   [63:0] tmp_62_reg_1504;
wire   [63:0] grp_fu_287_p2;
reg   [63:0] tmp_60_reg_1509;
wire    ap_CS_fsm_state77;
wire   [63:0] grp_fu_291_p2;
reg   [63:0] tmp_63_reg_1514;
wire   [31:0] index1_fu_265_p1;
reg   [31:0] index1_reg_1519;
wire    ap_CS_fsm_state78;
wire   [31:0] index2_fu_268_p1;
reg   [31:0] index2_reg_1524;
wire   [31:0] tmp_64_fu_492_p1;
wire    ap_CS_fsm_state79;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] tmp_i_i2_reg_1534;
wire    ap_CS_fsm_state92;
wire   [1:0] i_2_fu_512_p2;
reg   [1:0] i_2_reg_1543;
wire    ap_CS_fsm_state99;
wire   [4:0] tmp_86_fu_534_p2;
reg   [4:0] tmp_86_reg_1548;
wire   [0:0] exitcond2_fu_506_p2;
wire   [0:0] sel_tmp16_fu_540_p2;
reg   [0:0] sel_tmp16_reg_1553;
wire   [0:0] sel_tmp24_fu_546_p2;
reg   [0:0] sel_tmp24_reg_1559;
wire   [0:0] sel_tmp31_fu_564_p2;
reg   [0:0] sel_tmp31_reg_1566;
wire   [1:0] j_2_fu_630_p2;
reg   [1:0] j_2_reg_1575;
wire    ap_CS_fsm_state100;
reg   [3:0] kval_addr_1_reg_1580;
wire   [0:0] exitcond_fu_624_p2;
wire   [0:0] tmp_94_fu_656_p2;
reg   [0:0] tmp_94_reg_1585;
wire   [31:0] kval_q0;
wire   [31:0] grp_fu_255_p2;
reg   [31:0] v_assign_reg_1601;
wire    ap_CS_fsm_state116;
reg   [0:0] isneg_reg_1606;
wire    ap_CS_fsm_state117;
reg   [10:0] exp_tmp_V_reg_1613;
wire   [51:0] tmp_91_fu_688_p1;
reg   [51:0] tmp_91_reg_1618;
wire   [0:0] tmp_70_fu_692_p2;
reg   [0:0] tmp_70_reg_1623;
wire   [53:0] p_Result_s_fu_708_p1;
reg   [53:0] p_Result_s_reg_1629;
wire    ap_CS_fsm_state118;
wire   [53:0] man_V_1_fu_712_p2;
reg   [53:0] man_V_1_reg_1634;
wire   [11:0] F2_fu_718_p2;
reg   [11:0] F2_reg_1639;
wire   [0:0] tmp_71_fu_724_p2;
reg   [0:0] tmp_71_reg_1645;
wire  signed [11:0] sh_amt_fu_742_p3;
reg  signed [11:0] sh_amt_reg_1651;
wire   [0:0] icmp_fu_760_p2;
reg   [0:0] icmp_reg_1658;
wire   [0:0] tmp_82_fu_766_p2;
reg   [0:0] tmp_82_reg_1663;
wire   [0:0] tmp_74_fu_780_p2;
reg   [0:0] tmp_74_reg_1668;
wire    ap_CS_fsm_state119;
wire   [15:0] tmp_92_fu_785_p1;
reg   [15:0] tmp_92_reg_1673;
wire   [15:0] p_Val2_66_fu_850_p2;
reg   [15:0] p_Val2_66_reg_1679;
wire   [0:0] sel_tmp6_demorgan_fu_856_p2;
reg   [0:0] sel_tmp6_demorgan_reg_1684;
reg   [3:0] kval_address0;
reg    kval_ce0;
reg    kval_we0;
reg   [31:0] kval_d0;
wire    grp_pow_generic_float_s_fu_213_ap_start;
wire    grp_pow_generic_float_s_fu_213_ap_done;
wire    grp_pow_generic_float_s_fu_213_ap_idle;
wire    grp_pow_generic_float_s_fu_213_ap_ready;
wire    grp_pow_generic_float_s_fu_232_ap_start;
wire    grp_pow_generic_float_s_fu_232_ap_done;
wire    grp_pow_generic_float_s_fu_232_ap_idle;
wire    grp_pow_generic_float_s_fu_232_ap_ready;
reg   [1:0] i_reg_166;
reg   [1:0] j_reg_178;
wire    ap_CS_fsm_state98;
reg   [1:0] i1_reg_189;
reg   [1:0] j2_reg_201;
wire    ap_CS_fsm_state120;
reg    grp_pow_generic_float_s_fu_213_ap_start_reg;
wire    ap_CS_fsm_state24;
reg   [119:0] ap_NS_fsm;
wire    ap_NS_fsm_state25;
wire    ap_CS_fsm_state25;
reg    grp_pow_generic_float_s_fu_232_ap_start_reg;
wire  signed [63:0] tmp_92_cast_fu_497_p1;
wire  signed [63:0] tmp_93_cast_fu_645_p1;
reg   [31:0] sum_fu_98;
reg   [15:0] kernel_val_2_V_2_w_fu_106;
wire   [15:0] kernel_val_V28_2_fu_1328_p3;
reg   [15:0] kernel_val_2_V_1_w_fu_110;
wire   [15:0] kernel_val_V27_2_fu_1265_p3;
reg   [15:0] kernel_val_0_V_0_w_fu_114;
wire   [15:0] kernel_val_V_2_fu_1234_p3;
reg   [15:0] kernel_val_2_V_0_w_fu_118;
wire   [15:0] kernel_val_V26_2_fu_1211_p3;
reg   [15:0] kernel_val_1_V_2_w_fu_122;
wire   [15:0] kernel_val_V1520_2_fu_1203_p3;
reg   [15:0] kernel_val_0_V_1_w_fu_126;
wire   [15:0] kernel_val_V16_2_fu_1156_p3;
reg   [15:0] kernel_val_1_V_1_w_fu_130;
wire   [15:0] kernel_val_V14_2_fu_1101_p3;
reg   [15:0] kernel_val_1_V_0_w_fu_134;
wire   [15:0] kernel_val_V13_2_fu_1062_p3;
reg   [15:0] kernel_val_0_V_2_w_fu_138;
wire   [15:0] kernel_val_V2_2_fu_1046_p3;
reg   [31:0] grp_fu_251_p0;
reg   [31:0] grp_fu_251_p1;
reg  signed [31:0] grp_fu_261_p0;
reg   [31:0] grp_fu_271_p0;
wire    ap_CS_fsm_state84;
reg   [63:0] grp_fu_282_p0;
reg   [63:0] grp_fu_282_p1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state47;
wire   [63:0] sigmaX_to_int_fu_351_p1;
wire   [10:0] tmp_fu_355_p4;
wire   [51:0] tmp_77_fu_365_p1;
wire   [0:0] notrhs_fu_375_p2;
wire   [0:0] notlhs_fu_369_p2;
wire   [0:0] tmp_65_fu_381_p2;
wire   [0:0] tmp_66_fu_295_p2;
wire   [0:0] tmp_69_fu_387_p2;
wire   [1:0] tmp_56_fu_418_p2;
wire   [3:0] tmp_75_fu_433_p3;
wire   [4:0] p_shl_cast_fu_441_p1;
wire   [4:0] tmp_57_cast_fu_429_p1;
wire   [1:0] tmp_61_fu_463_p2;
wire   [4:0] tmp_65_cast_fu_474_p1;
wire   [31:0] tmp_220_to_int_fu_483_p1;
wire   [31:0] tmp_220_neg_fu_486_p2;
wire   [3:0] tmp_84_fu_522_p3;
wire   [4:0] p_shl1_cast_fu_530_p1;
wire   [4:0] tmp_58_cast_fu_518_p1;
wire   [0:0] sel_tmp29_fu_552_p2;
wire   [0:0] sel_tmp30_fu_558_p2;
wire   [4:0] tmp_66_cast_fu_636_p1;
wire   [4:0] tmp_88_fu_640_p2;
wire   [1:0] tmp_90_fu_650_p2;
wire   [63:0] ireg_V_fu_662_p1;
wire   [62:0] tmp_89_fu_666_p1;
wire   [52:0] tmp_68_fu_701_p3;
wire   [11:0] tmp_67_fu_698_p1;
wire   [11:0] tmp_72_fu_730_p2;
wire   [11:0] tmp_73_fu_736_p2;
wire   [7:0] tmp_93_fu_750_p4;
wire   [53:0] p_Val2_64_fu_772_p3;
wire  signed [31:0] sh_amt_cast_fu_777_p1;
wire   [53:0] tmp_78_fu_794_p1;
wire   [53:0] tmp_79_fu_798_p2;
wire   [0:0] tmp_76_fu_789_p2;
wire   [15:0] tmp_96_fu_804_p1;
wire   [15:0] storemerge_fu_808_p3;
wire   [11:0] tmp_83_fu_823_p2;
wire   [31:0] tmp_176_cast_fu_828_p1;
wire   [0:0] tmp_97_fu_832_p3;
wire   [0:0] qb_fu_840_p3;
wire   [15:0] tmp_85_fu_846_p1;
wire   [15:0] p_Val2_65_fu_815_p3;
wire  signed [15:0] sh_amt_cast3_fu_861_p1;
wire   [0:0] sel_tmp1_fu_869_p2;
wire   [0:0] sel_tmp2_fu_874_p2;
wire   [0:0] sel_tmp6_fu_886_p2;
wire   [0:0] sel_tmp7_fu_891_p2;
wire   [15:0] sel_tmp3_fu_879_p3;
wire   [0:0] sel_tmp13_demorgan_fu_903_p2;
wire   [0:0] sel_tmp13_fu_907_p2;
wire   [0:0] sel_tmp14_fu_913_p2;
wire   [15:0] tmp_81_fu_864_p2;
wire   [15:0] sel_tmp8_fu_896_p3;
wire   [0:0] sel_tmp_fu_926_p2;
wire   [0:0] sel_tmp18_fu_932_p2;
wire   [0:0] tmp94_fu_938_p2;
wire   [0:0] sel_tmp19_fu_944_p2;
wire   [15:0] kernel_val_V2_fu_918_p3;
wire   [0:0] sel_tmp21_fu_957_p2;
wire   [0:0] sel_tmp22_fu_963_p2;
wire   [15:0] sel_tmp20_fu_949_p3;
wire   [0:0] sel_tmp25_fu_976_p2;
wire   [15:0] sel_tmp23_fu_968_p3;
wire   [0:0] sel_tmp27_fu_989_p2;
wire   [15:0] sel_tmp26_fu_981_p3;
wire   [0:0] sel_tmp32_fu_1002_p2;
wire   [15:0] sel_tmp28_fu_994_p3;
wire   [15:0] sel_tmp33_fu_1007_p3;
wire   [0:0] sel_tmp35_fu_1022_p2;
wire   [0:0] sel_tmp36_fu_1028_p2;
wire   [15:0] sel_tmp34_fu_1015_p3;
wire   [0:0] sel_tmp38_fu_1041_p2;
wire   [15:0] sel_tmp37_fu_1033_p3;
wire   [15:0] sel_tmp39_fu_1054_p3;
wire   [15:0] sel_tmp40_fu_1070_p3;
wire   [15:0] sel_tmp41_fu_1078_p3;
wire   [15:0] sel_tmp42_fu_1086_p3;
wire   [15:0] sel_tmp43_fu_1093_p3;
wire   [15:0] sel_tmp44_fu_1109_p3;
wire   [15:0] sel_tmp45_fu_1117_p3;
wire   [15:0] sel_tmp46_fu_1125_p3;
wire   [15:0] sel_tmp47_fu_1133_p3;
wire   [15:0] sel_tmp48_fu_1141_p3;
wire   [15:0] sel_tmp49_fu_1148_p3;
wire   [15:0] sel_tmp50_fu_1164_p3;
wire   [15:0] sel_tmp51_fu_1172_p3;
wire   [15:0] sel_tmp52_fu_1180_p3;
wire   [15:0] sel_tmp53_fu_1188_p3;
wire   [15:0] sel_tmp54_fu_1195_p3;
wire   [15:0] sel_tmp55_fu_1219_p3;
wire   [15:0] sel_tmp56_fu_1226_p3;
wire   [15:0] sel_tmp57_fu_1242_p3;
wire   [15:0] sel_tmp58_fu_1250_p3;
wire   [15:0] sel_tmp59_fu_1257_p3;
wire   [15:0] sel_tmp60_fu_1273_p3;
wire   [15:0] sel_tmp61_fu_1281_p3;
wire   [15:0] sel_tmp62_fu_1289_p3;
wire   [15:0] sel_tmp63_fu_1297_p3;
wire   [15:0] sel_tmp64_fu_1305_p3;
wire   [15:0] sel_tmp65_fu_1313_p3;
wire   [15:0] sel_tmp66_fu_1320_p3;
reg   [1:0] grp_fu_251_opcode;

// power-on initialization
initial begin
#0 ap_CS_fsm = 120'd1;
#0 grp_pow_generic_float_s_fu_213_ap_start_reg = 1'b0;
#0 grp_pow_generic_float_s_fu_232_ap_start_reg = 1'b0;
end

getGaussianKernelncg #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kval_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kval_address0),
    .ce0(kval_ce0),
    .we0(kval_we0),
    .d0(kval_d0),
    .q0(kval_q0)
);

pow_generic_float_s grp_pow_generic_float_s_fu_213(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_generic_float_s_fu_213_ap_start),
    .ap_done(grp_pow_generic_float_s_fu_213_ap_done),
    .ap_idle(grp_pow_generic_float_s_fu_213_ap_idle),
    .ap_ready(grp_pow_generic_float_s_fu_213_ap_ready),
    .base_r(x_assign_reg_1461),
    .ap_return(grp_pow_generic_float_s_fu_213_ap_return)
);

pow_generic_float_s grp_pow_generic_float_s_fu_232(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_generic_float_s_fu_232_ap_start),
    .ap_done(grp_pow_generic_float_s_fu_232_ap_done),
    .ap_idle(grp_pow_generic_float_s_fu_232_ap_idle),
    .ap_ready(grp_pow_generic_float_s_fu_232_ap_ready),
    .base_r(grp_fu_261_p1),
    .ap_return(grp_pow_generic_float_s_fu_232_ap_return)
);

fpag_gaus_faddfsuocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpag_gaus_faddfsuocq_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_251_p0),
    .din1(grp_fu_251_p1),
    .opcode(grp_fu_251_opcode),
    .ce(1'b1),
    .dout(grp_fu_251_p2)
);

fpag_gaus_fdiv_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpag_gaus_fdiv_32pcA_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kval_q0),
    .din1(sum_fu_98),
    .ce(1'b1),
    .dout(grp_fu_255_p2)
);

fpag_gaus_sitofp_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpag_gaus_sitofp_qcK_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_261_p0),
    .ce(1'b1),
    .dout(grp_fu_261_p1)
);

fpag_gaus_fptruncrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fpag_gaus_fptruncrcU_U32(
    .din0(tmp_60_reg_1509),
    .dout(index1_fu_265_p1)
);

fpag_gaus_fptruncrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fpag_gaus_fptruncrcU_U33(
    .din0(tmp_63_reg_1514),
    .dout(index2_fu_268_p1)
);

fpag_gaus_fpext_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpag_gaus_fpext_3sc4_U34(
    .din0(grp_fu_271_p0),
    .dout(grp_fu_271_p1)
);

fpag_gaus_fpext_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpag_gaus_fpext_3sc4_U35(
    .din0(tmp_i_i1_reg_1494),
    .dout(tmp_62_fu_274_p1)
);

fpag_gaus_fexp_32tde #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpag_gaus_fexp_32tde_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(reg_340),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

fpag_gaus_dmul_64udo #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
fpag_gaus_dmul_64udo_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_282_p0),
    .din1(grp_fu_282_p1),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

fpag_gaus_ddiv_64vdy #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
fpag_gaus_ddiv_64vdy_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_59_reg_1499),
    .din1(reg_333),
    .ce(1'b1),
    .dout(grp_fu_287_p2)
);

fpag_gaus_ddiv_64vdy #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
fpag_gaus_ddiv_64vdy_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_62_reg_1504),
    .din1(reg_333),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

fpag_gaus_dcmp_64wdI #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
fpag_gaus_dcmp_64wdI_U40(
    .din0(sigmaX),
    .din1(64'd0),
    .opcode(5'd5),
    .dout(tmp_66_fu_295_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_float_s_fu_213_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state25) & (1'b1 == ap_CS_fsm_state24))) begin
            grp_pow_generic_float_s_fu_213_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_float_s_fu_213_ap_ready == 1'b1)) begin
            grp_pow_generic_float_s_fu_213_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_float_s_fu_232_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state25) & (1'b1 == ap_CS_fsm_state24))) begin
            grp_pow_generic_float_s_fu_232_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_float_s_fu_232_ap_ready == 1'b1)) begin
            grp_pow_generic_float_s_fu_232_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state100))) begin
        i1_reg_189 <= i_2_reg_1543;
    end else if (((exitcond1_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        i1_reg_189 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_451_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i_reg_166 <= i_1_reg_1397;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i_reg_166 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        j2_reg_201 <= j_2_reg_1575;
    end else if (((exitcond2_fu_506_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        j2_reg_201 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_reg_178 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        j_reg_178 <= j_1_reg_1474;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        sum_fu_98 <= reg_340;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        sum_fu_98 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        F2_reg_1639 <= F2_fu_718_p2;
        icmp_reg_1658 <= icmp_fu_760_p2;
        p_Result_s_reg_1629[51 : 0] <= p_Result_s_fu_708_p1[51 : 0];
        sh_amt_reg_1651 <= sh_amt_fu_742_p3;
        tmp_71_reg_1645 <= tmp_71_fu_724_p2;
        tmp_82_reg_1663 <= tmp_82_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        exp_tmp_V_reg_1613 <= {{ireg_V_fu_662_p1[62:52]}};
        isneg_reg_1606 <= ireg_V_fu_662_p1[32'd63];
        tmp_70_reg_1623 <= tmp_70_fu_692_p2;
        tmp_91_reg_1618 <= tmp_91_fu_688_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_1_reg_1397 <= i_1_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        i_2_reg_1543 <= i_2_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        index1_reg_1519 <= index1_fu_265_p1;
        index2_reg_1524 <= index2_fu_268_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_1_reg_1474 <= j_1_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        j_2_reg_1575 <= j_2_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        kernel_val_0_V_0_w_fu_114 <= kernel_val_V_2_fu_1234_p3;
        kernel_val_0_V_1_w_fu_126 <= kernel_val_V16_2_fu_1156_p3;
        kernel_val_0_V_2_w_fu_138 <= kernel_val_V2_2_fu_1046_p3;
        kernel_val_1_V_0_w_fu_134 <= kernel_val_V13_2_fu_1062_p3;
        kernel_val_1_V_1_w_fu_130 <= kernel_val_V14_2_fu_1101_p3;
        kernel_val_1_V_2_w_fu_122 <= kernel_val_V1520_2_fu_1203_p3;
        kernel_val_2_V_0_w_fu_118 <= kernel_val_V26_2_fu_1211_p3;
        kernel_val_2_V_1_w_fu_110 <= kernel_val_V27_2_fu_1265_p3;
        kernel_val_2_V_2_w_fu_106 <= kernel_val_V28_2_fu_1328_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state100))) begin
        kval_addr_1_reg_1580 <= tmp_93_cast_fu_645_p1;
        tmp_94_reg_1585 <= tmp_94_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((isneg_reg_1606 == 1'd1) & (1'b1 == ap_CS_fsm_state118))) begin
        man_V_1_reg_1634 <= man_V_1_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        p_Val2_66_reg_1679 <= p_Val2_66_fu_850_p2;
        sel_tmp6_demorgan_reg_1684 <= sel_tmp6_demorgan_fu_856_p2;
        tmp_74_reg_1668 <= tmp_74_fu_780_p2;
        tmp_92_reg_1673 <= tmp_92_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_333 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state83))) begin
        reg_340 <= grp_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_506_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        sel_tmp16_reg_1553 <= sel_tmp16_fu_540_p2;
        sel_tmp24_reg_1559 <= sel_tmp24_fu_546_p2;
        sel_tmp31_reg_1566 <= sel_tmp31_fu_564_p2;
        tmp_86_reg_1548 <= tmp_86_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_59_reg_1499 <= grp_fu_271_p1;
        tmp_62_reg_1504 <= tmp_62_fu_274_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        tmp_60_reg_1509 <= grp_fu_287_p2;
        tmp_63_reg_1514 <= grp_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_80_reg_1466 <= tmp_80_fu_445_p2;
        x_assign_reg_1461 <= grp_fu_261_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        tmp_87_reg_1484 <= tmp_87_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_i_i1_reg_1494 <= grp_pow_generic_float_s_fu_232_ap_return;
        tmp_i_i_reg_1489 <= grp_pow_generic_float_s_fu_213_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        tmp_i_i2_reg_1534 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        v_assign_reg_1601 <= grp_fu_255_p2;
    end
end

always @ (*) begin
    if ((((exitcond2_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_251_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_251_opcode = 2'd0;
    end else begin
        grp_fu_251_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_251_p0 = sum_fu_98;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_251_p0 = tmp_64_fu_492_p1;
    end else begin
        grp_fu_251_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_251_p1 = tmp_i_i2_reg_1534;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_251_p1 = index2_reg_1524;
    end else begin
        grp_fu_251_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_261_p0 = x_assign_s_fu_469_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_261_p0 = x_assign1_fu_424_p1;
    end else begin
        grp_fu_261_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_271_p0 = v_assign_reg_1601;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_271_p0 = tmp_i_i_reg_1489;
    end else begin
        grp_fu_271_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_282_p0 = reg_333;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_282_p0 = sigmaX_assign_fu_393_p3;
    end else begin
        grp_fu_282_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_282_p1 = sigmaX_assign_fu_393_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_282_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_282_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        kval_address0 = kval_addr_1_reg_1580;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        kval_address0 = tmp_93_cast_fu_645_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        kval_address0 = tmp_92_cast_fu_497_p1;
    end else begin
        kval_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state93))) begin
        kval_ce0 = 1'b1;
    end else begin
        kval_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        kval_d0 = grp_fu_255_p2;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        kval_d0 = tmp_i_i2_reg_1534;
    end else begin
        kval_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state93))) begin
        kval_we0 = 1'b1;
    end else begin
        kval_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((exitcond1_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((exitcond3_fu_451_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state99 : begin
            if (((exitcond2_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state100 : begin
            if (((exitcond_fu_624_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_718_p2 = (12'd1075 - tmp_67_fu_698_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_NS_fsm_state25 = ap_NS_fsm[32'd24];

assign ap_return_0 = kernel_val_0_V_0_w_fu_114;

assign ap_return_1 = kernel_val_0_V_1_w_fu_126;

assign ap_return_2 = kernel_val_0_V_2_w_fu_138;

assign ap_return_3 = kernel_val_1_V_0_w_fu_134;

assign ap_return_4 = kernel_val_1_V_1_w_fu_130;

assign ap_return_5 = kernel_val_1_V_2_w_fu_122;

assign ap_return_6 = kernel_val_2_V_0_w_fu_118;

assign ap_return_7 = kernel_val_2_V_1_w_fu_110;

assign ap_return_8 = kernel_val_2_V_2_w_fu_106;

assign exitcond1_fu_406_p2 = ((i_reg_166 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond2_fu_506_p2 = ((i1_reg_189 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond3_fu_451_p2 = ((j_reg_178 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_fu_624_p2 = ((j2_reg_201 == 2'd3) ? 1'b1 : 1'b0);

assign grp_pow_generic_float_s_fu_213_ap_start = grp_pow_generic_float_s_fu_213_ap_start_reg;

assign grp_pow_generic_float_s_fu_232_ap_start = grp_pow_generic_float_s_fu_232_ap_start_reg;

assign i_1_fu_412_p2 = (i_reg_166 + 2'd1);

assign i_2_fu_512_p2 = (i1_reg_189 + 2'd1);

assign icmp_fu_760_p2 = ((tmp_93_fu_750_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_662_p1 = grp_fu_271_p1;

assign j_1_fu_457_p2 = (j_reg_178 + 2'd1);

assign j_2_fu_630_p2 = (j2_reg_201 + 2'd1);

assign kernel_val_V13_2_fu_1062_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_1_V_0_w_fu_134 : sel_tmp39_fu_1054_p3);

assign kernel_val_V14_2_fu_1101_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_1_V_1_w_fu_130 : sel_tmp43_fu_1093_p3);

assign kernel_val_V1520_2_fu_1203_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_1_V_2_w_fu_122 : sel_tmp54_fu_1195_p3);

assign kernel_val_V16_2_fu_1156_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_0_V_1_w_fu_126 : sel_tmp49_fu_1148_p3);

assign kernel_val_V26_2_fu_1211_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_2_V_0_w_fu_118);

assign kernel_val_V27_2_fu_1265_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_2_V_1_w_fu_110 : sel_tmp59_fu_1257_p3);

assign kernel_val_V28_2_fu_1328_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp66_fu_1320_p3);

assign kernel_val_V2_2_fu_1046_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp37_fu_1033_p3);

assign kernel_val_V2_fu_918_p3 = ((sel_tmp14_fu_913_p2[0:0] === 1'b1) ? tmp_81_fu_864_p2 : sel_tmp8_fu_896_p3);

assign kernel_val_V_2_fu_1234_p3 = ((sel_tmp38_fu_1041_p2[0:0] === 1'b1) ? kernel_val_0_V_0_w_fu_114 : sel_tmp56_fu_1226_p3);

assign man_V_1_fu_712_p2 = (54'd0 - p_Result_s_fu_708_p1);

assign notlhs_fu_369_p2 = ((tmp_fu_355_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs_fu_375_p2 = ((tmp_77_fu_365_p1 == 52'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_708_p1 = tmp_68_fu_701_p3;

assign p_Val2_64_fu_772_p3 = ((isneg_reg_1606[0:0] === 1'b1) ? man_V_1_reg_1634 : p_Result_s_reg_1629);

assign p_Val2_65_fu_815_p3 = ((tmp_76_fu_789_p2[0:0] === 1'b1) ? tmp_96_fu_804_p1 : storemerge_fu_808_p3);

assign p_Val2_66_fu_850_p2 = (tmp_85_fu_846_p1 + p_Val2_65_fu_815_p3);

assign p_shl1_cast_fu_530_p1 = tmp_84_fu_522_p3;

assign p_shl_cast_fu_441_p1 = tmp_75_fu_433_p3;

assign qb_fu_840_p3 = ((tmp_82_reg_1663[0:0] === 1'b1) ? isneg_reg_1606 : tmp_97_fu_832_p3);

assign sel_tmp13_demorgan_fu_903_p2 = (tmp_71_reg_1645 | sel_tmp6_demorgan_reg_1684);

assign sel_tmp13_fu_907_p2 = (sel_tmp13_demorgan_fu_903_p2 ^ 1'd1);

assign sel_tmp14_fu_913_p2 = (sel_tmp13_fu_907_p2 & icmp_reg_1658);

assign sel_tmp16_fu_540_p2 = ((i1_reg_189 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp18_fu_932_p2 = ((j2_reg_201 != 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp19_fu_944_p2 = (tmp94_fu_938_p2 & sel_tmp16_reg_1553);

assign sel_tmp1_fu_869_p2 = (tmp_70_reg_1623 ^ 1'd1);

assign sel_tmp20_fu_949_p3 = ((sel_tmp19_fu_944_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_0_V_2_w_fu_138);

assign sel_tmp21_fu_957_p2 = ((j2_reg_201 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp22_fu_963_p2 = (sel_tmp21_fu_957_p2 & sel_tmp16_reg_1553);

assign sel_tmp23_fu_968_p3 = ((sel_tmp22_fu_963_p2[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp20_fu_949_p3);

assign sel_tmp24_fu_546_p2 = ((i1_reg_189 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp25_fu_976_p2 = (tmp94_fu_938_p2 & sel_tmp24_reg_1559);

assign sel_tmp26_fu_981_p3 = ((sel_tmp25_fu_976_p2[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp23_fu_968_p3);

assign sel_tmp27_fu_989_p2 = (sel_tmp24_reg_1559 & sel_tmp21_fu_957_p2);

assign sel_tmp28_fu_994_p3 = ((sel_tmp27_fu_989_p2[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp26_fu_981_p3);

assign sel_tmp29_fu_552_p2 = ((i1_reg_189 != 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_874_p2 = (tmp_74_reg_1668 & sel_tmp1_fu_869_p2);

assign sel_tmp30_fu_558_p2 = ((i1_reg_189 != 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp31_fu_564_p2 = (sel_tmp30_fu_558_p2 & sel_tmp29_fu_552_p2);

assign sel_tmp32_fu_1002_p2 = (sel_tmp31_reg_1566 & sel_tmp21_fu_957_p2);

assign sel_tmp33_fu_1007_p3 = ((sel_tmp32_fu_1002_p2[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp28_fu_994_p3);

assign sel_tmp34_fu_1015_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp33_fu_1007_p3);

assign sel_tmp35_fu_1022_p2 = ((j2_reg_201 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp36_fu_1028_p2 = (sel_tmp35_fu_1022_p2 & sel_tmp24_reg_1559);

assign sel_tmp37_fu_1033_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_0_V_2_w_fu_138 : sel_tmp34_fu_1015_p3);

assign sel_tmp38_fu_1041_p2 = (sel_tmp35_fu_1022_p2 & sel_tmp31_reg_1566);

assign sel_tmp39_fu_1054_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_1_V_0_w_fu_134);

assign sel_tmp3_fu_879_p3 = ((sel_tmp2_fu_874_p2[0:0] === 1'b1) ? tmp_92_reg_1673 : 16'd0);

assign sel_tmp40_fu_1070_p3 = ((sel_tmp27_fu_989_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_1_V_1_w_fu_130);

assign sel_tmp41_fu_1078_p3 = ((sel_tmp32_fu_1002_p2[0:0] === 1'b1) ? kernel_val_1_V_1_w_fu_130 : sel_tmp40_fu_1070_p3);

assign sel_tmp42_fu_1086_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_1_V_1_w_fu_130 : sel_tmp41_fu_1078_p3);

assign sel_tmp43_fu_1093_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_1_V_1_w_fu_130 : sel_tmp42_fu_1086_p3);

assign sel_tmp44_fu_1109_p3 = ((sel_tmp22_fu_963_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_0_V_1_w_fu_126);

assign sel_tmp45_fu_1117_p3 = ((sel_tmp25_fu_976_p2[0:0] === 1'b1) ? kernel_val_0_V_1_w_fu_126 : sel_tmp44_fu_1109_p3);

assign sel_tmp46_fu_1125_p3 = ((sel_tmp27_fu_989_p2[0:0] === 1'b1) ? kernel_val_0_V_1_w_fu_126 : sel_tmp45_fu_1117_p3);

assign sel_tmp47_fu_1133_p3 = ((sel_tmp32_fu_1002_p2[0:0] === 1'b1) ? kernel_val_0_V_1_w_fu_126 : sel_tmp46_fu_1125_p3);

assign sel_tmp48_fu_1141_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_0_V_1_w_fu_126 : sel_tmp47_fu_1133_p3);

assign sel_tmp49_fu_1148_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_0_V_1_w_fu_126 : sel_tmp48_fu_1141_p3);

assign sel_tmp50_fu_1164_p3 = ((sel_tmp25_fu_976_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_1_V_2_w_fu_122);

assign sel_tmp51_fu_1172_p3 = ((sel_tmp27_fu_989_p2[0:0] === 1'b1) ? kernel_val_1_V_2_w_fu_122 : sel_tmp50_fu_1164_p3);

assign sel_tmp52_fu_1180_p3 = ((sel_tmp32_fu_1002_p2[0:0] === 1'b1) ? kernel_val_1_V_2_w_fu_122 : sel_tmp51_fu_1172_p3);

assign sel_tmp53_fu_1188_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_1_V_2_w_fu_122 : sel_tmp52_fu_1180_p3);

assign sel_tmp54_fu_1195_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_1_V_2_w_fu_122 : sel_tmp53_fu_1188_p3);

assign sel_tmp55_fu_1219_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_0_V_0_w_fu_114);

assign sel_tmp56_fu_1226_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_0_V_0_w_fu_114 : sel_tmp55_fu_1219_p3);

assign sel_tmp57_fu_1242_p3 = ((sel_tmp32_fu_1002_p2[0:0] === 1'b1) ? kernel_val_V2_fu_918_p3 : kernel_val_2_V_1_w_fu_110);

assign sel_tmp58_fu_1250_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_2_V_1_w_fu_110 : sel_tmp57_fu_1242_p3);

assign sel_tmp59_fu_1257_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_2_V_1_w_fu_110 : sel_tmp58_fu_1250_p3);

assign sel_tmp60_fu_1273_p3 = ((sel_tmp19_fu_944_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : kernel_val_V2_fu_918_p3);

assign sel_tmp61_fu_1281_p3 = ((sel_tmp22_fu_963_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp60_fu_1273_p3);

assign sel_tmp62_fu_1289_p3 = ((sel_tmp25_fu_976_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp61_fu_1281_p3);

assign sel_tmp63_fu_1297_p3 = ((sel_tmp27_fu_989_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp62_fu_1289_p3);

assign sel_tmp64_fu_1305_p3 = ((sel_tmp32_fu_1002_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp63_fu_1297_p3);

assign sel_tmp65_fu_1313_p3 = ((tmp_94_reg_1585[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp64_fu_1305_p3);

assign sel_tmp66_fu_1320_p3 = ((sel_tmp36_fu_1028_p2[0:0] === 1'b1) ? kernel_val_2_V_2_w_fu_106 : sel_tmp65_fu_1313_p3);

assign sel_tmp6_demorgan_fu_856_p2 = (tmp_74_fu_780_p2 | tmp_70_reg_1623);

assign sel_tmp6_fu_886_p2 = (sel_tmp6_demorgan_reg_1684 ^ 1'd1);

assign sel_tmp7_fu_891_p2 = (tmp_71_reg_1645 & sel_tmp6_fu_886_p2);

assign sel_tmp8_fu_896_p3 = ((sel_tmp7_fu_891_p2[0:0] === 1'b1) ? p_Val2_66_reg_1679 : sel_tmp3_fu_879_p3);

assign sel_tmp_fu_926_p2 = ((j2_reg_201 != 2'd0) ? 1'b1 : 1'b0);

assign sh_amt_cast3_fu_861_p1 = sh_amt_reg_1651;

assign sh_amt_cast_fu_777_p1 = sh_amt_reg_1651;

assign sh_amt_fu_742_p3 = ((tmp_71_fu_724_p2[0:0] === 1'b1) ? tmp_72_fu_730_p2 : tmp_73_fu_736_p2);

assign sigmaX_assign_fu_393_p3 = ((tmp_69_fu_387_p2[0:0] === 1'b1) ? 64'd4605380978949069210 : sigmaX);

assign sigmaX_to_int_fu_351_p1 = sigmaX;

assign storemerge_fu_808_p3 = ((isneg_reg_1606[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign tmp94_fu_938_p2 = (sel_tmp_fu_926_p2 & sel_tmp18_fu_932_p2);

assign tmp_176_cast_fu_828_p1 = tmp_83_fu_823_p2;

assign tmp_220_neg_fu_486_p2 = (tmp_220_to_int_fu_483_p1 ^ 32'd2147483648);

assign tmp_220_to_int_fu_483_p1 = index1_reg_1519;

assign tmp_56_fu_418_p2 = ($signed(i_reg_166) + $signed(2'd3));

assign tmp_57_cast_fu_429_p1 = i_reg_166;

assign tmp_58_cast_fu_518_p1 = i1_reg_189;

assign tmp_61_fu_463_p2 = ($signed(j_reg_178) + $signed(2'd3));

assign tmp_64_fu_492_p1 = tmp_220_neg_fu_486_p2;

assign tmp_65_cast_fu_474_p1 = j_reg_178;

assign tmp_65_fu_381_p2 = (notrhs_fu_375_p2 | notlhs_fu_369_p2);

assign tmp_66_cast_fu_636_p1 = j2_reg_201;

assign tmp_67_fu_698_p1 = exp_tmp_V_reg_1613;

assign tmp_68_fu_701_p3 = {{1'd1}, {tmp_91_reg_1618}};

assign tmp_69_fu_387_p2 = (tmp_66_fu_295_p2 & tmp_65_fu_381_p2);

assign tmp_70_fu_692_p2 = ((tmp_89_fu_666_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_71_fu_724_p2 = (($signed(F2_fu_718_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign tmp_72_fu_730_p2 = ($signed(12'd4082) + $signed(F2_fu_718_p2));

assign tmp_73_fu_736_p2 = (12'd14 - F2_fu_718_p2);

assign tmp_74_fu_780_p2 = ((F2_reg_1639 == 12'd14) ? 1'b1 : 1'b0);

assign tmp_75_fu_433_p3 = {{i_reg_166}, {2'd0}};

assign tmp_76_fu_789_p2 = ((sh_amt_reg_1651 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_77_fu_365_p1 = sigmaX_to_int_fu_351_p1[51:0];

assign tmp_78_fu_794_p1 = $unsigned(sh_amt_cast_fu_777_p1);

assign tmp_79_fu_798_p2 = $signed(p_Val2_64_fu_772_p3) >>> tmp_78_fu_794_p1;

assign tmp_80_fu_445_p2 = (p_shl_cast_fu_441_p1 - tmp_57_cast_fu_429_p1);

assign tmp_81_fu_864_p2 = tmp_92_reg_1673 << sh_amt_cast3_fu_861_p1;

assign tmp_82_fu_766_p2 = (($signed(tmp_72_fu_730_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_83_fu_823_p2 = ($signed(12'd4081) + $signed(F2_reg_1639));

assign tmp_84_fu_522_p3 = {{i1_reg_189}, {2'd0}};

assign tmp_85_fu_846_p1 = qb_fu_840_p3;

assign tmp_86_fu_534_p2 = (p_shl1_cast_fu_530_p1 - tmp_58_cast_fu_518_p1);

assign tmp_87_fu_478_p2 = (tmp_80_reg_1466 + tmp_65_cast_fu_474_p1);

assign tmp_88_fu_640_p2 = (tmp_66_cast_fu_636_p1 + tmp_86_reg_1548);

assign tmp_89_fu_666_p1 = ireg_V_fu_662_p1[62:0];

assign tmp_90_fu_650_p2 = (j2_reg_201 | i1_reg_189);

assign tmp_91_fu_688_p1 = ireg_V_fu_662_p1[51:0];

assign tmp_92_cast_fu_497_p1 = $signed(tmp_87_reg_1484);

assign tmp_92_fu_785_p1 = p_Val2_64_fu_772_p3[15:0];

assign tmp_93_cast_fu_645_p1 = $signed(tmp_88_fu_640_p2);

assign tmp_93_fu_750_p4 = {{sh_amt_fu_742_p3[11:4]}};

assign tmp_94_fu_656_p2 = ((tmp_90_fu_650_p2 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_96_fu_804_p1 = tmp_79_fu_798_p2[15:0];

assign tmp_97_fu_832_p3 = p_Val2_64_fu_772_p3[tmp_176_cast_fu_828_p1];

assign tmp_fu_355_p4 = {{sigmaX_to_int_fu_351_p1[62:52]}};

assign x_assign1_fu_424_p1 = $signed(tmp_56_fu_418_p2);

assign x_assign_s_fu_469_p1 = $signed(tmp_61_fu_463_p2);

always @ (posedge ap_clk) begin
    p_Result_s_reg_1629[53:52] <= 2'b01;
end

endmodule //getGaussianKernel
